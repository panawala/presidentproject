<Application xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml" xmlns:d="http://schemas.microsoft.com/expression/blend/2008" xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" xmlns:Microsoft_Windows_Themes="clr-namespace:Microsoft.Windows.Themes;assembly=PresentationFramework.Aero" xmlns:ed="http://schemas.microsoft.com/expression/2010/drawing" mc:Ignorable="d"
	x:Class="WpfApplication3.App"
	StartupUri="Login.xaml">
	<Application.Resources>
		<Style  TargetType ="{x:Type Hyperlink}" >
            <Setter  Property ="Foreground"  Value ="#209AC2" />
            <!-- 清除文字修饰(去掉下划线) -->
            <Setter  Property ="TextBlock.TextDecorations"    Value ="{x:Null}" />
            <Style.Triggers >
                <Trigger  Property ="IsMouseOver"  Value ="True" >
                    <Setter  Property ="Foreground"  Value ="#F27D00"   />
                    <!-- 在鼠标悬停时显示下划线 -->
                    <Setter  Property ="TextBlock.TextDecorations" >
                        <Setter.Value >
                            <TextDecorationCollection >
                                <TextDecoration  Location ="Underline" />
                            </TextDecorationCollection>
                        </Setter.Value>
                    </Setter>
                </Trigger>
            </Style.Triggers>
        </Style>

		<!-- Resources scoped at the Application level should be defined here. -->
        <SolidColorBrush x:Key="NavigationPanelArrowBrush" Color="#d0d3d6"/>
        <Color x:Key="#122122122">#FF7A7A7A</Color>
        <LinearGradientBrush x:Key="GreenGredient" EndPoint="1.003,0.493" StartPoint="-0.017,0.493">
        	<GradientStop Color="#FF139698" Offset="1"/>
        	<GradientStop Color="#FF13BA85"/>
        </LinearGradientBrush>
        <LinearGradientBrush x:Key="Btnbg" EndPoint="1.003,0.493" StartPoint="-0.017,0.493">
        	<GradientStop Color="{DynamicResource #122122122}" Offset="1"/>
        	<GradientStop Color="#FF7A7A7A"/>
        </LinearGradientBrush>
        <Color x:Key="GreenLeft">#FF13BA85</Color>
        <Color x:Key="GreenRight">#FF139698</Color>
        <Style x:Key="BtnGreenNormal" TargetType="{x:Type Button}">
        	<Setter Property="Template">
        		<Setter.Value>
        			<ControlTemplate TargetType="{x:Type Button}">
        				<ControlTemplate.Resources>
        					<Storyboard x:Key="Storyboard1"/>
        				</ControlTemplate.Resources>
        				<Grid>
        					<VisualStateManager.VisualStateGroups>
        						<VisualStateGroup x:Name="CommonStates">
        							<VisualState x:Name="Normal">
        								<Storyboard>
        									<ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Shape.Fill).(GradientBrush.GradientStops)[1].(GradientStop.Color)" Storyboard.TargetName="rectangle">
        										<EasingColorKeyFrame KeyTime="0" Value="{StaticResource #122122122}"/>
        									</ColorAnimationUsingKeyFrames>
        									<ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Shape.Fill).(GradientBrush.GradientStops)[0].(GradientStop.Color)" Storyboard.TargetName="rectangle">
        										<EasingColorKeyFrame KeyTime="0" Value="{StaticResource #122122122}"/>
        									</ColorAnimationUsingKeyFrames>
        								</Storyboard>
        							</VisualState>
        							<VisualState x:Name="MouseOver">
        								<Storyboard>
        									<ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Shape.Fill).(GradientBrush.GradientStops)[0].(GradientStop.Color)" Storyboard.TargetName="rectangle">
        										<EasingColorKeyFrame KeyTime="0" Value="{StaticResource GreenLeft}"/>
        									</ColorAnimationUsingKeyFrames>
        									<ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Shape.Fill).(GradientBrush.GradientStops)[1].(GradientStop.Color)" Storyboard.TargetName="rectangle">
        										<EasingColorKeyFrame KeyTime="0" Value="{StaticResource GreenRight}"/>
        									</ColorAnimationUsingKeyFrames>
        									<DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(Shape.Fill).(GradientBrush.GradientStops)[0].(GradientStop.Offset)" Storyboard.TargetName="rectangle">
        										<EasingDoubleKeyFrame KeyTime="0" Value="0"/>
        									</DoubleAnimationUsingKeyFrames>
        									<PointAnimationUsingKeyFrames Storyboard.TargetProperty="(Shape.Fill).(LinearGradientBrush.StartPoint)" Storyboard.TargetName="rectangle">
        										<EasingPointKeyFrame KeyTime="0" Value="-0.024,0.471"/>
        									</PointAnimationUsingKeyFrames>
        									<PointAnimationUsingKeyFrames Storyboard.TargetProperty="(Shape.Fill).(LinearGradientBrush.EndPoint)" Storyboard.TargetName="rectangle">
        										<EasingPointKeyFrame KeyTime="0" Value="1.001,0.522"/>
        									</PointAnimationUsingKeyFrames>
        								</Storyboard>
        							</VisualState>
        							<VisualState x:Name="Pressed">
        								<Storyboard>
        									<ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Shape.Fill).(GradientBrush.GradientStops)[0].(GradientStop.Color)" Storyboard.TargetName="rectangle">
        										<EasingColorKeyFrame KeyTime="0" Value="{StaticResource GreenLeft}"/>
        									</ColorAnimationUsingKeyFrames>
        									<ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Shape.Fill).(GradientBrush.GradientStops)[1].(GradientStop.Color)" Storyboard.TargetName="rectangle">
        										<EasingColorKeyFrame KeyTime="0" Value="{StaticResource GreenRight}"/>
        									</ColorAnimationUsingKeyFrames>
        									<DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(Shape.Fill).(GradientBrush.GradientStops)[0].(GradientStop.Offset)" Storyboard.TargetName="rectangle">
        										<EasingDoubleKeyFrame KeyTime="0" Value="0"/>
        									</DoubleAnimationUsingKeyFrames>
        									<PointAnimationUsingKeyFrames Storyboard.TargetProperty="(Shape.Fill).(LinearGradientBrush.StartPoint)" Storyboard.TargetName="rectangle">
        										<EasingPointKeyFrame KeyTime="0" Value="-0.024,0.471"/>
        									</PointAnimationUsingKeyFrames>
        									<PointAnimationUsingKeyFrames Storyboard.TargetProperty="(Shape.Fill).(LinearGradientBrush.EndPoint)" Storyboard.TargetName="rectangle">
        										<EasingPointKeyFrame KeyTime="0" Value="1.001,0.522"/>
        									</PointAnimationUsingKeyFrames>
        								</Storyboard>
        							</VisualState>
        							<VisualState x:Name="Disabled">
        								<Storyboard>
        									<ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Shape.Fill).(GradientBrush.GradientStops)[0].(GradientStop.Color)" Storyboard.TargetName="rectangle">
        										<EasingColorKeyFrame KeyTime="0" Value="{StaticResource #122122122}"/>
        									</ColorAnimationUsingKeyFrames>
        									<ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Shape.Fill).(GradientBrush.GradientStops)[1].(GradientStop.Color)" Storyboard.TargetName="rectangle">
        										<EasingColorKeyFrame KeyTime="0" Value="{StaticResource #122122122}"/>
        									</ColorAnimationUsingKeyFrames>
        								</Storyboard>
        							</VisualState>
        						</VisualStateGroup>
        					</VisualStateManager.VisualStateGroups>
        					<Rectangle x:Name="rectangle" RadiusY="8" RadiusX="8" RenderTransformOrigin="0.5,0.5">
        						<Rectangle.Fill>
        							<LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
        								<GradientStop Color="{DynamicResource #122122122}" Offset="0"/>
        								<GradientStop Color="{DynamicResource #122122122}" Offset="1"/>
        							</LinearGradientBrush>
        						</Rectangle.Fill>
        						<Rectangle.RenderTransform>
        							<TransformGroup>
        								<ScaleTransform/>
        								<SkewTransform/>
        								<RotateTransform/>
        								<TranslateTransform/>
        							</TransformGroup>
        						</Rectangle.RenderTransform>
        					</Rectangle>
        					<ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
        				</Grid>
        				<ControlTemplate.Triggers>
        					<Trigger Property="IsFocused" Value="True"/>
        					<Trigger Property="IsDefaulted" Value="True"/>
        					<Trigger Property="IsMouseOver" Value="True"/>
        					<Trigger Property="IsCancel" Value="False">
        						<Trigger.EnterActions>
        							<BeginStoryboard Storyboard="{StaticResource Storyboard1}"/>
        						</Trigger.EnterActions>
        					</Trigger>
        					<Trigger Property="IsEnabled" Value="False"/>
        				</ControlTemplate.Triggers>
        			</ControlTemplate>
        		</Setter.Value>
        	</Setter>
        </Style>
		<Style x:Key="ListBoxItemGreen" TargetType="{x:Type ListBoxItem}">
			<Setter Property="Template">
				<Setter.Value>
					<ControlTemplate TargetType="{x:Type ListBoxItem}">
						<Grid>
							<VisualStateManager.VisualStateGroups>
								<VisualStateGroup x:Name="CommonStates">
									<VisualStateGroup.Transitions>
										<VisualTransition GeneratedDuration="0:0:0.1"/>
									</VisualStateGroup.Transitions>
									<VisualState x:Name="Normal">
										<Storyboard>
											<PointAnimationUsingKeyFrames Storyboard.TargetProperty="(Shape.Fill).(LinearGradientBrush.StartPoint)" Storyboard.TargetName="rectangle">
												<EasingPointKeyFrame KeyTime="0" Value="-0.004,0.506"/>
											</PointAnimationUsingKeyFrames>
											<PointAnimationUsingKeyFrames Storyboard.TargetProperty="(Shape.Fill).(LinearGradientBrush.EndPoint)" Storyboard.TargetName="rectangle">
												<EasingPointKeyFrame KeyTime="0" Value="1.008,0.504"/>
											</PointAnimationUsingKeyFrames>
										</Storyboard>
									</VisualState>
									<VisualState x:Name="MouseOver"/>
									<VisualState x:Name="Disabled"/>
								</VisualStateGroup>
								<VisualStateGroup x:Name="SelectionStates">
									<VisualStateGroup.Transitions>
										<VisualTransition GeneratedDuration="0:0:0.1"/>
									</VisualStateGroup.Transitions>
									<VisualState x:Name="Unselected"/>
									<VisualState x:Name="Selected">

										<Storyboard>
											<ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Shape.Fill).(GradientBrush.GradientStops)[0].(GradientStop.Color)" Storyboard.TargetName="rectangle">
												<EasingColorKeyFrame KeyTime="0" Value="{StaticResource GreenLeft}"/>
											</ColorAnimationUsingKeyFrames>
											<ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Shape.Fill).(GradientBrush.GradientStops)[1].(GradientStop.Color)" Storyboard.TargetName="rectangle">
												<EasingColorKeyFrame KeyTime="0" Value="{StaticResource GreenRight}"/>
											</ColorAnimationUsingKeyFrames>
										</Storyboard>

									</VisualState>
									<VisualState x:Name="SelectedUnfocused">
										<Storyboard>
											<ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Shape.Fill).(GradientBrush.GradientStops)[0].(GradientStop.Color)" Storyboard.TargetName="rectangle">
												<EasingColorKeyFrame KeyTime="0" Value="{StaticResource GreenLeft}"/>
											</ColorAnimationUsingKeyFrames>
											<ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Shape.Fill).(GradientBrush.GradientStops)[1].(GradientStop.Color)" Storyboard.TargetName="rectangle">
												<EasingColorKeyFrame KeyTime="0" Value="{StaticResource GreenRight}"/>
											</ColorAnimationUsingKeyFrames>
										</Storyboard>
									</VisualState>
								</VisualStateGroup>
							</VisualStateManager.VisualStateGroups>
							<Rectangle x:Name="rectangle" RadiusY="5" RadiusX="5" StrokeThickness="2" Cursor="Hand">
								<Rectangle.Effect>
									<DropShadowEffect Color="#FF646464" BlurRadius="3" ShadowDepth="3"/>
								</Rectangle.Effect>
								<Rectangle.Fill>
									<LinearGradientBrush EndPoint="1.01,0.542" StartPoint="-0.008,0.517">
										<GradientStop Color="{DynamicResource #122122122}" Offset="0"/>
										<GradientStop Color="{DynamicResource #122122122}" Offset="1"/>
									</LinearGradientBrush>
								</Rectangle.Fill>
							</Rectangle>
							<ContentPresenter RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" HorizontalAlignment="Center" VerticalAlignment="Center" Cursor="Hand"/>
						</Grid>
					</ControlTemplate>
				</Setter.Value>
			</Setter>
		</Style>
		<Color x:Key="white">White</Color>
		<Style x:Key="ListBoxItemTongzhi" TargetType="{x:Type ListBoxItem}">
			<Setter Property="Template">
				<Setter.Value>
					<ControlTemplate TargetType="{x:Type ListBoxItem}">
						<Grid>
							<Grid.ColumnDefinitions>
								<ColumnDefinition Width="0.266*"/>
								<ColumnDefinition Width="0.455*"/>
								<ColumnDefinition Width="0.279*"/>
							</Grid.ColumnDefinitions>
							<VisualStateManager.VisualStateGroups>
								<VisualStateGroup x:Name="SelectionStates">
									<VisualStateGroup.Transitions>
										<VisualTransition GeneratedDuration="0"/>
									</VisualStateGroup.Transitions>
									<VisualState x:Name="Unselected"/>
									<VisualState x:Name="Selected">
										<Storyboard>
											<ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Shape.Fill).(SolidColorBrush.Color)" Storyboard.TargetName="ellipse">
												<EasingColorKeyFrame KeyTime="0" Value="{StaticResource GreenLeft}"/>
											</ColorAnimationUsingKeyFrames>
											<ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Shape.Fill).(SolidColorBrush.Color)" Storyboard.TargetName="path">
												<EasingColorKeyFrame KeyTime="0" Value="{StaticResource GreenLeft}"/>
											</ColorAnimationUsingKeyFrames>
										</Storyboard>
									</VisualState>
									<VisualState x:Name="SelectedUnfocused">
										<Storyboard>
											<ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Shape.Fill).(SolidColorBrush.Color)" Storyboard.TargetName="ellipse">
												<EasingColorKeyFrame KeyTime="0" Value="{StaticResource GreenLeft}"/>
											</ColorAnimationUsingKeyFrames>
											<ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Shape.Fill).(SolidColorBrush.Color)" Storyboard.TargetName="path">
												<EasingColorKeyFrame KeyTime="0" Value="{StaticResource GreenLeft}"/>
											</ColorAnimationUsingKeyFrames>
										</Storyboard>
									</VisualState>
								</VisualStateGroup>
							</VisualStateManager.VisualStateGroups>
							<Ellipse x:Name="ellipse" StrokeThickness="2" HorizontalAlignment="Center" Height="8" Width="8" VerticalAlignment="Center">
								<Ellipse.Effect>
									<DropShadowEffect BlurRadius="1" ShadowDepth="1" Color="{DynamicResource #122122122}"/>
								</Ellipse.Effect>
								<Ellipse.Fill>
									<SolidColorBrush Color="{DynamicResource white}"/>
								</Ellipse.Fill>
							</Ellipse>
							<Grid Grid.Column="2" Width="25" HorizontalAlignment="Left" Margin="4,6,0,6">
								<Path x:Name="path" Data="M14.543,9.9709995 L19.543,9.9709995 19.543,14.970999 14.543,14.970999 z M0,4.9274995 L5,4.9274995 5,9.9274995 0,9.9274995 z M9.7090001,2.0829997 L10.709,2.0829997 13.709,2.0829997 13.709,3.0829997 10.709,3.0829997 10.709,12.083 13.709,12.083 13.709,13.083 10.709,13.083 9.7090001,13.083 9.7090001,12.083 9.7090001,7.9369996 6.0670004,7.9369996 6.0670004,6.9369996 9.7090001,6.9369996 9.7090001,3.0829997 z M14.543,0 L19.543,0 19.543,4.9999998 14.543,4.9999998 z" HorizontalAlignment="Stretch" Height="Auto" Margin="1.933,1.709,3.524,3.32" Stretch="Fill" StrokeThickness="2" VerticalAlignment="Stretch" Width="Auto">
									<Path.Effect>
										<DropShadowEffect ShadowDepth="1" BlurRadius="1" Color="#FF878787"/>
									</Path.Effect>
									<Path.Fill>
										<SolidColorBrush Color="{DynamicResource white}"/>
									</Path.Fill>
								</Path>
							</Grid>
							<ContentPresenter HorizontalAlignment="Center" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" Grid.Column="1" d:LayoutOverrides="Width" VerticalAlignment="Center"/>
						</Grid>
					</ControlTemplate>
				</Setter.Value>
			</Setter>
			<Setter Property="FontFamily" Value="Helvetica"/>
			<Setter Property="FontWeight" Value="Bold"/>
		</Style>
		<LinearGradientBrush x:Key="bluegredient" EndPoint="1.003,0.493" StartPoint="-0.017,0.493">
			<GradientStop Color="#FF139698" Offset="1"/>
			<GradientStop Color="#FF13BA85"/>
		</LinearGradientBrush>
		<Style x:Key="PathStyle1" TargetType="{x:Type Path}">
			<Setter Property="Height" Value="16"/>
		</Style>
		<Style x:Key="Labeltopheader" TargetType="{x:Type Label}">
			<Setter Property="Template">
				<Setter.Value>
					<ControlTemplate TargetType="{x:Type Label}">
						<Grid>
							<Grid.ColumnDefinitions>
								<ColumnDefinition Width="89.498"/>
								<ColumnDefinition/>
							</Grid.ColumnDefinitions>
							<Grid Margin="0,0,10,0.53">
								<Path Data="M7.9999995,5.6843419E-14 L17.875,5.6843419E-14 22,5.6843419E-14 80,5.6843419E-14 80,16 50.625,16 22,16 17.875,16 7.9999995,16 0,16 0,7.9999995 C0,3.5817213 3.581722,-4.768371E-07 7.9999995,5.6843419E-14 z" Fill="{DynamicResource bluegredient}" Stretch="Fill" Height="16" VerticalAlignment="Top"/>
								<Path Data="M35.0625,0 L38.598583,7.6669999 73,7.6669999 73,9.6669998 39.521,9.6669998 30.604,9.6669998 0,9.6669998 0,7.6669999 31.526417,7.6669999 z" Fill="{DynamicResource bluegredient}" Stretch="Fill" Margin="3.663,0,0.275,0" Height="9.668" VerticalAlignment="Bottom" />
							</Grid>
							<Grid Margin="0,0,0,0.53" Grid.Column="1">
								<Grid.ColumnDefinitions>
									<ColumnDefinition/>
								</Grid.ColumnDefinitions>
								<Path Grid.ColumnSpan="1" Grid.Column="0" Data="M0,3.0013325E-11 L1.6560059,3.0013325E-11 C6.0814209,-1.1935911E-05 9.6689453,3.5817131 9.6689453,7.9999956 L9.6151123,8.5333151 9.6689453,8.5333151 9.6689453,15.999991 1.6560059,15.999991 0,15.999991 z" Fill="#FF7A7A7A" HorizontalAlignment="Right" IsEnabled="False" Style="{DynamicResource PathStyle1}" Stretch="Fill" Visibility="Visible" VerticalAlignment="Top" Width="9.638"/>
								<Rectangle Grid.Column="0" Fill="#FF7A7A7A" HorizontalAlignment="Stretch" Height="16" Margin="0,0,8,0" VerticalAlignment="Top" Width="Auto" Grid.ColumnSpan="1"/>
								<GridSplitter Margin="0,38.304,12,0" Height="2" Background="#FFB7B7B7" HorizontalAlignment="Stretch"/>
							</Grid>
							<ContentPresenter Grid.ColumnSpan="1" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" HorizontalAlignment="Center" VerticalAlignment="Center" Margin="0,9,10,0"/>
						</Grid>
					</ControlTemplate>
				</Setter.Value>
			</Setter>
		</Style>
		<SolidColorBrush x:Key="TabControlNormalBorderBrush" Color="#8C8E94"/>
		<Style x:Key="TabControlStyle1" TargetType="{x:Type TabControl}">
			<Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
			<Setter Property="Padding" Value="4,4,4,4"/>
			<Setter Property="BorderThickness" Value="1"/>
			<Setter Property="BorderBrush" Value="{StaticResource TabControlNormalBorderBrush}"/>
			<Setter Property="Background" Value="#F9F9F9"/>
			<Setter Property="HorizontalContentAlignment" Value="Center"/>
			<Setter Property="VerticalContentAlignment" Value="Center"/>
			<Setter Property="Template">
				<Setter.Value>
					<ControlTemplate TargetType="{x:Type TabControl}">
						<Grid ClipToBounds="true" SnapsToDevicePixels="true" KeyboardNavigation.TabNavigation="Local">
							<Grid.ColumnDefinitions>
								<ColumnDefinition x:Name="ColumnDefinition0"/>
								<ColumnDefinition x:Name="ColumnDefinition1" Width="0"/>
							</Grid.ColumnDefinitions>
							<Grid.RowDefinitions>
								<RowDefinition x:Name="RowDefinition0" Height="465"/>
							</Grid.RowDefinitions>
							<TabPanel x:Name="HeaderPanel" Grid.Column="0" IsItemsHost="true" Grid.Row="0" KeyboardNavigation.TabIndex="1" Panel.ZIndex="1" d:LayoutOverrides="GridBox"/>
							<Border x:Name="ContentPanel" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Grid.Column="0" KeyboardNavigation.DirectionalNavigation="Contained" Grid.Row="0" KeyboardNavigation.TabIndex="2" KeyboardNavigation.TabNavigation="Local" Margin="0,0,0,2">
								<ContentPresenter x:Name="PART_SelectedContentHost" ContentSource="SelectedContent" Margin="{TemplateBinding Padding}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
							</Border>
						</Grid>
						<ControlTemplate.Triggers>
							<Trigger Property="TabStripPlacement" Value="Bottom">
								<Setter Property="Grid.Row" TargetName="HeaderPanel" Value="1"/>
								<Setter Property="Grid.Row" TargetName="ContentPanel" Value="0"/>
								<Setter Property="Height" TargetName="RowDefinition0" Value="*"/>
								<Setter Property="Margin" TargetName="HeaderPanel" Value="2,0,2,2"/>
							</Trigger>
							<Trigger Property="TabStripPlacement" Value="Left">
								<Setter Property="Grid.Row" TargetName="HeaderPanel" Value="0"/>
								<Setter Property="Grid.Row" TargetName="ContentPanel" Value="0"/>
								<Setter Property="Grid.Column" TargetName="HeaderPanel" Value="0"/>
								<Setter Property="Grid.Column" TargetName="ContentPanel" Value="1"/>
								<Setter Property="Width" TargetName="ColumnDefinition0" Value="Auto"/>
								<Setter Property="Width" TargetName="ColumnDefinition1" Value="*"/>
								<Setter Property="Height" TargetName="RowDefinition0" Value="*"/>
								<Setter Property="Margin" TargetName="HeaderPanel" Value="2,2,0,2"/>
							</Trigger>
							<Trigger Property="TabStripPlacement" Value="Right">
								<Setter Property="Grid.Row" TargetName="HeaderPanel" Value="0"/>
								<Setter Property="Grid.Row" TargetName="ContentPanel" Value="0"/>
								<Setter Property="Grid.Column" TargetName="HeaderPanel" Value="1"/>
								<Setter Property="Grid.Column" TargetName="ContentPanel" Value="0"/>
								<Setter Property="Width" TargetName="ColumnDefinition0" Value="*"/>
								<Setter Property="Width" TargetName="ColumnDefinition1" Value="Auto"/>
								<Setter Property="Height" TargetName="RowDefinition0" Value="*"/>
								<Setter Property="Margin" TargetName="HeaderPanel" Value="0,2,2,2"/>
							</Trigger>
							<Trigger Property="IsEnabled" Value="false">
								<Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
							</Trigger>
						</ControlTemplate.Triggers>
					</ControlTemplate>
				</Setter.Value>
			</Setter>
		</Style>
		<Color x:Key="black">Black</Color>
		<Style x:Key="CheckBoxTongzhi" TargetType="{x:Type CheckBox}">
			<Setter Property="Template">
				<Setter.Value>
					<ControlTemplate TargetType="{x:Type CheckBox}">
						<ControlTemplate.Resources>
						</ControlTemplate.Resources>
						<Grid>
							<Grid.ColumnDefinitions>
								<ColumnDefinition Width="0.266*"/>
								<ColumnDefinition Width="0.455*"/>
								<ColumnDefinition Width="0.279*"/>
							</Grid.ColumnDefinitions>
							<VisualStateManager.VisualStateGroups>
								<VisualStateGroup x:Name="CheckStates">
									<VisualState x:Name="Checked">
										<Storyboard>
											<ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Shape.Fill).(SolidColorBrush.Color)" Storyboard.TargetName="ellipse">
												<EasingColorKeyFrame KeyTime="0" Value="{StaticResource GreenLeft}"/>
											</ColorAnimationUsingKeyFrames>
											<ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Shape.Fill).(SolidColorBrush.Color)" Storyboard.TargetName="path">
												<EasingColorKeyFrame KeyTime="0" Value="{StaticResource GreenLeft}"/>
											</ColorAnimationUsingKeyFrames>
										</Storyboard>
									</VisualState>
									<VisualState x:Name="Unchecked"/>
									<VisualState x:Name="Indeterminate"/>
								</VisualStateGroup>
								<VisualStateGroup x:Name="CommonStates">
									<VisualState x:Name="Normal"/>
									<VisualState x:Name="MouseOver"/>
									<VisualState x:Name="Pressed"/>
									<VisualState x:Name="Disabled"/>
								</VisualStateGroup>
							</VisualStateManager.VisualStateGroups>
							<Ellipse x:Name="ellipse" StrokeThickness="2" HorizontalAlignment="Center" Height="8" Width="8" VerticalAlignment="Center" Cursor="Hand">
								<Ellipse.Effect>
									<DropShadowEffect BlurRadius="1" ShadowDepth="1" Color="{DynamicResource #122122122}"/>
								</Ellipse.Effect>
								<Ellipse.Fill>
									<SolidColorBrush Color="{DynamicResource white}"/>
								</Ellipse.Fill>
							</Ellipse>
							<Grid Grid.Column="2" Width="25" HorizontalAlignment="Left" Margin="4,6,0,6" Cursor="Hand">
								<Path x:Name="path" Data="M14.543,9.9709995 L19.543,9.9709995 19.543,14.970999 14.543,14.970999 z M0,4.9274995 L5,4.9274995 5,9.9274995 0,9.9274995 z M9.7090001,2.0829997 L10.709,2.0829997 13.709,2.0829997 13.709,3.0829997 10.709,3.0829997 10.709,12.083 13.709,12.083 13.709,13.083 10.709,13.083 9.7090001,13.083 9.7090001,12.083 9.7090001,7.9369996 6.0670004,7.9369996 6.0670004,6.9369996 9.7090001,6.9369996 9.7090001,3.0829997 z M14.543,0 L19.543,0 19.543,4.9999998 14.543,4.9999998 z" HorizontalAlignment="Stretch" Height="Auto" Margin="1.933,1.709,3.524,3.32" Stretch="Fill" StrokeThickness="2" VerticalAlignment="Stretch" Width="Auto">
									<Path.Effect>
										<DropShadowEffect ShadowDepth="1" BlurRadius="1" Color="#FF878787"/>
									</Path.Effect>
									<Path.Fill>
										<SolidColorBrush Color="{DynamicResource white}"/>
									</Path.Fill>
								</Path>
							</Grid>
							<ContentPresenter x:Name="contentPresenter" RecognizesAccessKey="True" Grid.Column="1" d:LayoutOverrides="Width" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" HorizontalAlignment="Center" VerticalAlignment="Center" Cursor="Hand"/>
						</Grid>
						<ControlTemplate.Triggers>
							<Trigger Property="IsChecked" Value="true">
								<Setter Property="Foreground" Value="{DynamicResource black}"/>
							</Trigger>
						</ControlTemplate.Triggers>
					</ControlTemplate>
				</Setter.Value>
			</Setter>
		</Style>
		<Style x:Key="TabItemFocusVisual">
			<Setter Property="Control.Template">
				<Setter.Value>
					<ControlTemplate>
						<Rectangle Margin="3,3,3,1" SnapsToDevicePixels="true" Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" StrokeThickness="1" StrokeDashArray="1 2"/>
					</ControlTemplate>
				</Setter.Value>
			</Setter>
		</Style>
		<LinearGradientBrush x:Key="ButtonNormalBackground" EndPoint="0,1" StartPoint="0,0">
			<GradientStop Color="#F3F3F3" Offset="0"/>
			<GradientStop Color="#EBEBEB" Offset="0.5"/>
			<GradientStop Color="#DDDDDD" Offset="0.5"/>
			<GradientStop Color="#CDCDCD" Offset="1"/>
		</LinearGradientBrush>
		<LinearGradientBrush x:Key="TabItemHotBackground" EndPoint="0,1" StartPoint="0,0">
			<GradientStop Color="#EAF6FD" Offset="0.15"/>
			<GradientStop Color="#D9F0FC" Offset=".5"/>
			<GradientStop Color="#BEE6FD" Offset=".5"/>
			<GradientStop Color="#A7D9F5" Offset="1"/>
		</LinearGradientBrush>
		<SolidColorBrush x:Key="TabItemSelectedBackground" Color="#F9F9F9"/>
		<SolidColorBrush x:Key="TabItemHotBorderBrush" Color="#3C7FB1"/>
		<SolidColorBrush x:Key="TabItemDisabledBackground" Color="#F4F4F4"/>
		<SolidColorBrush x:Key="TabItemDisabledBorderBrush" Color="#FFC9C7BA"/>
		<Style x:Key="TabItemtest" TargetType="{x:Type TabItem}">
			<Setter Property="FocusVisualStyle" Value="{StaticResource TabItemFocusVisual}"/>
			<Setter Property="Foreground" Value="Black"/>
			<Setter Property="Padding" Value="6,1,6,1"/>
			<Setter Property="BorderBrush" Value="{StaticResource TabControlNormalBorderBrush}"/>
			<Setter Property="Background" Value="{StaticResource ButtonNormalBackground}"/>
			<Setter Property="HorizontalContentAlignment" Value="Stretch"/>
			<Setter Property="VerticalContentAlignment" Value="Stretch"/>
			<Setter Property="Template">
				<Setter.Value>
					<ControlTemplate TargetType="{x:Type TabItem}">
						<Grid VerticalAlignment="Stretch" Height="40" HorizontalAlignment="Stretch" Width="80">
							<VisualStateManager.VisualStateGroups>
								<VisualStateGroup x:Name="CommonStates">
									<VisualState x:Name="Normal"/>
									<VisualState x:Name="MouseOver"/>
									<VisualState x:Name="Disabled"/>
								</VisualStateGroup>
								<VisualStateGroup x:Name="SelectionStates">
									<VisualState x:Name="Unselected"/>
									<VisualState x:Name="Selected">
										<Storyboard>
											<DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="path1">
												<EasingDoubleKeyFrame KeyTime="0" Value="1"/>
											</DoubleAnimationUsingKeyFrames>
											<ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Shape.Fill).(GradientBrush.GradientStops)[1].(GradientStop.Color)" Storyboard.TargetName="path">
												<EasingColorKeyFrame KeyTime="0" Value="{StaticResource GreenLeft}"/>
											</ColorAnimationUsingKeyFrames>
											<ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Shape.Fill).(GradientBrush.GradientStops)[0].(GradientStop.Color)" Storyboard.TargetName="path">
												<EasingColorKeyFrame KeyTime="0" Value="{StaticResource GreenRight}"/>
											</ColorAnimationUsingKeyFrames>
										</Storyboard>
									</VisualState>
								</VisualStateGroup>
							</VisualStateManager.VisualStateGroups>
							<Path x:Name="path" Data="M3.6629996,46 L125,46 125,48 3.6629996,48 z M12.499999,1.4210855E-14 L27.929688,1.4210855E-14 34.375,1.4210855E-14 125,1.4210855E-14 125,16 79.101563,16 34.375,16 27.929688,16 12.499999,16 0,16 0,7.9999993 C0,3.5817215 5.5964408,-2.6822083E-07 12.499999,1.4210855E-14 z" Height="Auto" Stretch="Fill" VerticalAlignment="Stretch">
								<Path.Fill>
									<LinearGradientBrush EndPoint="1.003,0.493" StartPoint="-0.017,0.493">
										<GradientStop Color="#FF7A7A7A" Offset="1"/>
										<GradientStop Color="#FF7A7A7A"/>
									</LinearGradientBrush>
								</Path.Fill>
							</Path>
							<Path x:Name="path1" Data="M35.0625,0 L38.598583,7.6669999 73,7.6669999 73,9.6669998 39.521,9.6669998 30.604,9.6669998 0,9.6669998 0,7.6669999 31.526417,7.6669999 z" Stretch="Fill" Margin="3.663,0,0.275,0" Height="9.668" VerticalAlignment="Bottom" Visibility="Visible" Opacity="0" >
								<Path.Fill>
									<LinearGradientBrush EndPoint="1.003,0.493" StartPoint="-0.017,0.493">
										<GradientStop Color="{DynamicResource GreenRight}" Offset="1"/>
										<GradientStop Color="{DynamicResource GreenLeft}"/>
									</LinearGradientBrush>
								</Path.Fill>
							</Path>
							<ContentPresenter x:Name="Content" ContentSource="Header" HorizontalAlignment="{Binding HorizontalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{Binding VerticalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}" Margin="13.75,12.163,12.25,8"/>
						</Grid>
						<ControlTemplate.Triggers>
							<Trigger Property="IsMouseOver" Value="true"/>
							<Trigger Property="IsSelected" Value="true">
								<Setter Property="Panel.ZIndex" Value="1"/>
							</Trigger>
							<MultiTrigger>
								<MultiTrigger.Conditions>
									<Condition Property="IsSelected" Value="false"/>
									<Condition Property="IsMouseOver" Value="true"/>
								</MultiTrigger.Conditions>
							</MultiTrigger>
							<Trigger Property="TabStripPlacement" Value="Bottom"/>
							<Trigger Property="TabStripPlacement" Value="Left"/>
							<Trigger Property="TabStripPlacement" Value="Right"/>
							<MultiTrigger>
								<MultiTrigger.Conditions>
									<Condition Property="IsSelected" Value="true"/>
									<Condition Property="TabStripPlacement" Value="Top"/>
								</MultiTrigger.Conditions>
								<Setter Property="Margin" Value="-2,-2,-2,-1"/>
								<Setter Property="Margin" TargetName="Content" Value="0,0,0,1"/>
							</MultiTrigger>
							<MultiTrigger>
								<MultiTrigger.Conditions>
									<Condition Property="IsSelected" Value="true"/>
									<Condition Property="TabStripPlacement" Value="Bottom"/>
								</MultiTrigger.Conditions>
								<Setter Property="Margin" Value="-2,-1,-2,-2"/>
								<Setter Property="Margin" TargetName="Content" Value="0,1,0,0"/>
							</MultiTrigger>
							<MultiTrigger>
								<MultiTrigger.Conditions>
									<Condition Property="IsSelected" Value="true"/>
									<Condition Property="TabStripPlacement" Value="Left"/>
								</MultiTrigger.Conditions>
								<Setter Property="Margin" Value="-2,-2,-1,-2"/>
								<Setter Property="Margin" TargetName="Content" Value="0,0,1,0"/>
							</MultiTrigger>
							<MultiTrigger>
								<MultiTrigger.Conditions>
									<Condition Property="IsSelected" Value="true"/>
									<Condition Property="TabStripPlacement" Value="Right"/>
								</MultiTrigger.Conditions>
								<Setter Property="Margin" Value="-1,-2,-2,-2"/>
								<Setter Property="Margin" TargetName="Content" Value="1,0,0,0"/>
							</MultiTrigger>
							<Trigger Property="IsEnabled" Value="false">
								<Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
							</Trigger>
						</ControlTemplate.Triggers>
					</ControlTemplate>
				</Setter.Value>
			</Setter>
		</Style>
		<Color x:Key="LineColor#184184184">#FFB8B8B8</Color>
		<Style x:Key="TabItemFirst" TargetType="{x:Type TabItem}">
			<Setter Property="FocusVisualStyle" Value="{StaticResource TabItemFocusVisual}"/>
			<Setter Property="Foreground" Value="Black"/>
			<Setter Property="Padding" Value="6,1,6,1"/>
			<Setter Property="BorderBrush" Value="{StaticResource TabControlNormalBorderBrush}"/>
			<Setter Property="Background" Value="{StaticResource ButtonNormalBackground}"/>
			<Setter Property="HorizontalContentAlignment" Value="Stretch"/>
			<Setter Property="VerticalContentAlignment" Value="Stretch"/>
			<Setter Property="Template">
				<Setter.Value>
					<ControlTemplate TargetType="{x:Type TabItem}">
						<Grid VerticalAlignment="Stretch" Height="40" HorizontalAlignment="Stretch" Width="90">
							<VisualStateManager.VisualStateGroups>
								<VisualStateGroup x:Name="CommonStates">
									<VisualState x:Name="Normal"/>
									<VisualState x:Name="MouseOver"/>
									<VisualState x:Name="Disabled"/>
								</VisualStateGroup>
								<VisualStateGroup x:Name="SelectionStates">
									<VisualState x:Name="Unselected"/>
									<VisualState x:Name="Selected">
										<Storyboard>
											<DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="path1">
												<EasingDoubleKeyFrame KeyTime="0" Value="1"/>
											</DoubleAnimationUsingKeyFrames>
											<ThicknessAnimationUsingKeyFrames Storyboard.TargetProperty="(FrameworkElement.Margin)" Storyboard.TargetName="Content">
												<EasingThicknessKeyFrame KeyTime="0" Value="0,12.163,10,8"/>
											</ThicknessAnimationUsingKeyFrames>
											<ThicknessAnimationUsingKeyFrames Storyboard.TargetProperty="(FrameworkElement.Margin)" Storyboard.TargetName="path1">
												<EasingThicknessKeyFrame KeyTime="0" Value="3.663,0,10,0"/>
											</ThicknessAnimationUsingKeyFrames>
											<ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Shape.Fill).(GradientBrush.GradientStops)[1].(GradientStop.Color)" Storyboard.TargetName="path">
												<EasingColorKeyFrame KeyTime="0" Value="{StaticResource GreenLeft}"/>
											</ColorAnimationUsingKeyFrames>
											<ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Shape.Fill).(GradientBrush.GradientStops)[0].(GradientStop.Color)" Storyboard.TargetName="path">
												<EasingColorKeyFrame KeyTime="0" Value="{StaticResource GreenRight}"/>
											</ColorAnimationUsingKeyFrames>
											<ThicknessAnimationUsingKeyFrames Storyboard.TargetProperty="(FrameworkElement.Margin)" Storyboard.TargetName="path">
												<EasingThicknessKeyFrame KeyTime="0" Value="0,0,10,0"/>
											</ThicknessAnimationUsingKeyFrames>
											<ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Shape.Fill).(GradientBrush.GradientStops)[1].(GradientStop.Color)" Storyboard.TargetName="rectangle">
												<EasingColorKeyFrame KeyTime="0" Value="{StaticResource GreenLeft}"/>
											</ColorAnimationUsingKeyFrames>
											<ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Shape.Fill).(GradientBrush.GradientStops)[0].(GradientStop.Color)" Storyboard.TargetName="rectangle">
												<EasingColorKeyFrame KeyTime="0" Value="{StaticResource GreenRight}"/>
											</ColorAnimationUsingKeyFrames>
											<ThicknessAnimationUsingKeyFrames Storyboard.TargetProperty="(FrameworkElement.Margin)" Storyboard.TargetName="rectangle">
												<EasingThicknessKeyFrame KeyTime="0" Value="5,0,10,0"/>
											</ThicknessAnimationUsingKeyFrames>
										</Storyboard>
									</VisualState>
								</VisualStateGroup>
							</VisualStateManager.VisualStateGroups>
							<Path x:Name="path1" Data="M35.0625,0 L38.598583,7.6669999 73,7.6669999 73,9.6669998 39.521,9.6669998 30.604,9.6669998 0,9.6669998 0,7.6669999 31.526417,7.6669999 z" Stretch="Fill" Margin="3.663,0,0.275,0" Height="9.668" VerticalAlignment="Bottom" Visibility="Visible" Opacity="0" >
								<Path.Fill>
									<LinearGradientBrush EndPoint="1.003,0.493" StartPoint="-0.017,0.493">
										<GradientStop Color="{DynamicResource GreenRight}" Offset="1"/>
										<GradientStop Color="{DynamicResource GreenLeft}"/>
									</LinearGradientBrush>
								</Path.Fill>
							</Path>
							<ContentPresenter x:Name="Content" ContentSource="Header" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" Margin="0,12.163,0,6" HorizontalAlignment="Center" VerticalAlignment="Bottom" Cursor="Hand"/>
							<Path x:Name="path" Data="M7.9999995,0 L12.000001,0 22.749998,0 78,0 80,0 80.999992,0 89.999992,0 90,16 80.999992,16 80,16 78,16 25.124998,16 22.749998,16 12.000001,16 7.9999995,16 0,16 0,7.9999997 C0,3.5817226 3.581722,2.145768E-07 7.9999995,0 z" Height="16" Margin="0" Stretch="Fill" VerticalAlignment="Top">
								<Path.Fill>
									<LinearGradientBrush EndPoint="1.003,0.493" StartPoint="-0.017,0.493">
										<GradientStop Color="#FF7A7A7A" Offset="1"/>
										<GradientStop Color="#FF7A7A7A"/>
									</LinearGradientBrush>
								</Path.Fill>
							</Path>
							<Rectangle x:Name="rectangle" Height="2" VerticalAlignment="Bottom" Margin="5,0">
								<Rectangle.Fill>
									<LinearGradientBrush EndPoint="1.003,0.493" StartPoint="-0.017,0.493">
										<GradientStop Color="{DynamicResource LineColor#184184184}" Offset="1"/>
										<GradientStop Color="{DynamicResource LineColor#184184184}"/>
									</LinearGradientBrush>
								</Rectangle.Fill>
							</Rectangle>
						</Grid>
						<ControlTemplate.Triggers>
							<Trigger Property="IsMouseOver" Value="true"/>
							<Trigger Property="IsSelected" Value="true">
								<Setter Property="Panel.ZIndex" Value="1"/>
							</Trigger>
							<MultiTrigger>
								<MultiTrigger.Conditions>
									<Condition Property="IsSelected" Value="false"/>
									<Condition Property="IsMouseOver" Value="true"/>
								</MultiTrigger.Conditions>
							</MultiTrigger>
							<Trigger Property="TabStripPlacement" Value="Bottom"/>
							<Trigger Property="TabStripPlacement" Value="Left"/>
							<Trigger Property="TabStripPlacement" Value="Right"/>
							<MultiTrigger>
								<MultiTrigger.Conditions>
									<Condition Property="IsSelected" Value="true"/>
									<Condition Property="TabStripPlacement" Value="Top"/>
								</MultiTrigger.Conditions>
								<Setter Property="Margin" Value="-2,-2,-2,-1"/>
								<Setter Property="Margin" TargetName="Content" Value="0,0,0,1"/>
							</MultiTrigger>
							<MultiTrigger>
								<MultiTrigger.Conditions>
									<Condition Property="IsSelected" Value="true"/>
									<Condition Property="TabStripPlacement" Value="Bottom"/>
								</MultiTrigger.Conditions>
								<Setter Property="Margin" Value="-2,-1,-2,-2"/>
								<Setter Property="Margin" TargetName="Content" Value="0,1,0,0"/>
							</MultiTrigger>
							<MultiTrigger>
								<MultiTrigger.Conditions>
									<Condition Property="IsSelected" Value="true"/>
									<Condition Property="TabStripPlacement" Value="Left"/>
								</MultiTrigger.Conditions>
								<Setter Property="Margin" Value="-2,-2,-1,-2"/>
								<Setter Property="Margin" TargetName="Content" Value="0,0,1,0"/>
							</MultiTrigger>
							<MultiTrigger>
								<MultiTrigger.Conditions>
									<Condition Property="IsSelected" Value="true"/>
									<Condition Property="TabStripPlacement" Value="Right"/>
								</MultiTrigger.Conditions>
								<Setter Property="Margin" Value="-1,-2,-2,-2"/>
								<Setter Property="Margin" TargetName="Content" Value="1,0,0,0"/>
							</MultiTrigger>
							<Trigger Property="IsEnabled" Value="false">
								<Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
							</Trigger>
						</ControlTemplate.Triggers>
					</ControlTemplate>
				</Setter.Value>
			</Setter>
		</Style>
		<Style x:Key="TabItemMiddle" TargetType="{x:Type TabItem}">
			<Setter Property="FocusVisualStyle" Value="{StaticResource TabItemFocusVisual}"/>
			<Setter Property="Foreground" Value="Black"/>
			<Setter Property="Padding" Value="6,1,6,1"/>
			<Setter Property="BorderBrush" Value="{StaticResource TabControlNormalBorderBrush}"/>
			<Setter Property="Background" Value="{StaticResource ButtonNormalBackground}"/>
			<Setter Property="HorizontalContentAlignment" Value="Stretch"/>
			<Setter Property="VerticalContentAlignment" Value="Stretch"/>
			<Setter Property="Template">
				<Setter.Value>
					<ControlTemplate TargetType="{x:Type TabItem}">
						<Grid VerticalAlignment="Stretch" Height="40" HorizontalAlignment="Stretch" Width="100">
							<VisualStateManager.VisualStateGroups>
								<VisualStateGroup x:Name="CommonStates">
									<VisualState x:Name="Normal"/>
									<VisualState x:Name="MouseOver"/>
									<VisualState x:Name="Disabled"/>
								</VisualStateGroup>
								<VisualStateGroup x:Name="SelectionStates">
									<VisualState x:Name="Unselected"/>
									<VisualState x:Name="Selected">
										<Storyboard>
											<DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="path1">
												<EasingDoubleKeyFrame KeyTime="0" Value="1"/>
											</DoubleAnimationUsingKeyFrames>
											<ThicknessAnimationUsingKeyFrames Storyboard.TargetProperty="(FrameworkElement.Margin)" Storyboard.TargetName="Content">
												<EasingThicknessKeyFrame KeyTime="0" Value="0,0,0,8"/>
											</ThicknessAnimationUsingKeyFrames>
											<ThicknessAnimationUsingKeyFrames Storyboard.TargetProperty="(FrameworkElement.Margin)" Storyboard.TargetName="path1">
												<EasingThicknessKeyFrame KeyTime="0" Value="10,0"/>
											</ThicknessAnimationUsingKeyFrames>
											<ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Shape.Fill).(GradientBrush.GradientStops)[1].(GradientStop.Color)" Storyboard.TargetName="path">
												<EasingColorKeyFrame KeyTime="0" Value="{StaticResource GreenLeft}"/>
											</ColorAnimationUsingKeyFrames>
											<ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Shape.Fill).(GradientBrush.GradientStops)[0].(GradientStop.Color)" Storyboard.TargetName="path">
												<EasingColorKeyFrame KeyTime="0" Value="{StaticResource GreenRight}"/>
											</ColorAnimationUsingKeyFrames>
											<ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Shape.Fill).(GradientBrush.GradientStops)[1].(GradientStop.Color)" Storyboard.TargetName="rectangle">
												<EasingColorKeyFrame KeyTime="0" Value="{StaticResource GreenLeft}"/>
											</ColorAnimationUsingKeyFrames>
											<ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Shape.Fill).(GradientBrush.GradientStops)[0].(GradientStop.Color)" Storyboard.TargetName="rectangle">
												<EasingColorKeyFrame KeyTime="0" Value="{StaticResource GreenRight}"/>
											</ColorAnimationUsingKeyFrames>
											<ThicknessAnimationUsingKeyFrames Storyboard.TargetProperty="(FrameworkElement.Margin)" Storyboard.TargetName="rectangle">
												<EasingThicknessKeyFrame KeyTime="0" Value="10,0"/>
											</ThicknessAnimationUsingKeyFrames>
											<ThicknessAnimationUsingKeyFrames Storyboard.TargetProperty="(FrameworkElement.Margin)" Storyboard.TargetName="path">
												<EasingThicknessKeyFrame KeyTime="0" Value="10,0"/>
											</ThicknessAnimationUsingKeyFrames>
										</Storyboard>
									</VisualState>
								</VisualStateGroup>
							</VisualStateManager.VisualStateGroups>
							<Path x:Name="path1" Data="M35.0625,0 L38.598583,7.6669999 73,7.6669999 73,9.6669998 39.521,9.6669998 30.604,9.6669998 0,9.6669998 0,7.6669999 31.526417,7.6669999 z" Stretch="Fill" Height="9.668" VerticalAlignment="Bottom" Visibility="Visible" Opacity="0" >
								<Path.Fill>
									<LinearGradientBrush EndPoint="1.003,0.493" StartPoint="-0.017,0.493">
										<GradientStop Color="{DynamicResource GreenRight}" Offset="1"/>
										<GradientStop Color="{DynamicResource GreenLeft}"/>
									</LinearGradientBrush>
								</Path.Fill>
							</Path>
							<ContentPresenter x:Name="Content" ContentSource="Header" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" Margin="0,0,0,6" HorizontalAlignment="Center" VerticalAlignment="Bottom" d:LayoutOverrides="Width" Cursor="Hand"/>
							<Path x:Name="path" Data="M0,0 L100,0 100,15.999999 0,15.999999 z" Height="16" Stretch="Fill" VerticalAlignment="Top">
								<Path.Fill>
									<LinearGradientBrush EndPoint="1.003,0.493" StartPoint="-0.017,0.493">
										<GradientStop Color="#FF7A7A7A" Offset="1"/>
										<GradientStop Color="#FF7A7A7A"/>
									</LinearGradientBrush>
								</Path.Fill>
							</Path>
							<Rectangle x:Name="rectangle" Height="2" VerticalAlignment="Bottom" Margin="5,0">
								<Rectangle.Fill>
									<LinearGradientBrush EndPoint="1.003,0.493" StartPoint="-0.017,0.493">
										<GradientStop Color="{DynamicResource LineColor#184184184}" Offset="1"/>
										<GradientStop Color="{DynamicResource LineColor#184184184}"/>
									</LinearGradientBrush>
								</Rectangle.Fill>
							</Rectangle>
						</Grid>
						<ControlTemplate.Triggers>
							<Trigger Property="IsMouseOver" Value="true"/>
							<Trigger Property="IsSelected" Value="true">
								<Setter Property="Panel.ZIndex" Value="1"/>
							</Trigger>
							<MultiTrigger>
								<MultiTrigger.Conditions>
									<Condition Property="IsSelected" Value="false"/>
									<Condition Property="IsMouseOver" Value="true"/>
								</MultiTrigger.Conditions>
							</MultiTrigger>
							<Trigger Property="TabStripPlacement" Value="Bottom"/>
							<Trigger Property="TabStripPlacement" Value="Left"/>
							<Trigger Property="TabStripPlacement" Value="Right"/>
							<MultiTrigger>
								<MultiTrigger.Conditions>
									<Condition Property="IsSelected" Value="true"/>
									<Condition Property="TabStripPlacement" Value="Top"/>
								</MultiTrigger.Conditions>
								<Setter Property="Margin" Value="-2,-2,-2,-1"/>
								<Setter Property="Margin" TargetName="Content" Value="0,0,0,1"/>
							</MultiTrigger>
							<MultiTrigger>
								<MultiTrigger.Conditions>
									<Condition Property="IsSelected" Value="true"/>
									<Condition Property="TabStripPlacement" Value="Bottom"/>
								</MultiTrigger.Conditions>
								<Setter Property="Margin" Value="-2,-1,-2,-2"/>
								<Setter Property="Margin" TargetName="Content" Value="0,1,0,0"/>
							</MultiTrigger>
							<MultiTrigger>
								<MultiTrigger.Conditions>
									<Condition Property="IsSelected" Value="true"/>
									<Condition Property="TabStripPlacement" Value="Left"/>
								</MultiTrigger.Conditions>
								<Setter Property="Margin" Value="-2,-2,-1,-2"/>
								<Setter Property="Margin" TargetName="Content" Value="0,0,1,0"/>
							</MultiTrigger>
							<MultiTrigger>
								<MultiTrigger.Conditions>
									<Condition Property="IsSelected" Value="true"/>
									<Condition Property="TabStripPlacement" Value="Right"/>
								</MultiTrigger.Conditions>
								<Setter Property="Margin" Value="-1,-2,-2,-2"/>
								<Setter Property="Margin" TargetName="Content" Value="1,0,0,0"/>
							</MultiTrigger>
							<Trigger Property="IsEnabled" Value="false">
								<Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
							</Trigger>
						</ControlTemplate.Triggers>
					</ControlTemplate>
				</Setter.Value>
			</Setter>
		</Style>
		<Style x:Key="TabControlStyle2" TargetType="{x:Type TabControl}">
			<Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
			<Setter Property="Padding" Value="4,4,4,4"/>
			<Setter Property="BorderThickness" Value="1"/>
			<Setter Property="BorderBrush" Value="{StaticResource TabControlNormalBorderBrush}"/>
			<Setter Property="Background" Value="#F9F9F9"/>
			<Setter Property="HorizontalContentAlignment" Value="Center"/>
			<Setter Property="VerticalContentAlignment" Value="Center"/>
			<Setter Property="Template">
				<Setter.Value>
					<ControlTemplate TargetType="{x:Type TabControl}">
						<Grid ClipToBounds="true" SnapsToDevicePixels="true" KeyboardNavigation.TabNavigation="Local">
							<Grid.ColumnDefinitions>
								<ColumnDefinition x:Name="ColumnDefinition0"/>
								<ColumnDefinition x:Name="ColumnDefinition1" Width="0"/>
							</Grid.ColumnDefinitions>
							<Grid.RowDefinitions>
								<RowDefinition x:Name="RowDefinition0" Height="Auto"/>
								<RowDefinition x:Name="RowDefinition1" Height="*"/>
							</Grid.RowDefinitions>
							<TabPanel x:Name="HeaderPanel" Grid.Column="0" IsItemsHost="true" Margin="2,2,2,0" Grid.Row="0" KeyboardNavigation.TabIndex="1" Panel.ZIndex="1"/>
							<Grid x:Name="ContentPanel" Grid.Column="0" KeyboardNavigation.DirectionalNavigation="Contained" Grid.Row="1" KeyboardNavigation.TabIndex="2" KeyboardNavigation.TabNavigation="Local">
								<Rectangle HorizontalAlignment="Stretch" Height="Auto" StrokeThickness="1" VerticalAlignment="Stretch" Width="Auto" StrokeDashArray="1 0" Margin="15" RadiusX="8" RadiusY="8">
									<Rectangle.Stroke>
										<SolidColorBrush Color="{DynamicResource #122122122}"/>
									</Rectangle.Stroke>
									<Rectangle.Fill>
										<SolidColorBrush Color="{DynamicResource white}"/>
									</Rectangle.Fill>
								</Rectangle>
								<ContentPresenter x:Name="PART_SelectedContentHost" ContentSource="SelectedContent" Margin="20" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
							</Grid>
						</Grid>
						<ControlTemplate.Triggers>
							<Trigger Property="TabStripPlacement" Value="Bottom">
								<Setter Property="Grid.Row" TargetName="HeaderPanel" Value="1"/>
								<Setter Property="Height" TargetName="RowDefinition0" Value="*"/>
								<Setter Property="Height" TargetName="RowDefinition1" Value="Auto"/>
								<Setter Property="Margin" TargetName="HeaderPanel" Value="2,0,2,2"/>
							</Trigger>
							<Trigger Property="TabStripPlacement" Value="Left">
								<Setter Property="Grid.Row" TargetName="HeaderPanel" Value="0"/>
								<Setter Property="Grid.Column" TargetName="HeaderPanel" Value="0"/>
								<Setter Property="Width" TargetName="ColumnDefinition0" Value="Auto"/>
								<Setter Property="Width" TargetName="ColumnDefinition1" Value="*"/>
								<Setter Property="Height" TargetName="RowDefinition0" Value="*"/>
								<Setter Property="Height" TargetName="RowDefinition1" Value="0"/>
								<Setter Property="Margin" TargetName="HeaderPanel" Value="2,2,0,2"/>
							</Trigger>
							<Trigger Property="TabStripPlacement" Value="Right">
								<Setter Property="Grid.Row" TargetName="HeaderPanel" Value="0"/>
								<Setter Property="Grid.Column" TargetName="HeaderPanel" Value="1"/>
								<Setter Property="Width" TargetName="ColumnDefinition0" Value="*"/>
								<Setter Property="Width" TargetName="ColumnDefinition1" Value="Auto"/>
								<Setter Property="Height" TargetName="RowDefinition0" Value="*"/>
								<Setter Property="Height" TargetName="RowDefinition1" Value="0"/>
								<Setter Property="Margin" TargetName="HeaderPanel" Value="0,2,2,2"/>
							</Trigger>
							<Trigger Property="IsEnabled" Value="false">
								<Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
							</Trigger>
						</ControlTemplate.Triggers>
					</ControlTemplate>
				</Setter.Value>
			</Setter>
		</Style>
		<Style x:Key="Button2ndMenu" TargetType="{x:Type Button}">
			<Setter Property="Template">
				<Setter.Value>
					<ControlTemplate TargetType="{x:Type Button}">
						<Grid>
							<Path Data="M5.6826018,0 L85.682602,0 85.682602,25 5.6826018,25 5.6826018,18.182602 0,12.5 5.6826018,6.8173977 z" Stretch="Fill" StrokeThickness="1">
								<Path.Fill>
									<SolidColorBrush Color="{DynamicResource LineColor#184184184}"/>
								</Path.Fill>
							</Path>
							<ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
						</Grid>
						<ControlTemplate.Triggers>
							<Trigger Property="IsFocused" Value="True"/>
							<Trigger Property="IsDefaulted" Value="True"/>
							<Trigger Property="IsMouseOver" Value="True"/>
							<Trigger Property="IsPressed" Value="True"/>
							<Trigger Property="IsEnabled" Value="False"/>
						</ControlTemplate.Triggers>
					</ControlTemplate>
				</Setter.Value>
			</Setter>
		</Style>
		<Style x:Key="ListBoxItemLast" TargetType="{x:Type ListBoxItem}">
			<Setter Property="Template">
				<Setter.Value>
					<ControlTemplate TargetType="{x:Type ListBoxItem}">
						<Grid>
							<VisualStateManager.VisualStateGroups>
								<VisualStateGroup x:Name="SelectionStates">
									<VisualState x:Name="Unselected"/>
									<VisualState x:Name="Selected">
										<Storyboard>
											<ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Shape.Fill).(GradientBrush.GradientStops)[0].(GradientStop.Color)" Storyboard.TargetName="path">
												<EasingColorKeyFrame KeyTime="0" Value="{StaticResource GreenLeft}"/>
											</ColorAnimationUsingKeyFrames>
											<ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Shape.Fill).(GradientBrush.GradientStops)[1].(GradientStop.Color)" Storyboard.TargetName="path">
												<EasingColorKeyFrame KeyTime="0" Value="{StaticResource GreenRight}"/>
											</ColorAnimationUsingKeyFrames>
											<PointAnimationUsingKeyFrames Storyboard.TargetProperty="(Shape.Fill).(LinearGradientBrush.StartPoint)" Storyboard.TargetName="path">
												<EasingPointKeyFrame KeyTime="0" Value="-0.017,0.506"/>
											</PointAnimationUsingKeyFrames>
											<DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(Shape.Fill).(GradientBrush.GradientStops)[1].(GradientStop.Offset)" Storyboard.TargetName="path">
												<EasingDoubleKeyFrame KeyTime="0" Value="1"/>
											</DoubleAnimationUsingKeyFrames>
											<PointAnimationUsingKeyFrames Storyboard.TargetProperty="(Shape.Fill).(LinearGradientBrush.EndPoint)" Storyboard.TargetName="path">
												<EasingPointKeyFrame KeyTime="0" Value="1.005,0.493"/>
											</PointAnimationUsingKeyFrames>
										</Storyboard>
									</VisualState>
									<VisualState x:Name="SelectedUnfocused"/>
								</VisualStateGroup>
							</VisualStateManager.VisualStateGroups>
							<Path x:Name="path" Data="M5.6826018,0 L85.682602,0 85.682602,25 5.6826018,25 5.6826018,18.182602 0,12.5 5.6826018,6.8173977 z" Stretch="Fill" StrokeThickness="1">
								<Path.Fill>
									<LinearGradientBrush EndPoint="1.011,0.5" StartPoint="-0.012,0.499">
										<GradientStop Color="{DynamicResource LineColor#184184184}" Offset="0"/>
										<GradientStop Color="{DynamicResource white}" Offset="1"/>
									</LinearGradientBrush>
								</Path.Fill>
							</Path>
							<ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
						</Grid>
					</ControlTemplate>
				</Setter.Value>
			</Setter>
		</Style>
		<Style x:Key="ListBoxItemMiddle" TargetType="{x:Type ListBoxItem}">
			<Setter Property="Template">
				<Setter.Value>
					<ControlTemplate TargetType="{x:Type ListBoxItem}">
						<Grid>
							<VisualStateManager.VisualStateGroups>
								<VisualStateGroup x:Name="SelectionStates">
									<VisualState x:Name="Unselected"/>
									<VisualState x:Name="Selected">
										<Storyboard>
											<ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Shape.Fill).(GradientBrush.GradientStops)[0].(GradientStop.Color)" Storyboard.TargetName="path">
												<EasingColorKeyFrame KeyTime="0" Value="{StaticResource GreenLeft}"/>
											</ColorAnimationUsingKeyFrames>
											<ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Shape.Fill).(GradientBrush.GradientStops)[1].(GradientStop.Color)" Storyboard.TargetName="path">
												<EasingColorKeyFrame KeyTime="0" Value="{StaticResource GreenRight}"/>
											</ColorAnimationUsingKeyFrames>
										</Storyboard>
									</VisualState>
									<VisualState x:Name="SelectedUnfocused"/>
								</VisualStateGroup>
							</VisualStateManager.VisualStateGroups>
							<Path x:Name="path" Data="M5.68117,0 L85.660629,0 85.660629,6.8173975 79.977997,12.499999 85.660629,18.182601 85.660629,24.999997 5.68117,24.999997 5.68117,18.182601 0,12.499999 5.68117,6.8173975 z" Stretch="Fill" StrokeThickness="1">
								<Path.Fill>
									<LinearGradientBrush EndPoint="1.01,0.499" StartPoint="-0.027,0.487">
										<GradientStop Color="{DynamicResource LineColor#184184184}" Offset="0"/>
										<GradientStop Color="White" Offset="1"/>
									</LinearGradientBrush>
								</Path.Fill>
							</Path>
							<ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
						</Grid>
					</ControlTemplate>
				</Setter.Value>
			</Setter>
		</Style>
		<Style x:Key="TabItem2ndmenuMIddle" TargetType="{x:Type TabItem}">
			<Setter Property="FocusVisualStyle" Value="{StaticResource TabItemFocusVisual}"/>
			<Setter Property="Foreground" Value="Black"/>
			<Setter Property="Padding" Value="6,1,6,1"/>
			<Setter Property="BorderBrush" Value="{StaticResource TabControlNormalBorderBrush}"/>
			<Setter Property="Background" Value="{StaticResource ButtonNormalBackground}"/>
			<Setter Property="HorizontalContentAlignment" Value="Stretch"/>
			<Setter Property="VerticalContentAlignment" Value="Stretch"/>
			<Setter Property="Template">
				<Setter.Value>
					<ControlTemplate TargetType="{x:Type TabItem}">
						<Grid SnapsToDevicePixels="true" Width="85">
							<VisualStateManager.VisualStateGroups>
								<VisualStateGroup x:Name="SelectionStates">
									<VisualState x:Name="Unselected"/>
									<VisualState x:Name="Selected">
										<Storyboard>
											<ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Shape.Fill).(GradientBrush.GradientStops)[0].(GradientStop.Color)" Storyboard.TargetName="path">
												<EasingColorKeyFrame KeyTime="0" Value="{StaticResource GreenLeft}"/>
											</ColorAnimationUsingKeyFrames>
											<ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Shape.Fill).(GradientBrush.GradientStops)[1].(GradientStop.Color)" Storyboard.TargetName="path">
												<EasingColorKeyFrame KeyTime="0" Value="{StaticResource GreenRight}"/>
											</ColorAnimationUsingKeyFrames>
										</Storyboard>
									</VisualState>
								</VisualStateGroup>
							</VisualStateManager.VisualStateGroups>
							<Grid x:Name="Bd" Width="85" Height="25">
								<Path x:Name="path" Data="M5.68117,0 L85.660629,0 85.660629,6.8173975 79.977997,12.499999 85.660629,18.182601 85.660629,24.999997 5.68117,24.999997 5.68117,18.182601 0,12.499999 5.68117,6.8173975 z" Stretch="Fill" StrokeThickness="1" Cursor="Hand">
									<Path.Fill>
										<LinearGradientBrush EndPoint="1.01,0.499" StartPoint="-0.027,0.487">
											<GradientStop Color="{DynamicResource LineColor#184184184}" Offset="0"/>
											<GradientStop Color="{DynamicResource #122122122}" Offset="1"/>
										</LinearGradientBrush>
									</Path.Fill>
								</Path>
								<ContentPresenter x:Name="Content" ContentSource="Header" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" Margin="7,2,7,1" HorizontalAlignment="Center" VerticalAlignment="Center" Cursor="Hand"/>
							</Grid>
						</Grid>
						<ControlTemplate.Triggers>
							<Trigger Property="IsMouseOver" Value="true"/>
							<Trigger Property="IsSelected" Value="true">
								<Setter Property="Panel.ZIndex" Value="1"/>
							</Trigger>
							<MultiTrigger>
								<MultiTrigger.Conditions>
									<Condition Property="IsSelected" Value="false"/>
									<Condition Property="IsMouseOver" Value="true"/>
								</MultiTrigger.Conditions>
							</MultiTrigger>
							<Trigger Property="TabStripPlacement" Value="Bottom"/>
							<Trigger Property="TabStripPlacement" Value="Left"/>
							<Trigger Property="TabStripPlacement" Value="Right"/>
							<MultiTrigger>
								<MultiTrigger.Conditions>
									<Condition Property="IsSelected" Value="true"/>
									<Condition Property="TabStripPlacement" Value="Top"/>
								</MultiTrigger.Conditions>
								<Setter Property="Margin" Value="-2,-2,-2,-1"/>
								<Setter Property="Margin" TargetName="Content" Value="0,0,0,1"/>
							</MultiTrigger>
							<MultiTrigger>
								<MultiTrigger.Conditions>
									<Condition Property="IsSelected" Value="true"/>
									<Condition Property="TabStripPlacement" Value="Bottom"/>
								</MultiTrigger.Conditions>
								<Setter Property="Margin" Value="-2,-1,-2,-2"/>
								<Setter Property="Margin" TargetName="Content" Value="0,1,0,0"/>
							</MultiTrigger>
							<MultiTrigger>
								<MultiTrigger.Conditions>
									<Condition Property="IsSelected" Value="true"/>
									<Condition Property="TabStripPlacement" Value="Left"/>
								</MultiTrigger.Conditions>
								<Setter Property="Margin" Value="-2,-2,-1,-2"/>
								<Setter Property="Margin" TargetName="Content" Value="0,0,1,0"/>
							</MultiTrigger>
							<MultiTrigger>
								<MultiTrigger.Conditions>
									<Condition Property="IsSelected" Value="true"/>
									<Condition Property="TabStripPlacement" Value="Right"/>
								</MultiTrigger.Conditions>
								<Setter Property="Margin" Value="-1,-2,-2,-2"/>
								<Setter Property="Margin" TargetName="Content" Value="1,0,0,0"/>
							</MultiTrigger>
							<Trigger Property="IsEnabled" Value="false">
								<Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
							</Trigger>
						</ControlTemplate.Triggers>
					</ControlTemplate>
				</Setter.Value>
			</Setter>
		</Style>
		<Style x:Key="TabItem2ndmenulast" TargetType="{x:Type TabItem}">
			<Setter Property="FocusVisualStyle" Value="{StaticResource TabItemFocusVisual}"/>
			<Setter Property="Foreground" Value="Black"/>
			<Setter Property="Padding" Value="6,1,6,1"/>
			<Setter Property="BorderBrush" Value="{StaticResource TabControlNormalBorderBrush}"/>
			<Setter Property="Background" Value="{StaticResource ButtonNormalBackground}"/>
			<Setter Property="HorizontalContentAlignment" Value="Stretch"/>
			<Setter Property="VerticalContentAlignment" Value="Stretch"/>
			<Setter Property="Template">
				<Setter.Value>
					<ControlTemplate TargetType="{x:Type TabItem}">
						<Grid SnapsToDevicePixels="true">
							<VisualStateManager.VisualStateGroups>
								<VisualStateGroup x:Name="SelectionStates">
									<VisualState x:Name="Unselected"/>
									<VisualState x:Name="Selected">
										<Storyboard>
											<ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Shape.Fill).(GradientBrush.GradientStops)[0].(GradientStop.Color)" Storyboard.TargetName="path">
												<EasingColorKeyFrame KeyTime="0" Value="{StaticResource GreenLeft}"/>
											</ColorAnimationUsingKeyFrames>
											<ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Shape.Fill).(GradientBrush.GradientStops)[1].(GradientStop.Color)" Storyboard.TargetName="path">
												<EasingColorKeyFrame KeyTime="0" Value="{StaticResource GreenRight}"/>
											</ColorAnimationUsingKeyFrames>
										</Storyboard>
									</VisualState>
								</VisualStateGroup>
							</VisualStateManager.VisualStateGroups>
							<Grid x:Name="Bd" Width="85" Height="25">
								<Path x:Name="path" Data="M5.6826018,0 L85.682602,0 85.682602,25 5.6826018,25 5.6826018,18.182602 0,12.5 5.6826018,6.8173977 z" Stretch="Fill" StrokeThickness="1" Cursor="Hand">
									<Path.Fill>
										<LinearGradientBrush EndPoint="1.011,0.5" StartPoint="-0.012,0.499">
											<GradientStop Color="{DynamicResource LineColor#184184184}" Offset="0"/>
											<GradientStop Color="{DynamicResource #122122122}" Offset="1"/>
										</LinearGradientBrush>
									</Path.Fill>
								</Path>
								<ContentPresenter x:Name="Content" ContentSource="Header" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" Margin="7,2,7,1" HorizontalAlignment="Center" VerticalAlignment="Center" Cursor="Hand"/>
							</Grid>
						</Grid>
						<ControlTemplate.Triggers>
							<Trigger Property="IsMouseOver" Value="true"/>
							<Trigger Property="IsSelected" Value="true">
								<Setter Property="Panel.ZIndex" Value="1"/>
							</Trigger>
							<MultiTrigger>
								<MultiTrigger.Conditions>
									<Condition Property="IsSelected" Value="false"/>
									<Condition Property="IsMouseOver" Value="true"/>
								</MultiTrigger.Conditions>
							</MultiTrigger>
							<Trigger Property="TabStripPlacement" Value="Bottom"/>
							<Trigger Property="TabStripPlacement" Value="Left"/>
							<Trigger Property="TabStripPlacement" Value="Right"/>
							<MultiTrigger>
								<MultiTrigger.Conditions>
									<Condition Property="IsSelected" Value="true"/>
									<Condition Property="TabStripPlacement" Value="Top"/>
								</MultiTrigger.Conditions>
								<Setter Property="Margin" Value="-2,-2,-2,-1"/>
								<Setter Property="Margin" TargetName="Content" Value="0,0,0,1"/>
							</MultiTrigger>
							<MultiTrigger>
								<MultiTrigger.Conditions>
									<Condition Property="IsSelected" Value="true"/>
									<Condition Property="TabStripPlacement" Value="Bottom"/>
								</MultiTrigger.Conditions>
								<Setter Property="Margin" Value="-2,-1,-2,-2"/>
								<Setter Property="Margin" TargetName="Content" Value="0,1,0,0"/>
							</MultiTrigger>
							<MultiTrigger>
								<MultiTrigger.Conditions>
									<Condition Property="IsSelected" Value="true"/>
									<Condition Property="TabStripPlacement" Value="Left"/>
								</MultiTrigger.Conditions>
								<Setter Property="Margin" Value="-2,-2,-1,-2"/>
								<Setter Property="Margin" TargetName="Content" Value="0,0,1,0"/>
							</MultiTrigger>
							<MultiTrigger>
								<MultiTrigger.Conditions>
									<Condition Property="IsSelected" Value="true"/>
									<Condition Property="TabStripPlacement" Value="Right"/>
								</MultiTrigger.Conditions>
								<Setter Property="Margin" Value="-1,-2,-2,-2"/>
								<Setter Property="Margin" TargetName="Content" Value="1,0,0,0"/>
							</MultiTrigger>
							<Trigger Property="IsEnabled" Value="false">
								<Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
							</Trigger>
						</ControlTemplate.Triggers>
					</ControlTemplate>
				</Setter.Value>
			</Setter>
		</Style>
		<Style x:Key="TabControlSubContent" TargetType="{x:Type TabControl}">
			<Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
			<Setter Property="Padding" Value="4,4,4,4"/>
			<Setter Property="BorderThickness" Value="1"/>
			<Setter Property="BorderBrush" Value="{StaticResource TabControlNormalBorderBrush}"/>
			<Setter Property="Background" Value="#F9F9F9"/>
			<Setter Property="HorizontalContentAlignment" Value="Center"/>
			<Setter Property="VerticalContentAlignment" Value="Center"/>
			<Setter Property="Template">
				<Setter.Value>
					<ControlTemplate TargetType="{x:Type TabControl}">
						<Grid ClipToBounds="true" SnapsToDevicePixels="true" KeyboardNavigation.TabNavigation="Local">
							<Grid.ColumnDefinitions>
								<ColumnDefinition x:Name="ColumnDefinition0"/>
								<ColumnDefinition x:Name="ColumnDefinition1" Width="0"/>
							</Grid.ColumnDefinitions>
							<Grid.RowDefinitions>
								<RowDefinition x:Name="RowDefinition0" Height="Auto"/>
								<RowDefinition x:Name="RowDefinition1" Height="*"/>
							</Grid.RowDefinitions>
							<TabPanel x:Name="HeaderPanel" Grid.Column="0" IsItemsHost="true" Margin="2,2,2,0" Grid.Row="0" KeyboardNavigation.TabIndex="1" Panel.ZIndex="1"/>
							<Grid x:Name="ContentPanel" Background="{TemplateBinding Background}" Grid.Column="0" KeyboardNavigation.DirectionalNavigation="Contained" Grid.Row="1" KeyboardNavigation.TabIndex="2" KeyboardNavigation.TabNavigation="Local" Margin="0,10,0,0" >
								<ContentPresenter x:Name="PART_SelectedContentHost" ContentSource="SelectedContent" Margin="10,13,10,10" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
								<Rectangle HorizontalAlignment="Stretch" Height="0.5" VerticalAlignment="Top" Width="Auto" StrokeDashArray="3 3" Margin="12,5,11,0" StrokeThickness="0.5">
									<Rectangle.Stroke>
										<SolidColorBrush Color="{DynamicResource #122122122}"/>
									</Rectangle.Stroke>
								</Rectangle>
							</Grid>
						</Grid>
						<ControlTemplate.Triggers>
							<Trigger Property="TabStripPlacement" Value="Bottom">
								<Setter Property="Grid.Row" TargetName="HeaderPanel" Value="1"/>
								<Setter Property="Height" TargetName="RowDefinition0" Value="*"/>
								<Setter Property="Height" TargetName="RowDefinition1" Value="Auto"/>
								<Setter Property="Margin" TargetName="HeaderPanel" Value="2,0,2,2"/>
							</Trigger>
							<Trigger Property="TabStripPlacement" Value="Left">
								<Setter Property="Grid.Row" TargetName="HeaderPanel" Value="0"/>
								<Setter Property="Grid.Column" TargetName="HeaderPanel" Value="0"/>
								<Setter Property="Width" TargetName="ColumnDefinition0" Value="Auto"/>
								<Setter Property="Width" TargetName="ColumnDefinition1" Value="*"/>
								<Setter Property="Height" TargetName="RowDefinition0" Value="*"/>
								<Setter Property="Height" TargetName="RowDefinition1" Value="0"/>
								<Setter Property="Margin" TargetName="HeaderPanel" Value="2,2,0,2"/>
							</Trigger>
							<Trigger Property="TabStripPlacement" Value="Right">
								<Setter Property="Grid.Row" TargetName="HeaderPanel" Value="0"/>
								<Setter Property="Grid.Column" TargetName="HeaderPanel" Value="1"/>
								<Setter Property="Width" TargetName="ColumnDefinition0" Value="*"/>
								<Setter Property="Width" TargetName="ColumnDefinition1" Value="Auto"/>
								<Setter Property="Height" TargetName="RowDefinition0" Value="*"/>
								<Setter Property="Height" TargetName="RowDefinition1" Value="0"/>
								<Setter Property="Margin" TargetName="HeaderPanel" Value="0,2,2,2"/>
							</Trigger>
							<Trigger Property="IsEnabled" Value="false">
								<Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
							</Trigger>
						</ControlTemplate.Triggers>
					</ControlTemplate>
				</Setter.Value>
			</Setter>
		</Style>
		<Style x:Key="ListBoxItemEmergency" TargetType="{x:Type ListBoxItem}">
			<Setter Property="Background" Value="Transparent"/>
			<Setter Property="HorizontalContentAlignment" Value="{Binding HorizontalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}"/>
			<Setter Property="VerticalContentAlignment" Value="{Binding VerticalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}"/>
			<Setter Property="Padding" Value="2,0,0,0"/>
			<Setter Property="Template">
				<Setter.Value>
					<ControlTemplate TargetType="{x:Type ListBoxItem}">
						<Grid x:Name="Bd" Background="Transparent" OpacityMask="{x:Null}" SnapsToDevicePixels="true" >
							<VisualStateManager.VisualStateGroups>
								<VisualStateGroup x:Name="CommonStates">
									<VisualState x:Name="Normal"/>
									<VisualState x:Name="MouseOver"/>
									<VisualState x:Name="Disabled"/>
								</VisualStateGroup>
								<VisualStateGroup x:Name="SelectionStates">
									<VisualState x:Name="Unselected"/>
									<VisualState x:Name="Selected">
										
										<Storyboard>
											<ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Shape.Fill).(GradientBrush.GradientStops)[0].(GradientStop.Color)" Storyboard.TargetName="path">
												<EasingColorKeyFrame KeyTime="0" Value="{StaticResource GreenLeft}"/>
											</ColorAnimationUsingKeyFrames>
											<ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Shape.Fill).(GradientBrush.GradientStops)[1].(GradientStop.Color)" Storyboard.TargetName="path">
												<EasingColorKeyFrame KeyTime="0" Value="{StaticResource GreenRight}"/>
											</ColorAnimationUsingKeyFrames>
										</Storyboard>
										
									</VisualState>
									<VisualState x:Name="SelectedUnfocused">
										<Storyboard>
											<ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Shape.Fill).(GradientBrush.GradientStops)[0].(GradientStop.Color)" Storyboard.TargetName="path">
												<EasingColorKeyFrame KeyTime="0" Value="{StaticResource GreenLeft}"/>
											</ColorAnimationUsingKeyFrames>
											<ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Shape.Fill).(GradientBrush.GradientStops)[1].(GradientStop.Color)" Storyboard.TargetName="path">
												<EasingColorKeyFrame KeyTime="0" Value="{StaticResource GreenRight}"/>
											</ColorAnimationUsingKeyFrames>
										</Storyboard>
									</VisualState>
								</VisualStateGroup>
							</VisualStateManager.VisualStateGroups>
							<Path x:Name="path" Data="M7.9999997,0 L28,0 C32.418277,0 36,3.581722 36,8 L36,20 36,46 36,54 28,54 7.9999997,54 2.8421709E-14,54 2.8421709E-14,46 2.8421709E-14,20 2.8421709E-14,8 C-2.6822087E-07,3.581722 3.5817218,0 7.9999997,0 z" Stretch="Fill" StrokeThickness="1" Cursor="Hand">
								<Path.Fill>
									<LinearGradientBrush EndPoint="1.007,0.5" StartPoint="0,0.505">
										<GradientStop Color="{DynamicResource #122122122}" Offset="0"/>
										<GradientStop Color="{DynamicResource #122122122}" Offset="1"/>
									</LinearGradientBrush>
								</Path.Fill>
							</Path>
							<Image Source="CutImages/图像/FeiJing.png" Stretch="Fill" Height="36" Width="34" Margin="2,9,0,9" Cursor="Hand"/>
						</Grid>
						<ControlTemplate.Triggers>
							<Trigger Property="IsSelected" Value="true">
								<Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.HighlightTextBrushKey}}"/>
							</Trigger>
							<MultiTrigger>
								<MultiTrigger.Conditions>
									<Condition Property="IsSelected" Value="true"/>
									<Condition Property="Selector.IsSelectionActive" Value="false"/>
								</MultiTrigger.Conditions>
								<Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
							</MultiTrigger>
							<Trigger Property="IsEnabled" Value="false">
								<Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
							</Trigger>
						</ControlTemplate.Triggers>
					</ControlTemplate>
				</Setter.Value>
			</Setter>
		</Style>
		<Style x:Key="ListBoxItemHuoJIng" TargetType="{x:Type ListBoxItem}">
			<Setter Property="Background" Value="Transparent"/>
			<Setter Property="HorizontalContentAlignment" Value="{Binding HorizontalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}"/>
			<Setter Property="VerticalContentAlignment" Value="{Binding VerticalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}"/>
			<Setter Property="Padding" Value="2,0,0,0"/>
			<Setter Property="Template">
				<Setter.Value>
					<ControlTemplate TargetType="{x:Type ListBoxItem}">
						<Grid x:Name="Bd" Background="Transparent" SnapsToDevicePixels="true" >
							<VisualStateManager.VisualStateGroups>
								<VisualStateGroup x:Name="SelectionStates">
									<VisualState x:Name="Unselected"/>
									<VisualState x:Name="Selected">
										<Storyboard>
											<ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Shape.Fill).(GradientBrush.GradientStops)[0].(GradientStop.Color)" Storyboard.TargetName="rectangle">
												<EasingColorKeyFrame KeyTime="0" Value="{StaticResource GreenLeft}"/>
											</ColorAnimationUsingKeyFrames>
											<ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Shape.Fill).(GradientBrush.GradientStops)[1].(GradientStop.Color)" Storyboard.TargetName="rectangle">
												<EasingColorKeyFrame KeyTime="0" Value="{StaticResource GreenRight}"/>
											</ColorAnimationUsingKeyFrames>
										</Storyboard>
									</VisualState>
									<VisualState x:Name="SelectedUnfocused">
										<Storyboard>
											<ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Shape.Fill).(GradientBrush.GradientStops)[0].(GradientStop.Color)" Storyboard.TargetName="rectangle">
												<EasingColorKeyFrame KeyTime="0" Value="{StaticResource GreenLeft}"/>
											</ColorAnimationUsingKeyFrames>
											<ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Shape.Fill).(GradientBrush.GradientStops)[1].(GradientStop.Color)" Storyboard.TargetName="rectangle">
												<EasingColorKeyFrame KeyTime="0" Value="{StaticResource GreenRight}"/>
											</ColorAnimationUsingKeyFrames>
										</Storyboard>
									</VisualState>
								</VisualStateGroup>
							</VisualStateManager.VisualStateGroups>
							<Rectangle x:Name="rectangle" StrokeThickness="1">
								<Rectangle.Fill>
									<LinearGradientBrush EndPoint="1.01,0.506" StartPoint="0.008,0.508">
										<GradientStop Color="{DynamicResource #122122122}" Offset="0"/>
										<GradientStop Color="{DynamicResource #122122122}" Offset="1"/>
									</LinearGradientBrush>
								</Rectangle.Fill>
							</Rectangle>
							<Image Source="CutImages/图像/HuoJing.png" Stretch="Fill" Width="34" Height="40" Margin="2,7,0,7"/>
						</Grid>
						<ControlTemplate.Triggers>
							<Trigger Property="IsSelected" Value="true">
								<Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.HighlightTextBrushKey}}"/>
							</Trigger>
							<MultiTrigger>
								<MultiTrigger.Conditions>
									<Condition Property="IsSelected" Value="true"/>
									<Condition Property="Selector.IsSelectionActive" Value="false"/>
								</MultiTrigger.Conditions>
								<Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
							</MultiTrigger>
							<Trigger Property="IsEnabled" Value="false">
								<Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
							</Trigger>
						</ControlTemplate.Triggers>
					</ControlTemplate>
				</Setter.Value>
			</Setter>
		</Style>
		<Style x:Key="ListBoxItemYiLiao" TargetType="{x:Type ListBoxItem}">
			<Setter Property="Background" Value="Transparent"/>
			<Setter Property="HorizontalContentAlignment" Value="{Binding HorizontalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}"/>
			<Setter Property="VerticalContentAlignment" Value="{Binding VerticalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}"/>
			<Setter Property="Padding" Value="2,0,0,0"/>
			<Setter Property="Template">
				<Setter.Value>
					<ControlTemplate TargetType="{x:Type ListBoxItem}">
						<Grid x:Name="Bd" Background="Transparent" SnapsToDevicePixels="true" >
							<VisualStateManager.VisualStateGroups>
								<VisualStateGroup x:Name="SelectionStates">
									<VisualState x:Name="Unselected"/>
									<VisualState x:Name="Selected">
										<Storyboard>
											<ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Shape.Fill).(GradientBrush.GradientStops)[0].(GradientStop.Color)" Storyboard.TargetName="rectangle">
												<EasingColorKeyFrame KeyTime="0" Value="{StaticResource GreenLeft}"/>
											</ColorAnimationUsingKeyFrames>
											<ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Shape.Fill).(GradientBrush.GradientStops)[1].(GradientStop.Color)" Storyboard.TargetName="rectangle">
												<EasingColorKeyFrame KeyTime="0" Value="{StaticResource GreenRight}"/>
											</ColorAnimationUsingKeyFrames>
										</Storyboard>
									</VisualState>
									<VisualState x:Name="SelectedUnfocused">
										<Storyboard>
											<ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Shape.Fill).(GradientBrush.GradientStops)[0].(GradientStop.Color)" Storyboard.TargetName="rectangle">
												<EasingColorKeyFrame KeyTime="0" Value="{StaticResource GreenLeft}"/>
											</ColorAnimationUsingKeyFrames>
											<ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Shape.Fill).(GradientBrush.GradientStops)[1].(GradientStop.Color)" Storyboard.TargetName="rectangle">
												<EasingColorKeyFrame KeyTime="0" Value="{StaticResource GreenRight}"/>
											</ColorAnimationUsingKeyFrames>
										</Storyboard>
									</VisualState>
								</VisualStateGroup>
							</VisualStateManager.VisualStateGroups>
							<Rectangle x:Name="rectangle" StrokeThickness="1">
								<Rectangle.Fill>
									<LinearGradientBrush EndPoint="1.005,0.497" StartPoint="-0.009,0.494">
										<GradientStop Color="{DynamicResource #122122122}" Offset="0"/>
										<GradientStop Color="{DynamicResource #122122122}" Offset="1"/>
									</LinearGradientBrush>
								</Rectangle.Fill>
							</Rectangle>
							<Image Source="CutImages/图像/YiLiao.png" Stretch="Fill" Width="34" Height="40" Margin="2,7,0,7"/>
						</Grid>
						<ControlTemplate.Triggers>
							<Trigger Property="IsSelected" Value="true">
								<Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.HighlightTextBrushKey}}"/>
							</Trigger>
							<MultiTrigger>
								<MultiTrigger.Conditions>
									<Condition Property="IsSelected" Value="true"/>
									<Condition Property="Selector.IsSelectionActive" Value="false"/>
								</MultiTrigger.Conditions>
								<Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
							</MultiTrigger>
							<Trigger Property="IsEnabled" Value="false">
								<Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
							</Trigger>
						</ControlTemplate.Triggers>
					</ControlTemplate>
				</Setter.Value>
			</Setter>
		</Style>
		<Style x:Key="ListBoxItemWeixianyuan" TargetType="{x:Type ListBoxItem}">
			<Setter Property="Background" Value="Transparent"/>
			<Setter Property="HorizontalContentAlignment" Value="{Binding HorizontalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}"/>
			<Setter Property="VerticalContentAlignment" Value="{Binding VerticalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}"/>
			<Setter Property="Padding" Value="2,0,0,0"/>
			<Setter Property="Template">
				<Setter.Value>
					<ControlTemplate TargetType="{x:Type ListBoxItem}">
						<Grid x:Name="Bd" Background="{TemplateBinding Background}" SnapsToDevicePixels="true">
							<VisualStateManager.VisualStateGroups>
								<VisualStateGroup x:Name="SelectionStates">
									<VisualState x:Name="Unselected"/>
									<VisualState x:Name="Selected">
										<Storyboard>
											<ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Shape.Fill).(GradientBrush.GradientStops)[1].(GradientStop.Color)" Storyboard.TargetName="path">
												<EasingColorKeyFrame KeyTime="0" Value="{StaticResource GreenRight}"/>
											</ColorAnimationUsingKeyFrames>
											<ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Shape.Fill).(GradientBrush.GradientStops)[0].(GradientStop.Color)" Storyboard.TargetName="path">
												<EasingColorKeyFrame KeyTime="0" Value="{StaticResource GreenLeft}"/>
											</ColorAnimationUsingKeyFrames>
										</Storyboard>
									</VisualState>
									<VisualState x:Name="SelectedUnfocused">
										<Storyboard>
											<ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Shape.Fill).(GradientBrush.GradientStops)[1].(GradientStop.Color)" Storyboard.TargetName="path">
												<EasingColorKeyFrame KeyTime="0" Value="{StaticResource GreenRight}"/>
											</ColorAnimationUsingKeyFrames>
											<ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Shape.Fill).(GradientBrush.GradientStops)[0].(GradientStop.Color)" Storyboard.TargetName="path">
												<EasingColorKeyFrame KeyTime="0" Value="{StaticResource GreenLeft}"/>
											</ColorAnimationUsingKeyFrames>
										</Storyboard>
									</VisualState>
								</VisualStateGroup>
							</VisualStateManager.VisualStateGroups>
							<Path x:Name="path" Data="M2.8421709E-14,0 L7.9999997,0 28,0 36,0 36,8 36,34 36,46 C36,50.418278 32.418277,54 28,54 L7.9999997,54 C3.5817218,54 -2.6822087E-07,50.418278 2.8421709E-14,46 L2.8421709E-14,34 2.8421709E-14,8 z" Margin="0" Stretch="Fill" StrokeThickness="1">
								<Path.Fill>
									<LinearGradientBrush EndPoint="1.009,0.453" StartPoint="-0.025,0.445">
										<GradientStop Color="{DynamicResource #122122122}" Offset="0"/>
										<GradientStop Color="{DynamicResource #122122122}" Offset="1"/>
									</LinearGradientBrush>
								</Path.Fill>
							</Path>
							<Image Source="CutImages/图像/Fushe.png" Stretch="Fill" Height="36" Margin="2,9,0,9"/>
						</Grid>
						<ControlTemplate.Triggers>
							<Trigger Property="IsSelected" Value="true">
								<Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.HighlightTextBrushKey}}"/>
							</Trigger>
							<MultiTrigger>
								<MultiTrigger.Conditions>
									<Condition Property="IsSelected" Value="true"/>
									<Condition Property="Selector.IsSelectionActive" Value="false"/>
								</MultiTrigger.Conditions>
								<Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
							</MultiTrigger>
							<Trigger Property="IsEnabled" Value="false">
								<Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
							</Trigger>
						</ControlTemplate.Triggers>
					</ControlTemplate>
				</Setter.Value>
			</Setter>
		</Style>
		<Style x:Key="LabelRightContent" TargetType="{x:Type Label}">
			<Setter Property="Template">
				<Setter.Value>
					<ControlTemplate TargetType="{x:Type Label}">
						<Grid>
							<Grid.ColumnDefinitions>
								<ColumnDefinition Width="89.498"/>
								<ColumnDefinition/>
							</Grid.ColumnDefinitions>
							<Grid Margin="0,0,10,0.53">
								<Path Data="M7.9999995,5.6843419E-14 L17.875,5.6843419E-14 22,5.6843419E-14 80,5.6843419E-14 80,16 50.625,16 22,16 17.875,16 7.9999995,16 0,16 0,7.9999995 C0,3.5817213 3.581722,-4.768371E-07 7.9999995,5.6843419E-14 z" Fill="{DynamicResource bluegredient}" Stretch="Fill" Height="16" VerticalAlignment="Top"/>
								<Path Data="M35.0625,0 L38.598583,7.6669999 73,7.6669999 73,9.6669998 39.521,9.6669998 30.604,9.6669998 0,9.6669998 0,7.6669999 31.526417,7.6669999 z" Fill="{DynamicResource bluegredient}" Stretch="Fill" Margin="3.663,0,0.275,0" Height="9.668" VerticalAlignment="Bottom" />
							</Grid>
							<Grid Margin="0,0,0,0.53" Grid.Column="1">
								<Grid.ColumnDefinitions>
									<ColumnDefinition/>
								</Grid.ColumnDefinitions>
								<Path Grid.ColumnSpan="1" Grid.Column="0" Data="M0,3.0013325E-11 L1.6560059,3.0013325E-11 C6.0814209,-1.1935911E-05 9.6689453,3.5817131 9.6689453,7.9999956 L9.6151123,8.5333151 9.6689453,8.5333151 9.6689453,15.999991 1.6560059,15.999991 0,15.999991 z" Fill="#FF7A7A7A" HorizontalAlignment="Right" IsEnabled="False" Style="{DynamicResource PathStyle1}" Stretch="Fill" Visibility="Visible" VerticalAlignment="Top" Width="9.638"/>
								<Rectangle Grid.Column="0" Fill="#FF7A7A7A" HorizontalAlignment="Stretch" Height="16" Margin="0,0,8,0" VerticalAlignment="Top" Width="Auto" Grid.ColumnSpan="1"/>
								<GridSplitter Margin="0,38.304,5,0" Height="2" Background="#FFB7B7B7" HorizontalAlignment="Stretch"/>
							</Grid>
							<ContentPresenter Grid.ColumnSpan="1" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" HorizontalAlignment="Center" VerticalAlignment="Center" Margin="0,9,10,0"/>
						</Grid>
					</ControlTemplate>
				</Setter.Value>
			</Setter>
		</Style>
		<Style x:Key="ButtonSearch" TargetType="{x:Type Button}">
			<Setter Property="Template">
				<Setter.Value>
					<ControlTemplate TargetType="{x:Type Button}">
						<Grid>
							<VisualStateManager.VisualStateGroups>
								<VisualStateGroup x:Name="CommonStates">
									<VisualStateGroup.Transitions>
										<VisualTransition GeneratedDuration="0:0:0.1"/>
									</VisualStateGroup.Transitions>
									<VisualState x:Name="Normal"/>
									<VisualState x:Name="MouseOver"/>
									<VisualState x:Name="Pressed">
										<Storyboard>
											<DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Effect).(DropShadowEffect.BlurRadius)" Storyboard.TargetName="rectangle">
												<EasingDoubleKeyFrame KeyTime="0" Value="2"/>
											</DoubleAnimationUsingKeyFrames>
											<DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Effect).(DropShadowEffect.ShadowDepth)" Storyboard.TargetName="rectangle">
												<EasingDoubleKeyFrame KeyTime="0" Value="0.3"/>
											</DoubleAnimationUsingKeyFrames>	
										</Storyboard>
									</VisualState>
									<VisualState x:Name="Disabled"/>
								</VisualStateGroup>
							</VisualStateManager.VisualStateGroups>
							<Grid x:Name="grid">
								<Rectangle x:Name="rectangle" Fill="White" RadiusY="8" RadiusX="8" Height="30" Cursor="Hand">
									<Rectangle.Effect>
										<DropShadowEffect Direction="315" ShadowDepth="0.5" BlurRadius="4"/>
									</Rectangle.Effect>
								</Rectangle>
								<Ellipse x:Name="ellipse" Margin="10.791,10.492,12.209,0" StrokeThickness="4" VerticalAlignment="Top" Height="7" Fill="{DynamicResource bluegredient}" Cursor="Hand"/>
								<Path x:Name="path" Data="M21.011086,17.817692 L18.182692,20.646086 21.142607,23.605999 23.971001,20.777607 z M14.290925,7.4920001 C10.701116,7.4920001 7.7909999,10.402115 7.7909999,13.991924 7.7909999,17.581734 10.701116,20.491848 14.290925,20.491848 17.880733,20.491848 20.79085,17.581734 20.79085,13.991924 20.79085,10.402115 17.880733,7.4920001 14.290925,7.4920001 z M8,0 L22,0 C26.418278,0 30,3.581722 30,8 L30,22 C30,26.418278 26.418278,30 22,30 L8,30 C3.581722,30 0,26.418278 0,22 L0,8 C0,3.581722 3.581722,0 8,0 z" Fill="{DynamicResource bluegredient}" Stretch="Fill" Cursor="Hand" />
							</Grid>
							<ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" Content=""/>
						</Grid>
						<ControlTemplate.Triggers>
							<Trigger Property="IsFocused" Value="True"/>
							<Trigger Property="IsDefaulted" Value="True"/>
							<Trigger Property="IsMouseOver" Value="True"/>
							<Trigger Property="IsPressed" Value="True"/>
							<Trigger Property="IsEnabled" Value="False"/>
						</ControlTemplate.Triggers>
					</ControlTemplate>
				</Setter.Value>
			</Setter>
		</Style>
		<LinearGradientBrush x:Key="searchbox" EndPoint="0.5,1" StartPoint="0.5,0">
			<GradientStop Color="#FFC4C4C4"/>
			<GradientStop Color="#FFD8D8D8" Offset="0.284"/>
			<GradientStop Color="#FFF9F9F9" Offset="1"/>
		</LinearGradientBrush>
		<LinearGradientBrush x:Key="TextBoxBorder" EndPoint="0,20" MappingMode="Absolute" StartPoint="0,0">
			<GradientStop Color="#ABADB3" Offset="0.05"/>
			<GradientStop Color="#E2E3EA" Offset="0.07"/>
			<GradientStop Color="#E3E9EF" Offset="1"/>
		</LinearGradientBrush>
		<Style x:Key="TextBoxSearchbar" BasedOn="{x:Null}" TargetType="{x:Type TextBox}">
			<Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
			<Setter Property="Background" Value="{DynamicResource {x:Static SystemColors.WindowBrushKey}}"/>
			<Setter Property="BorderBrush" Value="{StaticResource TextBoxBorder}"/>
			<Setter Property="BorderThickness" Value="1"/>
			<Setter Property="Padding" Value="1"/>
			<Setter Property="AllowDrop" Value="true"/>
			<Setter Property="FocusVisualStyle" Value="{x:Null}"/>
			<Setter Property="ScrollViewer.PanningMode" Value="VerticalFirst"/>
			<Setter Property="Stylus.IsFlicksEnabled" Value="False"/>
			<Setter Property="Template">
				<Setter.Value>
					<ControlTemplate TargetType="{x:Type TextBox}">
						<Microsoft_Windows_Themes:ListBoxChrome x:Name="Bd" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" RenderMouseOver="{TemplateBinding IsMouseOver}" RenderFocused="{TemplateBinding IsKeyboardFocusWithin}" SnapsToDevicePixels="true">
							<ScrollViewer x:Name="PART_ContentHost" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
						</Microsoft_Windows_Themes:ListBoxChrome>
						<ControlTemplate.Triggers>
							<Trigger Property="IsEnabled" Value="false">
								<Setter Property="Background" TargetName="Bd" Value="{DynamicResource {x:Static SystemColors.ControlBrushKey}}"/>
								<Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
							</Trigger>
						</ControlTemplate.Triggers>
					</ControlTemplate>
				</Setter.Value>
			</Setter>
		</Style>
		<LinearGradientBrush x:Key="MenuItemSelectionFill" EndPoint="0,1" StartPoint="0,0">
			<GradientStop Color="#34C5EBFF" Offset="0"/>
			<GradientStop Color="#3481D8FF" Offset="1"/>
		</LinearGradientBrush>
		<Geometry x:Key="Checkmark">M 0,5.1 L 1.7,5.2 L 3.4,7.1 L 8,0.4 L 9.2,0 L 3.3,10.8 Z</Geometry>
		<ControlTemplate x:Key="{ComponentResourceKey ResourceId=SubmenuItemTemplateKey, TypeInTargetAssembly={x:Type MenuItem}}" TargetType="{x:Type MenuItem}">
			<Grid SnapsToDevicePixels="true">
				<Rectangle x:Name="Bg" Fill="{TemplateBinding Background}" RadiusY="2" RadiusX="2" Stroke="{TemplateBinding BorderBrush}" StrokeThickness="1"/>
				<Rectangle x:Name="InnerBorder" Margin="1" RadiusY="2" RadiusX="2"/>
				<Grid>
					<Grid.ColumnDefinitions>
						<ColumnDefinition MinWidth="24" SharedSizeGroup="MenuItemIconColumnGroup" Width="Auto"/>
						<ColumnDefinition Width="4"/>
						<ColumnDefinition Width="*"/>
						<ColumnDefinition Width="37"/>
						<ColumnDefinition SharedSizeGroup="MenuItemIGTColumnGroup" Width="Auto"/>
						<ColumnDefinition Width="17"/>
					</Grid.ColumnDefinitions>
					<ContentPresenter x:Name="Icon" ContentSource="Icon" Margin="1" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="Center"/>
					<Border x:Name="GlyphPanel" BorderBrush="#CDD3E6" BorderThickness="1" Background="#E6EFF4" CornerRadius="3" Height="22" Margin="1" Visibility="Hidden" Width="22">
						<Path x:Name="Glyph" Data="{StaticResource Checkmark}" Fill="#0C12A1" FlowDirection="LeftToRight" Height="11" Width="9"/>
					</Border>
					<ContentPresenter Grid.Column="2" ContentSource="Header" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
					<TextBlock Grid.Column="4" Margin="{TemplateBinding Padding}" Text="{TemplateBinding InputGestureText}"/>
				</Grid>
			</Grid>
			<ControlTemplate.Triggers>
				<Trigger Property="Icon" Value="{x:Null}">
					<Setter Property="Visibility" TargetName="Icon" Value="Collapsed"/>
				</Trigger>
				<Trigger Property="IsChecked" Value="true">
					<Setter Property="Visibility" TargetName="GlyphPanel" Value="Visible"/>
					<Setter Property="Visibility" TargetName="Icon" Value="Collapsed"/>
				</Trigger>
				<Trigger Property="IsHighlighted" Value="true">
					<Setter Property="Fill" TargetName="Bg" Value="{StaticResource MenuItemSelectionFill}"/>
					<Setter Property="Stroke" TargetName="Bg" Value="#8071CBF1"/>
					<Setter Property="Stroke" TargetName="InnerBorder" Value="#40FFFFFF"/>
				</Trigger>
				<Trigger Property="IsEnabled" Value="false">
					<Setter Property="Foreground" Value="#FF9A9A9A"/>
					<Setter Property="Background" TargetName="GlyphPanel" Value="#EEE9E9"/>
					<Setter Property="BorderBrush" TargetName="GlyphPanel" Value="#DBD6D6"/>
					<Setter Property="Fill" TargetName="Glyph" Value="#848589"/>
				</Trigger>
			</ControlTemplate.Triggers>
		</ControlTemplate>
		<LinearGradientBrush x:Key="MenuItemPressedFill" EndPoint="0,1" StartPoint="0,0">
			<GradientStop Color="#28717070" Offset="0"/>
			<GradientStop Color="#50717070" Offset="0.75"/>
			<GradientStop Color="#90717070" Offset="1"/>
		</LinearGradientBrush>
		<SolidColorBrush x:Key="SubMenuBackgroundBrush" Color="#FFF5F5F5"/>
		<Geometry x:Key="UpArrow">M 0,4 L 3.5,0 L 7,4 Z</Geometry>
		<Style x:Key="MenuScrollButton" BasedOn="{x:Null}" TargetType="{x:Type RepeatButton}">
			<Setter Property="ClickMode" Value="Hover"/>
			<Setter Property="MinWidth" Value="0"/>
			<Setter Property="MinHeight" Value="0"/>
			<Setter Property="Template">
				<Setter.Value>
					<ControlTemplate TargetType="{x:Type RepeatButton}">
						<DockPanel Background="Transparent" SnapsToDevicePixels="true">
							<Rectangle x:Name="R1" DockPanel.Dock="Right" Fill="Transparent" Width="1"/>
							<Rectangle x:Name="B1" DockPanel.Dock="Bottom" Fill="Transparent" Height="1"/>
							<Rectangle x:Name="L1" DockPanel.Dock="Left" Fill="Transparent" Width="1"/>
							<Rectangle x:Name="T1" DockPanel.Dock="Top" Fill="Transparent" Height="1"/>
							<ContentPresenter x:Name="ContentContainer" HorizontalAlignment="Center" Margin="2,2,2,2" VerticalAlignment="Center"/>
						</DockPanel>
						<ControlTemplate.Triggers>
							<Trigger Property="IsPressed" Value="true">
								<Setter Property="Fill" TargetName="R1" Value="{DynamicResource {x:Static SystemColors.ControlLightLightBrushKey}}"/>
								<Setter Property="Fill" TargetName="B1" Value="{DynamicResource {x:Static SystemColors.ControlLightLightBrushKey}}"/>
								<Setter Property="Fill" TargetName="L1" Value="{DynamicResource {x:Static SystemColors.ControlDarkDarkBrushKey}}"/>
								<Setter Property="Fill" TargetName="T1" Value="{DynamicResource {x:Static SystemColors.ControlDarkDarkBrushKey}}"/>
								<Setter Property="Margin" TargetName="ContentContainer" Value="3,3,1,1"/>
							</Trigger>
						</ControlTemplate.Triggers>
					</ControlTemplate>
				</Setter.Value>
			</Setter>
		</Style>
		<MenuScrollingVisibilityConverter x:Key="MenuScrollingVisibilityConverter"/>
		<Geometry x:Key="DownArrow">M 0,0 L 3.5,4 L 7,0 Z</Geometry>
		<Style x:Key="{ComponentResourceKey ResourceId=MenuScrollViewer, TypeInTargetAssembly={x:Type FrameworkElement}}" BasedOn="{x:Null}" TargetType="{x:Type ScrollViewer}">
			<Setter Property="HorizontalScrollBarVisibility" Value="Hidden"/>
			<Setter Property="VerticalScrollBarVisibility" Value="Auto"/>
			<Setter Property="Template">
				<Setter.Value>
					<ControlTemplate TargetType="{x:Type ScrollViewer}">
						<Grid SnapsToDevicePixels="true">
							<Grid.ColumnDefinitions>
								<ColumnDefinition Width="*"/>
							</Grid.ColumnDefinitions>
							<Grid.RowDefinitions>
								<RowDefinition Height="Auto"/>
								<RowDefinition Height="*"/>
								<RowDefinition Height="Auto"/>
							</Grid.RowDefinitions>
							<Border Grid.Column="0" Grid.Row="1">
								<ScrollContentPresenter Margin="{TemplateBinding Padding}"/>
							</Border>
							<RepeatButton Grid.Column="0" CommandTarget="{Binding RelativeSource={RelativeSource TemplatedParent}}" Command="{x:Static ScrollBar.LineUpCommand}" Focusable="false" Grid.Row="0" Style="{StaticResource MenuScrollButton}">
								<RepeatButton.Visibility>
									<MultiBinding ConverterParameter="0" Converter="{StaticResource MenuScrollingVisibilityConverter}" FallbackValue="Visibility.Collapsed">
										<Binding Path="ComputedVerticalScrollBarVisibility" RelativeSource="{RelativeSource TemplatedParent}"/>
										<Binding Path="VerticalOffset" RelativeSource="{RelativeSource TemplatedParent}"/>
										<Binding Path="ExtentHeight" RelativeSource="{RelativeSource TemplatedParent}"/>
										<Binding Path="ViewportHeight" RelativeSource="{RelativeSource TemplatedParent}"/>
									</MultiBinding>
								</RepeatButton.Visibility>
								<Path Data="{StaticResource UpArrow}" Fill="{DynamicResource {x:Static SystemColors.MenuTextBrushKey}}"/>
							</RepeatButton>
							<RepeatButton Grid.Column="0" CommandTarget="{Binding RelativeSource={RelativeSource TemplatedParent}}" Command="{x:Static ScrollBar.LineDownCommand}" Focusable="false" Grid.Row="2" Style="{StaticResource MenuScrollButton}">
								<RepeatButton.Visibility>
									<MultiBinding ConverterParameter="100" Converter="{StaticResource MenuScrollingVisibilityConverter}" FallbackValue="Visibility.Collapsed">
										<Binding Path="ComputedVerticalScrollBarVisibility" RelativeSource="{RelativeSource TemplatedParent}"/>
										<Binding Path="VerticalOffset" RelativeSource="{RelativeSource TemplatedParent}"/>
										<Binding Path="ExtentHeight" RelativeSource="{RelativeSource TemplatedParent}"/>
										<Binding Path="ViewportHeight" RelativeSource="{RelativeSource TemplatedParent}"/>
									</MultiBinding>
								</RepeatButton.Visibility>
								<Path Data="{StaticResource DownArrow}" Fill="{DynamicResource {x:Static SystemColors.MenuTextBrushKey}}"/>
							</RepeatButton>
						</Grid>
					</ControlTemplate>
				</Setter.Value>
			</Setter>
		</Style>
		<ControlTemplate x:Key="{ComponentResourceKey ResourceId=SubmenuContent, TypeInTargetAssembly={x:Type FrameworkElement}}" TargetType="{x:Type ContentControl}">
			<Border BorderBrush="#FF959595" BorderThickness="1" Background="{StaticResource SubMenuBackgroundBrush}">
				<Grid>
					<Rectangle Fill="#F1F1F1" HorizontalAlignment="Left" Margin="2" RadiusY="2" RadiusX="2" Width="28"/>
					<Rectangle Fill="#E2E3E3" HorizontalAlignment="Left" Margin="30,2,0,2" Width="1"/>
					<Rectangle Fill="White" HorizontalAlignment="Left" Margin="31,2,0,2" Width="1"/>
					<ContentPresenter Grid.ColumnSpan="2" Margin="1,0"/>
				</Grid>
			</Border>
		</ControlTemplate>
		<ControlTemplate x:Key="{ComponentResourceKey ResourceId=TopLevelHeaderTemplateKey, TypeInTargetAssembly={x:Type MenuItem}}" TargetType="{x:Type MenuItem}">
			<Grid SnapsToDevicePixels="true">
				<Rectangle x:Name="OuterBorder" RadiusY="2" RadiusX="2"/>
				<Rectangle x:Name="Bg" Fill="{TemplateBinding Background}" Margin="1" RadiusY="1" RadiusX="1" Stroke="{TemplateBinding BorderBrush}" StrokeThickness="1"/>
				<Rectangle x:Name="InnerBorder" Margin="2"/>
				<DockPanel>
					<ContentPresenter x:Name="Icon" ContentSource="Icon" Margin="4,0,6,0" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="Center"/>
					<Path x:Name="GlyphPanel" Data="{StaticResource Checkmark}" Fill="{TemplateBinding Foreground}" FlowDirection="LeftToRight" Margin="7,0,0,0" Visibility="Collapsed" VerticalAlignment="Center"/>
					<ContentPresenter ContentSource="Header" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
				</DockPanel>
				<Popup x:Name="PART_Popup" AllowsTransparency="true" Focusable="false" HorizontalOffset="1" IsOpen="{Binding IsSubmenuOpen, RelativeSource={RelativeSource TemplatedParent}}" PopupAnimation="{DynamicResource {x:Static SystemParameters.MenuPopupAnimationKey}}" Placement="Bottom" VerticalOffset="-1">
					<Microsoft_Windows_Themes:SystemDropShadowChrome x:Name="Shdw" Color="Transparent">
						<ContentControl x:Name="SubMenuBorder" IsTabStop="false" Template="{DynamicResource {ComponentResourceKey ResourceId=SubmenuContent, TypeInTargetAssembly={x:Type FrameworkElement}}}">
							<ScrollViewer x:Name="SubMenuScrollViewer" CanContentScroll="true" Style="{DynamicResource {ComponentResourceKey ResourceId=MenuScrollViewer, TypeInTargetAssembly={x:Type FrameworkElement}}}">
								<Grid RenderOptions.ClearTypeHint="Enabled">
									<Canvas HorizontalAlignment="Left" Height="0" VerticalAlignment="Top" Width="0">
										<Rectangle Fill="{StaticResource SubMenuBackgroundBrush}" Height="{Binding ActualHeight, ElementName=SubMenuBorder}" Width="{Binding ActualWidth, ElementName=SubMenuBorder}"/>
									</Canvas>
									<ItemsPresenter x:Name="ItemsPresenter" KeyboardNavigation.DirectionalNavigation="Cycle" Grid.IsSharedSizeScope="true" Margin="2" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" KeyboardNavigation.TabNavigation="Cycle"/>
								</Grid>
							</ScrollViewer>
						</ContentControl>
					</Microsoft_Windows_Themes:SystemDropShadowChrome>
				</Popup>
			</Grid>
			<ControlTemplate.Triggers>
				<Trigger Property="IsSuspendingPopupAnimation" Value="true">
					<Setter Property="PopupAnimation" TargetName="PART_Popup" Value="None"/>
				</Trigger>
				<Trigger Property="Icon" Value="{x:Null}">
					<Setter Property="Visibility" TargetName="Icon" Value="Collapsed"/>
				</Trigger>
				<Trigger Property="IsChecked" Value="true">
					<Setter Property="Visibility" TargetName="GlyphPanel" Value="Visible"/>
					<Setter Property="Visibility" TargetName="Icon" Value="Collapsed"/>
				</Trigger>
				<Trigger Property="HasDropShadow" SourceName="PART_Popup" Value="true">
					<Setter Property="Margin" TargetName="Shdw" Value="0,0,5,5"/>
					<Setter Property="Color" TargetName="Shdw" Value="#71000000"/>
				</Trigger>
				<Trigger Property="IsHighlighted" Value="true">
					<Setter Property="Stroke" TargetName="Bg" Value="#90717070"/>
					<Setter Property="Stroke" TargetName="OuterBorder" Value="#50FFFFFF"/>
					<Setter Property="Stroke" TargetName="InnerBorder" Value="#50FFFFFF"/>
				</Trigger>
				<Trigger Property="IsKeyboardFocused" Value="true">
					<Setter Property="Stroke" TargetName="Bg" Value="#E0717070"/>
					<Setter Property="Fill" TargetName="Bg" Value="{StaticResource MenuItemPressedFill}"/>
					<Setter Property="Stroke" TargetName="InnerBorder" Value="#50747272"/>
				</Trigger>
				<Trigger Property="IsSubmenuOpen" Value="true">
					<Setter Property="Stroke" TargetName="Bg" Value="#E0717070"/>
					<Setter Property="Fill" TargetName="Bg" Value="{StaticResource MenuItemPressedFill}"/>
					<Setter Property="Stroke" TargetName="InnerBorder" Value="#50747272"/>
				</Trigger>
				<Trigger Property="IsEnabled" Value="false">
					<Setter Property="Foreground" Value="#FF9A9A9A"/>
					<Setter Property="Fill" TargetName="GlyphPanel" Value="#848589"/>
				</Trigger>
			</ControlTemplate.Triggers>
		</ControlTemplate>
		<ControlTemplate x:Key="{ComponentResourceKey ResourceId=TopLevelItemTemplateKey, TypeInTargetAssembly={x:Type MenuItem}}" TargetType="{x:Type MenuItem}">
			<Grid SnapsToDevicePixels="true">
				<Rectangle x:Name="MenuBg1" Stroke="#FF414141" Style="{DynamicResource RectangleStyle1}"/>
				<DockPanel>
					<ContentPresenter ContentSource="Header" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" HorizontalAlignment="Center" VerticalAlignment="Center"/>
				</DockPanel>
			</Grid>
			<ControlTemplate.Triggers>
				<Trigger Property="Icon" Value="{x:Null}"/>
				<Trigger Property="IsChecked" Value="true"/>
				<Trigger Property="IsHighlighted" Value="true"/>
				<Trigger Property="IsKeyboardFocused" Value="true"/>
				<Trigger Property="IsEnabled" Value="false">
					<Setter Property="Foreground" Value="#FF9A9A9A"/>
				</Trigger>
			</ControlTemplate.Triggers>
		</ControlTemplate>
		<Geometry x:Key="RightArrow">M 0,0 L 4,3.5 L 0,7 Z</Geometry>
		<ControlTemplate x:Key="{ComponentResourceKey ResourceId=SubmenuHeaderTemplateKey, TypeInTargetAssembly={x:Type MenuItem}}" TargetType="{x:Type MenuItem}">
			<Grid SnapsToDevicePixels="true">
				<Rectangle x:Name="Bg" Fill="{TemplateBinding Background}" RadiusY="2" RadiusX="2" Stroke="{TemplateBinding BorderBrush}" StrokeThickness="1"/>
				<Rectangle x:Name="InnerBorder" Margin="1" RadiusY="2" RadiusX="2" Stroke="Transparent" StrokeThickness="1"/>
				<Grid>
					<Grid.ColumnDefinitions>
						<ColumnDefinition MinWidth="24" SharedSizeGroup="MenuItemIconColumnGroup" Width="Auto"/>
						<ColumnDefinition Width="4"/>
						<ColumnDefinition Width="*"/>
						<ColumnDefinition Width="37"/>
						<ColumnDefinition SharedSizeGroup="MenuItemIGTColumnGroup" Width="Auto"/>
						<ColumnDefinition Width="17"/>
					</Grid.ColumnDefinitions>
					<ContentPresenter x:Name="Icon" ContentSource="Icon" Margin="1" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="Center"/>
					<Border x:Name="GlyphPanel" BorderBrush="#CDD3E6" BorderThickness="1" Background="#E6EFF4" CornerRadius="3" Height="22" Margin="1" Visibility="Hidden" Width="22">
						<Path x:Name="Glyph" Data="{StaticResource Checkmark}" Fill="#0C12A1" FlowDirection="LeftToRight" Height="11" Width="9"/>
					</Border>
					<ContentPresenter Grid.Column="2" ContentSource="Header" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
					<TextBlock Grid.Column="4" Margin="{TemplateBinding Padding}" Text="{TemplateBinding InputGestureText}" Visibility="Collapsed"/>
					<Path Grid.Column="5" Data="{StaticResource RightArrow}" Fill="{TemplateBinding Foreground}" Margin="4,0,0,0" VerticalAlignment="Center"/>
				</Grid>
				<Popup x:Name="PART_Popup" AllowsTransparency="true" Focusable="false" HorizontalOffset="-2" IsOpen="{Binding IsSubmenuOpen, RelativeSource={RelativeSource TemplatedParent}}" PopupAnimation="{DynamicResource {x:Static SystemParameters.MenuPopupAnimationKey}}" Placement="Right" VerticalOffset="-3">
					<Microsoft_Windows_Themes:SystemDropShadowChrome x:Name="Shdw" Color="Transparent">
						<ContentControl x:Name="SubMenuBorder" IsTabStop="false" Template="{DynamicResource {ComponentResourceKey ResourceId=SubmenuContent, TypeInTargetAssembly={x:Type FrameworkElement}}}">
							<ScrollViewer x:Name="SubMenuScrollViewer" CanContentScroll="true" Style="{DynamicResource {ComponentResourceKey ResourceId=MenuScrollViewer, TypeInTargetAssembly={x:Type FrameworkElement}}}">
								<Grid RenderOptions.ClearTypeHint="Enabled">
									<Canvas HorizontalAlignment="Left" Height="0" VerticalAlignment="Top" Width="0">
										<Rectangle Fill="{StaticResource SubMenuBackgroundBrush}" Height="{Binding ActualHeight, ElementName=SubMenuBorder}" Width="{Binding ActualWidth, ElementName=SubMenuBorder}"/>
									</Canvas>
									<ItemsPresenter x:Name="ItemsPresenter" KeyboardNavigation.DirectionalNavigation="Cycle" Grid.IsSharedSizeScope="true" Margin="2" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" KeyboardNavigation.TabNavigation="Cycle"/>
								</Grid>
							</ScrollViewer>
						</ContentControl>
					</Microsoft_Windows_Themes:SystemDropShadowChrome>
				</Popup>
			</Grid>
			<ControlTemplate.Triggers>
				<Trigger Property="IsSuspendingPopupAnimation" Value="true">
					<Setter Property="PopupAnimation" TargetName="PART_Popup" Value="None"/>
				</Trigger>
				<Trigger Property="IsHighlighted" Value="true">
					<Setter Property="Stroke" TargetName="InnerBorder" Value="#D1DBF4FF"/>
				</Trigger>
				<Trigger Property="Icon" Value="{x:Null}">
					<Setter Property="Visibility" TargetName="Icon" Value="Collapsed"/>
				</Trigger>
				<Trigger Property="IsChecked" Value="true">
					<Setter Property="Visibility" TargetName="GlyphPanel" Value="Visible"/>
					<Setter Property="Visibility" TargetName="Icon" Value="Collapsed"/>
				</Trigger>
				<Trigger Property="HasDropShadow" SourceName="PART_Popup" Value="true">
					<Setter Property="Margin" TargetName="Shdw" Value="0,0,5,5"/>
					<Setter Property="Color" TargetName="Shdw" Value="#71000000"/>
				</Trigger>
				<Trigger Property="IsHighlighted" Value="true">
					<Setter Property="Fill" TargetName="Bg" Value="{StaticResource MenuItemSelectionFill}"/>
					<Setter Property="Stroke" TargetName="Bg" Value="#8571CBF1"/>
				</Trigger>
				<Trigger Property="IsEnabled" Value="false">
					<Setter Property="Foreground" Value="#FF9A9A9A"/>
					<Setter Property="Background" TargetName="GlyphPanel" Value="#EEE9E9"/>
					<Setter Property="BorderBrush" TargetName="GlyphPanel" Value="#DBD6D6"/>
					<Setter Property="Fill" TargetName="Glyph" Value="#848589"/>
				</Trigger>
			</ControlTemplate.Triggers>
		</ControlTemplate>
		<Style x:Key="MenuItem1stmenu" TargetType="{x:Type MenuItem}">
			<Setter Property="HorizontalContentAlignment" Value="{Binding HorizontalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}"/>
			<Setter Property="VerticalContentAlignment" Value="{Binding VerticalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}"/>
			<Setter Property="Background" Value="Transparent"/>
			<Setter Property="ScrollViewer.PanningMode" Value="Both"/>
			<Setter Property="Stylus.IsFlicksEnabled" Value="False"/>
			<Setter Property="Template" Value="{DynamicResource {ComponentResourceKey ResourceId=SubmenuItemTemplateKey, TypeInTargetAssembly={x:Type MenuItem}}}"/>
			<Style.Triggers>
				<Trigger Property="Role" Value="TopLevelHeader">
					<Setter Property="Padding" Value="7,2,8,3"/>
					<Setter Property="Template" Value="{DynamicResource {ComponentResourceKey ResourceId=TopLevelHeaderTemplateKey, TypeInTargetAssembly={x:Type MenuItem}}}"/>
				</Trigger>
				<Trigger Property="Role" Value="TopLevelItem">
					<Setter Property="Padding" Value="7,2,8,3"/>
					<Setter Property="Template" Value="{DynamicResource {ComponentResourceKey ResourceId=TopLevelItemTemplateKey, TypeInTargetAssembly={x:Type MenuItem}}}"/>
				</Trigger>
				<Trigger Property="Role" Value="SubmenuHeader">
					<Setter Property="Padding" Value="2,3,2,3"/>
					<Setter Property="Template" Value="{DynamicResource {ComponentResourceKey ResourceId=SubmenuHeaderTemplateKey, TypeInTargetAssembly={x:Type MenuItem}}}"/>
				</Trigger>
				<Trigger Property="Role" Value="SubmenuItem">
					<Setter Property="Padding" Value="2,3,2,3"/>
				</Trigger>
			</Style.Triggers>
		</Style>
		<Color x:Key="#235235235">#FFEBEBEB</Color>
		<Style x:Key="RectangleStyle1" TargetType="{x:Type Rectangle}">
			<Setter Property="Fill">
				<Setter.Value>
					<SolidColorBrush Color="{DynamicResource #235235235}"/>
				</Setter.Value>
			</Setter>
		</Style>
		<Color x:Key="Menu2ndSelected">#FF656560</Color>
		<SolidColorBrush x:Key="ListBorder" Color="#828790"/>
		<Style x:Key="ListBoxMenu" TargetType="{x:Type ListBox}">
			<Setter Property="Background" Value="{DynamicResource {x:Static SystemColors.WindowBrushKey}}"/>
			<Setter Property="BorderBrush" Value="{StaticResource ListBorder}"/>
			<Setter Property="BorderThickness" Value="1"/>
			<Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
			<Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Auto"/>
			<Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto"/>
			<Setter Property="ScrollViewer.CanContentScroll" Value="true"/>
			<Setter Property="ScrollViewer.PanningMode" Value="Both"/>
			<Setter Property="Stylus.IsFlicksEnabled" Value="False"/>
			<Setter Property="VerticalContentAlignment" Value="Center"/>
			<Setter Property="Template">
				<Setter.Value>
					<ControlTemplate TargetType="{x:Type ListBox}">
						<Border x:Name="Bd" BorderBrush="{TemplateBinding BorderBrush}" Background="{TemplateBinding Background}" SnapsToDevicePixels="true">
							<ScrollViewer Focusable="false" Padding="{TemplateBinding Padding}">
								<ItemsPresenter SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
							</ScrollViewer>
						</Border>
						<ControlTemplate.Triggers>
							<Trigger Property="IsEnabled" Value="false">
								<Setter Property="Background" TargetName="Bd" Value="{DynamicResource {x:Static SystemColors.ControlBrushKey}}"/>
							</Trigger>
							<Trigger Property="IsGrouping" Value="true">
								<Setter Property="ScrollViewer.CanContentScroll" Value="false"/>
							</Trigger>
						</ControlTemplate.Triggers>
					</ControlTemplate>
				</Setter.Value>
			</Setter>
		</Style>
		<Color x:Key="Foregroundgray">#FF404040</Color>
		<Style x:Key="ButtonFocusVisual">
			<Setter Property="Control.Template">
				<Setter.Value>
					<ControlTemplate>
						<Rectangle Margin="2" SnapsToDevicePixels="true" Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" StrokeThickness="1" StrokeDashArray="1 2"/>
					</ControlTemplate>
				</Setter.Value>
			</Setter>
		</Style>
		<SolidColorBrush x:Key="ButtonNormalBorder" Color="#FF707070"/>
		<Style x:Key="ButtonHome" TargetType="{x:Type Button}">
			<Setter Property="FocusVisualStyle" Value="{StaticResource ButtonFocusVisual}"/>
			<Setter Property="Background" Value="{StaticResource ButtonNormalBackground}"/>
			<Setter Property="BorderBrush" Value="{StaticResource ButtonNormalBorder}"/>
			<Setter Property="BorderThickness" Value="1"/>
			<Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
			<Setter Property="HorizontalContentAlignment" Value="Center"/>
			<Setter Property="VerticalContentAlignment" Value="Center"/>
			<Setter Property="Padding" Value="1"/>
			<Setter Property="Template">
				<Setter.Value>
					<ControlTemplate TargetType="{x:Type Button}">
						<Microsoft_Windows_Themes:ButtonChrome x:Name="Chrome" BorderBrush="{TemplateBinding BorderBrush}" Background="{TemplateBinding Background}" RenderMouseOver="{TemplateBinding IsMouseOver}" RenderPressed="{TemplateBinding IsPressed}" RenderDefaulted="{TemplateBinding IsDefaulted}" SnapsToDevicePixels="true">
							<ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
						</Microsoft_Windows_Themes:ButtonChrome>
						<ControlTemplate.Triggers>
							<Trigger Property="IsKeyboardFocused" Value="true">
								<Setter Property="RenderDefaulted" TargetName="Chrome" Value="true"/>
							</Trigger>
							<Trigger Property="ToggleButton.IsChecked" Value="true">
								<Setter Property="RenderPressed" TargetName="Chrome" Value="true"/>
							</Trigger>
							<Trigger Property="IsEnabled" Value="false">
								<Setter Property="Foreground" Value="#ADADAD"/>
							</Trigger>
						</ControlTemplate.Triggers>
					</ControlTemplate>
				</Setter.Value>
			</Setter>
		</Style>
		<Style x:Key="ButtonColor" TargetType="{x:Type Button}">
			<Setter Property="Template">
				<Setter.Value>
					<ControlTemplate TargetType="{x:Type Button}">
						<Grid>
							<Rectangle RadiusY="8" RadiusX="8">
								<Rectangle.Fill>
									<LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
										<GradientStop Color="#FFA39393" Offset="0"/>
										<GradientStop Color="White" Offset="1"/>
									</LinearGradientBrush>
								</Rectangle.Fill>
								<Rectangle.OpacityMask>
									<ImageBrush Stretch="None">
										<ImageBrush.RelativeTransform>
											<TransformGroup>
												<ScaleTransform CenterY="0.5" CenterX="0.5" ScaleX="0.5" ScaleY="0.5"/>
												<SkewTransform CenterY="0.5" CenterX="0.5"/>
												<RotateTransform CenterY="0.5" CenterX="0.5"/>
												<TranslateTransform/>
											</TransformGroup>
										</ImageBrush.RelativeTransform>
									</ImageBrush>
								</Rectangle.OpacityMask>
							</Rectangle>
							<ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" Content="" OpacityMask="Black"/>
						</Grid>
						<ControlTemplate.Triggers>
							<Trigger Property="IsFocused" Value="True"/>
							<Trigger Property="IsDefaulted" Value="True"/>
							<Trigger Property="IsMouseOver" Value="True"/>
							<Trigger Property="IsPressed" Value="True"/>
							<Trigger Property="IsEnabled" Value="False"/>
						</ControlTemplate.Triggers>
					</ControlTemplate>
				</Setter.Value>
			</Setter>
		</Style>
		<Style x:Key="Buttonblack" TargetType="{x:Type Button}">
			<Setter Property="Template">
				<Setter.Value>
					<ControlTemplate TargetType="{x:Type Button}">
						<Grid>
							<VisualStateManager.VisualStateGroups>
								<VisualStateGroup x:Name="CommonStates">
									<VisualState x:Name="Normal"/>
									<VisualState x:Name="MouseOver"/>
									<VisualState x:Name="Pressed">
										<Storyboard>
											<DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Effect).(DropShadowEffect.BlurRadius)" Storyboard.TargetName="rectangle">
												<EasingDoubleKeyFrame KeyTime="0" Value="2"/>
											</DoubleAnimationUsingKeyFrames>
										</Storyboard>
									</VisualState>
									<VisualState x:Name="Disabled"/>
								</VisualStateGroup>
							</VisualStateManager.VisualStateGroups>
							<Rectangle x:Name="rectangle" HorizontalAlignment="Left" Height="30" RadiusY="8" RadiusX="8" VerticalAlignment="Top" Width="30">
								<Rectangle.Effect>
									<DropShadowEffect ShadowDepth="0"/>
								</Rectangle.Effect>
								<Rectangle.Fill>
									<LinearGradientBrush EndPoint="1.017,1.037" StartPoint="0.021,0.095">
										<GradientStop Color="White" Offset="0"/>
										<GradientStop Color="{DynamicResource #235235235}" Offset="1"/>
									</LinearGradientBrush>
								</Rectangle.Fill>
							</Rectangle>
							<ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" Content=""/>
							<Ellipse Margin="7.5" Width="15" Height="15" HorizontalAlignment="Left" VerticalAlignment="Top" Fill="Black"/>
						</Grid>
						<ControlTemplate.Triggers>
							<Trigger Property="IsFocused" Value="True"/>
							<Trigger Property="IsDefaulted" Value="True"/>
							<Trigger Property="IsMouseOver" Value="True"/>
							<Trigger Property="IsPressed" Value="True"/>
							<Trigger Property="IsEnabled" Value="False"/>
						</ControlTemplate.Triggers>
					</ControlTemplate>
				</Setter.Value>
			</Setter>
		</Style>
		<Style x:Key="Buttonred" TargetType="{x:Type Button}">
			<Setter Property="Template">
				<Setter.Value>
					<ControlTemplate TargetType="{x:Type Button}">
						<Grid>
							<VisualStateManager.VisualStateGroups>
								<VisualStateGroup x:Name="CommonStates">
									<VisualState x:Name="Normal"/>
									<VisualState x:Name="MouseOver"/>
									<VisualState x:Name="Pressed">
										<Storyboard>
											<DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Effect).(DropShadowEffect.BlurRadius)" Storyboard.TargetName="rectangle">
												<EasingDoubleKeyFrame KeyTime="0" Value="2"/>
											</DoubleAnimationUsingKeyFrames>
										</Storyboard>
									</VisualState>
									<VisualState x:Name="Disabled"/>
								</VisualStateGroup>
							</VisualStateManager.VisualStateGroups>
							<Rectangle x:Name="rectangle" HorizontalAlignment="Left" Height="30" RadiusY="8" RadiusX="8" VerticalAlignment="Top" Width="30">
								<Rectangle.Effect>
									<DropShadowEffect ShadowDepth="0"/>
								</Rectangle.Effect>
								<Rectangle.Fill>
									<LinearGradientBrush EndPoint="1.017,1.037" StartPoint="0.021,0.095">
										<GradientStop Color="White" Offset="0"/>
										<GradientStop Color="{DynamicResource #235235235}" Offset="1"/>
									</LinearGradientBrush>
								</Rectangle.Fill>
							</Rectangle>
							<ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" Content=""/>
							<Ellipse Margin="7.5" Width="15" Height="15" HorizontalAlignment="Left" VerticalAlignment="Top" Fill="#FFEB0000"/>
						</Grid>
						<ControlTemplate.Triggers>
							<Trigger Property="IsFocused" Value="True"/>
							<Trigger Property="IsDefaulted" Value="True"/>
							<Trigger Property="IsMouseOver" Value="True"/>
							<Trigger Property="IsPressed" Value="True"/>
							<Trigger Property="IsEnabled" Value="False"/>
						</ControlTemplate.Triggers>
					</ControlTemplate>
				</Setter.Value>
			</Setter>
		</Style>
		<Style x:Key="ButtonGreen" TargetType="{x:Type Button}">
			<Setter Property="Template">
				<Setter.Value>
					<ControlTemplate TargetType="{x:Type Button}">
						<Grid>
							<VisualStateManager.VisualStateGroups>
								<VisualStateGroup x:Name="CommonStates">
									<VisualState x:Name="Normal"/>
									<VisualState x:Name="MouseOver"/>
									<VisualState x:Name="Pressed">
										<Storyboard>
											<DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Effect).(DropShadowEffect.BlurRadius)" Storyboard.TargetName="rectangle">
												<EasingDoubleKeyFrame KeyTime="0" Value="2"/>
											</DoubleAnimationUsingKeyFrames>
										</Storyboard>
									</VisualState>
									<VisualState x:Name="Disabled"/>
								</VisualStateGroup>
							</VisualStateManager.VisualStateGroups>
							<Rectangle x:Name="rectangle" HorizontalAlignment="Left" Height="30" RadiusY="8" RadiusX="8" VerticalAlignment="Top" Width="30">
								<Rectangle.Effect>
									<DropShadowEffect ShadowDepth="0"/>
								</Rectangle.Effect>
								<Rectangle.Fill>
									<LinearGradientBrush EndPoint="1.017,1.037" StartPoint="0.021,0.095">
										<GradientStop Color="White" Offset="0"/>
										<GradientStop Color="{DynamicResource #235235235}" Offset="1"/>
									</LinearGradientBrush>
								</Rectangle.Fill>
							</Rectangle>
							<ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" Content=""/>
							<Ellipse Margin="7.5" Width="15" Height="15" HorizontalAlignment="Left" VerticalAlignment="Top" Fill="Lime"/>
						</Grid>
						<ControlTemplate.Triggers>
							<Trigger Property="IsFocused" Value="True"/>
							<Trigger Property="IsDefaulted" Value="True"/>
							<Trigger Property="IsMouseOver" Value="True"/>
							<Trigger Property="IsPressed" Value="True"/>
							<Trigger Property="IsEnabled" Value="False"/>
						</ControlTemplate.Triggers>
					</ControlTemplate>
				</Setter.Value>
			</Setter>
		</Style>
		<Style x:Key="Buttonblue" TargetType="{x:Type Button}">
			<Setter Property="Template">
				<Setter.Value>
					<ControlTemplate TargetType="{x:Type Button}">
						<Grid>
							<VisualStateManager.VisualStateGroups>
								<VisualStateGroup x:Name="CommonStates">
									<VisualState x:Name="Normal"/>
									<VisualState x:Name="MouseOver"/>
									<VisualState x:Name="Pressed">
										<Storyboard>
											<DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Effect).(DropShadowEffect.BlurRadius)" Storyboard.TargetName="rectangle">
												<EasingDoubleKeyFrame KeyTime="0" Value="2"/>
											</DoubleAnimationUsingKeyFrames>
										</Storyboard>
									</VisualState>
									<VisualState x:Name="Disabled"/>
								</VisualStateGroup>
							</VisualStateManager.VisualStateGroups>
							<Rectangle x:Name="rectangle" HorizontalAlignment="Left" Height="30" RadiusY="8" RadiusX="8" VerticalAlignment="Top" Width="30">
								<Rectangle.Effect>
									<DropShadowEffect ShadowDepth="0"/>
								</Rectangle.Effect>
								<Rectangle.Fill>
									<LinearGradientBrush EndPoint="1.017,1.037" StartPoint="0.021,0.095">
										<GradientStop Color="White" Offset="0"/>
										<GradientStop Color="{DynamicResource #235235235}" Offset="1"/>
									</LinearGradientBrush>
								</Rectangle.Fill>
							</Rectangle>
							<ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" Content=""/>
							<Ellipse Margin="7.5" Width="15" Height="15" HorizontalAlignment="Left" VerticalAlignment="Top" Fill="Blue"/>
						</Grid>
						<ControlTemplate.Triggers>
							<Trigger Property="IsFocused" Value="True"/>
							<Trigger Property="IsDefaulted" Value="True"/>
							<Trigger Property="IsMouseOver" Value="True"/>
							<Trigger Property="IsPressed" Value="True"/>
							<Trigger Property="IsEnabled" Value="False"/>
						</ControlTemplate.Triggers>
					</ControlTemplate>
				</Setter.Value>
			</Setter>
		</Style>
		<Style x:Key="Buttonthick" TargetType="{x:Type Button}">
			<Setter Property="Template">
				<Setter.Value>
					<ControlTemplate TargetType="{x:Type Button}">
						<Grid>
							<VisualStateManager.VisualStateGroups>
								<VisualStateGroup x:Name="CommonStates">
									<VisualState x:Name="Normal"/>
									<VisualState x:Name="MouseOver"/>
									<VisualState x:Name="Pressed">
										<Storyboard>
											<DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Effect).(DropShadowEffect.BlurRadius)" Storyboard.TargetName="rectangle">
												<EasingDoubleKeyFrame KeyTime="0" Value="2"/>
											</DoubleAnimationUsingKeyFrames>
										</Storyboard>
									</VisualState>
									<VisualState x:Name="Disabled"/>
								</VisualStateGroup>
							</VisualStateManager.VisualStateGroups>
							<Rectangle x:Name="rectangle" HorizontalAlignment="Left" Height="30" RadiusY="8" RadiusX="8" VerticalAlignment="Top" Width="30">
								<Rectangle.Effect>
									<DropShadowEffect ShadowDepth="0"/>
								</Rectangle.Effect>
								<Rectangle.Fill>
									<LinearGradientBrush EndPoint="1.017,1.037" StartPoint="0.021,0.095">
										<GradientStop Color="White" Offset="0"/>
										<GradientStop Color="{DynamicResource #235235235}" Offset="1"/>
									</LinearGradientBrush>
								</Rectangle.Fill>
							</Rectangle>
							<ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" Content=""/>
							<Ellipse Margin="7.5" Width="15" Height="15" HorizontalAlignment="Left" VerticalAlignment="Top">
								<Ellipse.Fill>
									<SolidColorBrush Color="{DynamicResource Menu2ndSelected}"/>
								</Ellipse.Fill>
							</Ellipse>
						</Grid>
						<ControlTemplate.Triggers>
							<Trigger Property="IsFocused" Value="True"/>
							<Trigger Property="IsDefaulted" Value="True"/>
							<Trigger Property="IsMouseOver" Value="True"/>
							<Trigger Property="IsPressed" Value="True"/>
							<Trigger Property="IsEnabled" Value="False"/>
						</ControlTemplate.Triggers>
					</ControlTemplate>
				</Setter.Value>
			</Setter>
		</Style>
		<Style x:Key="ButtonLinenormal" TargetType="{x:Type Button}">
			<Setter Property="Template">
				<Setter.Value>
					<ControlTemplate TargetType="{x:Type Button}">
						<Grid>
							<VisualStateManager.VisualStateGroups>
								<VisualStateGroup x:Name="CommonStates">
									<VisualState x:Name="Normal"/>
									<VisualState x:Name="MouseOver"/>
									<VisualState x:Name="Pressed">
										<Storyboard>
											<DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Effect).(DropShadowEffect.BlurRadius)" Storyboard.TargetName="rectangle">
												<EasingDoubleKeyFrame KeyTime="0" Value="2"/>
											</DoubleAnimationUsingKeyFrames>
										</Storyboard>
									</VisualState>
									<VisualState x:Name="Disabled"/>
								</VisualStateGroup>
							</VisualStateManager.VisualStateGroups>
							<Rectangle x:Name="rectangle" HorizontalAlignment="Left" Height="30" RadiusY="8" RadiusX="8" VerticalAlignment="Top" Width="30">
								<Rectangle.Effect>
									<DropShadowEffect ShadowDepth="0"/>
								</Rectangle.Effect>
								<Rectangle.Fill>
									<LinearGradientBrush EndPoint="1.017,1.037" StartPoint="0.021,0.095">
										<GradientStop Color="White" Offset="0"/>
										<GradientStop Color="{DynamicResource #235235235}" Offset="1"/>
									</LinearGradientBrush>
								</Rectangle.Fill>
							</Rectangle>
							<ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" Content=""/>
							<Ellipse Margin="10" Width="10" Height="10" HorizontalAlignment="Left" VerticalAlignment="Top">
								<Ellipse.Fill>
									<SolidColorBrush Color="{DynamicResource Menu2ndSelected}"/>
								</Ellipse.Fill>
							</Ellipse>
						</Grid>
						<ControlTemplate.Triggers>
							<Trigger Property="IsFocused" Value="True"/>
							<Trigger Property="IsDefaulted" Value="True"/>
							<Trigger Property="IsMouseOver" Value="True"/>
							<Trigger Property="IsPressed" Value="True"/>
							<Trigger Property="IsEnabled" Value="False"/>
						</ControlTemplate.Triggers>
					</ControlTemplate>
				</Setter.Value>
			</Setter>
		</Style>
		<Style x:Key="Buttonthin" TargetType="{x:Type Button}">
			<Setter Property="Template">
				<Setter.Value>
					<ControlTemplate TargetType="{x:Type Button}">
						<Grid>
							<VisualStateManager.VisualStateGroups>
								<VisualStateGroup x:Name="CommonStates">
									<VisualState x:Name="Normal"/>
									<VisualState x:Name="MouseOver"/>
									<VisualState x:Name="Pressed">
										<Storyboard>
											<DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Effect).(DropShadowEffect.BlurRadius)" Storyboard.TargetName="rectangle">
												<EasingDoubleKeyFrame KeyTime="0" Value="2"/>
											</DoubleAnimationUsingKeyFrames>
										</Storyboard>
									</VisualState>
									<VisualState x:Name="Disabled"/>
								</VisualStateGroup>
							</VisualStateManager.VisualStateGroups>
							<Rectangle x:Name="rectangle" HorizontalAlignment="Left" Height="30" RadiusY="8" RadiusX="8" VerticalAlignment="Top" Width="30">
								<Rectangle.Effect>
									<DropShadowEffect ShadowDepth="0"/>
								</Rectangle.Effect>
								<Rectangle.Fill>
									<LinearGradientBrush EndPoint="1.017,1.037" StartPoint="0.021,0.095">
										<GradientStop Color="White" Offset="0"/>
										<GradientStop Color="{DynamicResource #235235235}" Offset="1"/>
									</LinearGradientBrush>
								</Rectangle.Fill>
							</Rectangle>
							<ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" Content=""/>
							<Ellipse Margin="11.5,11.5,10,10" Width="7" Height="7" HorizontalAlignment="Left" VerticalAlignment="Top">
								<Ellipse.Fill>
									<SolidColorBrush Color="{DynamicResource Menu2ndSelected}"/>
								</Ellipse.Fill>
							</Ellipse>
						</Grid>
						<ControlTemplate.Triggers>
							<Trigger Property="IsFocused" Value="True"/>
							<Trigger Property="IsDefaulted" Value="True"/>
							<Trigger Property="IsMouseOver" Value="True"/>
							<Trigger Property="IsPressed" Value="True"/>
							<Trigger Property="IsEnabled" Value="False"/>
						</ControlTemplate.Triggers>
					</ControlTemplate>
				</Setter.Value>
			</Setter>
		</Style>
		<Style x:Key="Buttonerase" TargetType="{x:Type Button}">
			<Setter Property="Template">
				<Setter.Value>
					<ControlTemplate TargetType="{x:Type Button}">
						<Grid>
							<VisualStateManager.VisualStateGroups>
								<VisualStateGroup x:Name="CommonStates">
									<VisualState x:Name="Normal"/>
									<VisualState x:Name="MouseOver"/>
									<VisualState x:Name="Pressed">
										<Storyboard>
											<DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Effect).(DropShadowEffect.BlurRadius)" Storyboard.TargetName="rectangle">
												<EasingDoubleKeyFrame KeyTime="0" Value="2"/>
											</DoubleAnimationUsingKeyFrames>
										</Storyboard>
									</VisualState>
									<VisualState x:Name="Disabled"/>
								</VisualStateGroup>
							</VisualStateManager.VisualStateGroups>
							<Rectangle x:Name="rectangle" HorizontalAlignment="Left" Height="30" RadiusY="8" RadiusX="8" VerticalAlignment="Top" Width="30">
								<Rectangle.Effect>
									<DropShadowEffect ShadowDepth="0"/>
								</Rectangle.Effect>
								<Rectangle.Fill>
									<LinearGradientBrush EndPoint="1.017,1.037" StartPoint="0.021,0.095">
										<GradientStop Color="White" Offset="0"/>
										<GradientStop Color="{DynamicResource #235235235}" Offset="1"/>
									</LinearGradientBrush>
								</Rectangle.Fill>
							</Rectangle>
							<ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" Content=""/>
							<Grid Width="17.763" Height="22.411" HorizontalAlignment="Center" VerticalAlignment="Center">
								<ed:RegularPolygon Margin="3.359,0,3.525,0" RenderTransformOrigin="0.5,0.5">
									<ed:RegularPolygon.RenderTransform>
										<TransformGroup>
											<ScaleTransform/>
											<SkewTransform AngleX="-2" AngleY="-11"/>
											<RotateTransform Angle="49.918"/>
											<TranslateTransform/>
										</TransformGroup>
									</ed:RegularPolygon.RenderTransform>
									<ed:RegularPolygon.Fill>
										<LinearGradientBrush EndPoint="1.017,1.037" StartPoint="0.021,0.095">
											<GradientStop Color="{DynamicResource Menu2ndSelected}" Offset="0"/>
											<GradientStop Color="{DynamicResource Foregroundgray}" Offset="1"/>
										</LinearGradientBrush>
									</ed:RegularPolygon.Fill>
								</ed:RegularPolygon>
								<Path Data="M17.484867,0.00020503998 C17.577684,0.0031051636 17.6584,0.03676033 17.709602,0.10223484 17.826641,0.25189066 17.745182,0.5111146 17.527658,0.68122721 L8.7831726,7.5198067 8.7505722,7.5435246 8.7002163,14.100578 8.0122366,14.095295 8.0616379,7.6625411 0,7.6625411 0,6.9745411 8.1870003,6.9745411 8.1870003,6.9934275 8.3394003,6.9945979 8.3593416,6.977855 17.103828,0.13927555 C17.226185,0.043587208 17.36553,-0.0035238266 17.484867,0.00020503998 z" HorizontalAlignment="Stretch" Height="Auto" Margin="0,4.145,0,4.165" Stretch="Fill" VerticalAlignment="Stretch" Width="Auto">
									<Path.Fill>
										<SolidColorBrush Color="{DynamicResource #235235235}"/>
									</Path.Fill>
								</Path>
							</Grid>
						</Grid>
						<ControlTemplate.Triggers>
							<Trigger Property="IsFocused" Value="True"/>
							<Trigger Property="IsDefaulted" Value="True"/>
							<Trigger Property="IsMouseOver" Value="True"/>
							<Trigger Property="IsPressed" Value="True"/>
							<Trigger Property="IsEnabled" Value="False"/>
						</ControlTemplate.Triggers>
					</ControlTemplate>
				</Setter.Value>
			</Setter>
		</Style>
		<Style TargetType="{x:Type ListBoxItem}" x:Key="ListBoxItemfeedbck">
			<Setter Property="Background" Value="Transparent"/>
			<Setter Property="HorizontalContentAlignment" Value="{Binding HorizontalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}"/>
			<Setter Property="VerticalContentAlignment" Value="{Binding VerticalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}"/>
			<Setter Property="Padding" Value="2,0,0,0"/>
			<Setter Property="Template">
				<Setter.Value>
					<ControlTemplate TargetType="{x:Type ListBoxItem}">
						<Grid x:Name="Bd" SnapsToDevicePixels="true">
							<Grid.ColumnDefinitions>
								<ColumnDefinition Width="28.044"/>
								<ColumnDefinition Width="0.561*"/>
								<ColumnDefinition Width="0.439*"/>
							</Grid.ColumnDefinitions>
							<VisualStateManager.VisualStateGroups>
								<VisualStateGroup x:Name="SelectionStates">
									<VisualState x:Name="Unselected"/>
									<VisualState x:Name="Selected">
										<Storyboard>
											<ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Shape.Fill).(GradientBrush.GradientStops)[1].(GradientStop.Color)" Storyboard.TargetName="rectangle">
												<EasingColorKeyFrame KeyTime="0" Value="{StaticResource Menu2ndSelected}"/>
											</ColorAnimationUsingKeyFrames>
											<ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Shape.Fill).(GradientBrush.GradientStops)[0].(GradientStop.Color)" Storyboard.TargetName="rectangle">
												<EasingColorKeyFrame KeyTime="0" Value="{StaticResource Menu2ndSelected}"/>
											</ColorAnimationUsingKeyFrames>
										</Storyboard>
									</VisualState>
									<VisualState x:Name="SelectedUnfocused">
										<Storyboard>
											<ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Shape.Fill).(GradientBrush.GradientStops)[1].(GradientStop.Color)" Storyboard.TargetName="rectangle">
												<EasingColorKeyFrame KeyTime="0" Value="{StaticResource Menu2ndSelected}"/>
											</ColorAnimationUsingKeyFrames>
											<ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Shape.Fill).(GradientBrush.GradientStops)[0].(GradientStop.Color)" Storyboard.TargetName="rectangle">
												<EasingColorKeyFrame KeyTime="0" Value="{StaticResource Menu2ndSelected}"/>
											</ColorAnimationUsingKeyFrames>
										</Storyboard>
									</VisualState>
								</VisualStateGroup>
								<VisualStateGroup x:Name="CommonStates">
									<VisualState x:Name="Normal"/>
									<VisualState x:Name="MouseOver">
									</VisualState>
									<VisualState x:Name="Disabled"/>
								</VisualStateGroup>
							</VisualStateManager.VisualStateGroups>
							<Rectangle x:Name="rectangle" Stroke="Black" StrokeDashArray="3 3" Margin="0,2" Grid.ColumnSpan="3" Height="70">
								<Rectangle.Fill>
									<LinearGradientBrush EndPoint="1.018,0.466" StartPoint="-0.027,0.466">
										<GradientStop Color="{DynamicResource #235235235}" Offset="0"/>
										<GradientStop Color="{DynamicResource #235235235}" Offset="1"/>
									</LinearGradientBrush>
								</Rectangle.Fill>
							</Rectangle>
							<Grid HorizontalAlignment="Center" VerticalAlignment="Center" Width="15" Height="15">
								<Ellipse Stroke="{x:Null}" Width="15" Height="15" d:LayoutOverrides="Margin">
									<Ellipse.Fill>
										<LinearGradientBrush EndPoint="0.955,0.899" StartPoint="0.006,0.215">
											<GradientStop Color="{DynamicResource GreenLeft}" Offset="0"/>
											<GradientStop Color="{DynamicResource GreenRight}" Offset="1"/>
										</LinearGradientBrush>
									</Ellipse.Fill>
								</Ellipse>
								<Path Data="M7.6011834,0 L10.977817,1.9494996 10.97651,1.9517625 11,1.9517625 11,2.9517623 10.968314,2.9517623 10.974816,2.9630251 7.5981836,4.9125252 7.0981836,4.0464997 8.9943237,2.9517623 0,2.9517623 0,1.9517625 8.9817362,1.9517625 7.1011834,0.86602509 z" HorizontalAlignment="Stretch" Height="4.913" Margin="2,0" Stretch="Fill" Stroke="{x:Null}" StrokeThickness="0" VerticalAlignment="Center" Width="Auto" >
									<Path.Fill>
										<SolidColorBrush Color="{DynamicResource #235235235}"/>
									</Path.Fill>
								</Path>
							</Grid>
							<Label Content="{Binding SubmissionDate}" HorizontalAlignment="Center" Width="Auto" Grid.Column="2" VerticalAlignment="Center"/>
							<ContentPresenter Content="{Binding FeedbackTitle}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" Height="Auto" HorizontalAlignment="Stretch" VerticalAlignment="Center" Grid.ColumnSpan="1" Grid.Column="1"/>
						</Grid>
						<ControlTemplate.Triggers>
							<Trigger Property="IsSelected" Value="true">
								<Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.HighlightTextBrushKey}}"/>
							</Trigger>
							<MultiTrigger>
								<MultiTrigger.Conditions>
									<Condition Property="IsSelected" Value="true"/>
									<Condition Property="Selector.IsSelectionActive" Value="false"/>
								</MultiTrigger.Conditions>
								<Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
							</MultiTrigger>
							<Trigger Property="IsEnabled" Value="false">
								<Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
							</Trigger>
						</ControlTemplate.Triggers>
					</ControlTemplate>
				</Setter.Value>
			</Setter>
		</Style>
		<Style x:Key="ButtonNext" TargetType="{x:Type Button}">
			<Setter Property="FocusVisualStyle" Value="{StaticResource ButtonFocusVisual}"/>
			<Setter Property="Background" Value="{StaticResource ButtonNormalBackground}"/>
			<Setter Property="BorderBrush" Value="{StaticResource ButtonNormalBorder}"/>
			<Setter Property="BorderThickness" Value="1"/>
			<Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
			<Setter Property="HorizontalContentAlignment" Value="Center"/>
			<Setter Property="VerticalContentAlignment" Value="Center"/>
			<Setter Property="Padding" Value="1"/>
			<Setter Property="Template">
				<Setter.Value>
					<ControlTemplate TargetType="{x:Type Button}">
						<Microsoft_Windows_Themes:ButtonChrome x:Name="Chrome" BorderBrush="{TemplateBinding BorderBrush}" Background="{TemplateBinding Background}" RenderMouseOver="{TemplateBinding IsMouseOver}" RenderPressed="{TemplateBinding IsPressed}" RenderDefaulted="{TemplateBinding IsDefaulted}" SnapsToDevicePixels="true">
							<ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
						</Microsoft_Windows_Themes:ButtonChrome>
						<ControlTemplate.Triggers>
							<Trigger Property="IsKeyboardFocused" Value="true">
								<Setter Property="RenderDefaulted" TargetName="Chrome" Value="true"/>
							</Trigger>
							<Trigger Property="ToggleButton.IsChecked" Value="true">
								<Setter Property="RenderPressed" TargetName="Chrome" Value="true"/>
							</Trigger>
							<Trigger Property="IsEnabled" Value="false">
								<Setter Property="Foreground" Value="#ADADAD"/>
							</Trigger>
						</ControlTemplate.Triggers>
					</ControlTemplate>
				</Setter.Value>
			</Setter>
		</Style>
		<Style TargetType="{x:Type Button}" x:Key="ButtonFeedbacknormal">
			<Setter Property="FocusVisualStyle" Value="{StaticResource ButtonFocusVisual}"/>
			<Setter Property="Background" Value="{StaticResource ButtonNormalBackground}"/>
			<Setter Property="BorderBrush" Value="{StaticResource ButtonNormalBorder}"/>
			<Setter Property="BorderThickness" Value="1"/>
			<Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
			<Setter Property="HorizontalContentAlignment" Value="Center"/>
			<Setter Property="VerticalContentAlignment" Value="Center"/>
			<Setter Property="Padding" Value="1"/>
			<Setter Property="Template">
				<Setter.Value>
					<ControlTemplate TargetType="{x:Type Button}">
						<Grid>
							<VisualStateManager.VisualStateGroups>
								<VisualStateGroup x:Name="CommonStates">
									<VisualState x:Name="Normal"/>
									<VisualState x:Name="MouseOver"/>
									<VisualState x:Name="Pressed">
										<Storyboard>
											<DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Effect).(DropShadowEffect.BlurRadius)" Storyboard.TargetName="rectangle">
												<EasingDoubleKeyFrame KeyTime="0" Value="2"/>
											</DoubleAnimationUsingKeyFrames>
										</Storyboard>
									</VisualState>
									<VisualState x:Name="Disabled"/>
								</VisualStateGroup>
							</VisualStateManager.VisualStateGroups>
							<Rectangle x:Name="rectangle" HorizontalAlignment="Stretch" Height="Auto" RadiusY="6" RadiusX="6" VerticalAlignment="Stretch" Width="Auto" Cursor="Hand">
								<Rectangle.Effect>
									<DropShadowEffect ShadowDepth="0"/>
								</Rectangle.Effect>
								<Rectangle.Fill>
									<LinearGradientBrush EndPoint="1.017,1.037" StartPoint="0.021,0.095">
										<GradientStop Color="White" Offset="0"/>
										<GradientStop Color="{DynamicResource #235235235}" Offset="1"/>
									</LinearGradientBrush>
								</Rectangle.Fill>
							</Rectangle>
							<ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" Cursor="Hand"/>
						</Grid>
						<ControlTemplate.Triggers>
							<Trigger Property="IsKeyboardFocused" Value="true"/>
							<Trigger Property="ToggleButton.IsChecked" Value="true"/>
							<Trigger Property="IsEnabled" Value="false">
								<Setter Property="Foreground" Value="#ADADAD"/>
							</Trigger>
						</ControlTemplate.Triggers>
					</ControlTemplate>
				</Setter.Value>
			</Setter>
		</Style>
		<SolidColorBrush x:Key="CheckBoxFillNormal" Color="#F4F4F4"/>
		<SolidColorBrush x:Key="CheckBoxStroke" Color="#8E8F8F"/>
		<Style x:Key="EmptyCheckBoxFocusVisual">
			<Setter Property="Control.Template">
				<Setter.Value>
					<ControlTemplate>
						<Rectangle Margin="1" SnapsToDevicePixels="true" Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" StrokeThickness="1" StrokeDashArray="1 2"/>
					</ControlTemplate>
				</Setter.Value>
			</Setter>
		</Style>
		<Style x:Key="CheckRadioFocusVisual">
			<Setter Property="Control.Template">
				<Setter.Value>
					<ControlTemplate>
						<Rectangle Margin="14,0,0,0" SnapsToDevicePixels="true" Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" StrokeThickness="1" StrokeDashArray="1 2"/>
					</ControlTemplate>
				</Setter.Value>
			</Setter>
		</Style>
		<Style x:Key="CheckBoxfeedback" TargetType="{x:Type CheckBox}">
			<Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
			<Setter Property="Background" Value="{StaticResource CheckBoxFillNormal}"/>
			<Setter Property="BorderBrush" Value="{StaticResource CheckBoxStroke}"/>
			<Setter Property="BorderThickness" Value="1"/>
			<Setter Property="FocusVisualStyle" Value="{StaticResource EmptyCheckBoxFocusVisual}"/>
			<Setter Property="Template">
				<Setter.Value>
					<ControlTemplate TargetType="{x:Type CheckBox}">
						<Grid>
							<Grid.ColumnDefinitions>
								<ColumnDefinition Width="16.687"/>
								<ColumnDefinition/>
							</Grid.ColumnDefinitions>
							<VisualStateManager.VisualStateGroups>
								<VisualStateGroup x:Name="CheckStates">
									<VisualState x:Name="Checked">
										<Storyboard>
											<ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Shape.Fill).(GradientBrush.GradientStops)[0].(GradientStop.Color)" Storyboard.TargetName="path">
												<EasingColorKeyFrame KeyTime="0" Value="{StaticResource GreenLeft}"/>
											</ColorAnimationUsingKeyFrames>
											<ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Shape.Fill).(GradientBrush.GradientStops)[1].(GradientStop.Color)" Storyboard.TargetName="path">
												<EasingColorKeyFrame KeyTime="0" Value="{StaticResource GreenRight}"/>
											</ColorAnimationUsingKeyFrames>
											<PointAnimationUsingKeyFrames Storyboard.TargetProperty="(Shape.Fill).(LinearGradientBrush.StartPoint)" Storyboard.TargetName="path">
												<EasingPointKeyFrame KeyTime="0" Value="0.494,0.468"/>
											</PointAnimationUsingKeyFrames>
											<PointAnimationUsingKeyFrames Storyboard.TargetProperty="(Shape.Fill).(LinearGradientBrush.EndPoint)" Storyboard.TargetName="path">
												<EasingPointKeyFrame KeyTime="0" Value="0.903,0.877"/>
											</PointAnimationUsingKeyFrames>
										</Storyboard>
									</VisualState>
									<VisualState x:Name="Unchecked"/>
									<VisualState x:Name="Indeterminate"/>
								</VisualStateGroup>
							</VisualStateManager.VisualStateGroups>
							<ContentPresenter Margin="0.312,0,0,0" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" Grid.Column="1"/>
							<Path x:Name="path" Data="M12.328399,0 L12.328399,12.328399 0,12.328399 z" HorizontalAlignment="Center" Height="12.328" Stretch="Fill" Stroke="{x:Null}" Width="12.328" VerticalAlignment="Center">
								<Path.Fill>
									<LinearGradientBrush EndPoint="1.14,1.113" StartPoint="-0.089,0.066">
										<GradientStop Color="{DynamicResource LineColor#184184184}" Offset="0"/>
										<GradientStop Color="{DynamicResource #122122122}" Offset="1"/>
									</LinearGradientBrush>
								</Path.Fill>
							</Path>
						</Grid>
						<ControlTemplate.Triggers>
							<Trigger Property="HasContent" Value="true">
								<Setter Property="FocusVisualStyle" Value="{StaticResource CheckRadioFocusVisual}"/>
								<Setter Property="Padding" Value="4,0,0,0"/>
							</Trigger>
							<Trigger Property="IsEnabled" Value="false">
								<Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
							</Trigger>
						</ControlTemplate.Triggers>
					</ControlTemplate>
				</Setter.Value>
			</Setter>
		</Style>
		<Style x:Key="ComboBoxFocusVisual">
			<Setter Property="Control.Template">
				<Setter.Value>
					<ControlTemplate>
						<Rectangle Margin="4,4,21,4" SnapsToDevicePixels="true" Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" StrokeThickness="1" StrokeDashArray="1 2"/>
					</ControlTemplate>
				</Setter.Value>
			</Setter>
		</Style>
		<Geometry x:Key="DownArrowGeometry">M 0 0 L 3.5 4 L 7 0 Z</Geometry>
		<Style x:Key="ComboBoxReadonlyToggleButton" TargetType="{x:Type ToggleButton}">
			<Setter Property="OverridesDefaultStyle" Value="true"/>
			<Setter Property="IsTabStop" Value="false"/>
			<Setter Property="Focusable" Value="false"/>
			<Setter Property="ClickMode" Value="Press"/>
			<Setter Property="Template">
				<Setter.Value>
					<ControlTemplate TargetType="{x:Type ToggleButton}">
						<Grid>
							<Grid.ColumnDefinitions>
								<ColumnDefinition Width="*"/>
								<ColumnDefinition Width="14.85"/>
							</Grid.ColumnDefinitions>
							<VisualStateManager.VisualStateGroups>
								<VisualStateGroup x:Name="CommonStates">
									<VisualState x:Name="Normal"/>
									<VisualState x:Name="MouseOver"/>
									<VisualState x:Name="Pressed">
										<Storyboard>
											<ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Shape.Fill).(GradientBrush.GradientStops)[1].(GradientStop.Color)" Storyboard.TargetName="rectangle">
												<EasingColorKeyFrame KeyTime="0" Value="#FFA4D8C6"/>
											</ColorAnimationUsingKeyFrames>
											<ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Shape.Fill).(GradientBrush.GradientStops)[0].(GradientStop.Color)" Storyboard.TargetName="rectangle">
												<EasingColorKeyFrame KeyTime="0" Value="#FF33DAA4"/>
											</ColorAnimationUsingKeyFrames>
											<DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(Shape.Fill).(GradientBrush.GradientStops)[0].(GradientStop.Offset)" Storyboard.TargetName="rectangle">
												<EasingDoubleKeyFrame KeyTime="0" Value="1"/>
											</DoubleAnimationUsingKeyFrames>
											<DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(Shape.Fill).(GradientBrush.GradientStops)[1].(GradientStop.Offset)" Storyboard.TargetName="rectangle">
												<EasingDoubleKeyFrame KeyTime="0" Value="0"/>
											</DoubleAnimationUsingKeyFrames>
										</Storyboard>
									</VisualState>
									<VisualState x:Name="Disabled"/>
								</VisualStateGroup>
								<VisualStateGroup x:Name="FocusStates">
									<VisualState x:Name="Unfocused"/>
									<VisualState x:Name="Focused">
										<Storyboard>
											<ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Shape.Fill).(GradientBrush.GradientStops)[0].(GradientStop.Color)" Storyboard.TargetName="rectangle">
												<EasingColorKeyFrame KeyTime="0" Value="{StaticResource GreenLeft}"/>
											</ColorAnimationUsingKeyFrames>
											<ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Shape.Fill).(GradientBrush.GradientStops)[1].(GradientStop.Color)" Storyboard.TargetName="rectangle">
												<EasingColorKeyFrame KeyTime="0" Value="{StaticResource GreenRight}"/>
											</ColorAnimationUsingKeyFrames>
										</Storyboard>
									</VisualState>
								</VisualStateGroup>
								<VisualStateGroup x:Name="CheckStates">
									<VisualState x:Name="Checked">
										<Storyboard>
											<ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Shape.Fill).(GradientBrush.GradientStops)[0].(GradientStop.Color)" Storyboard.TargetName="rectangle">
												<EasingColorKeyFrame KeyTime="0" Value="#FF97D8C3"/>
											</ColorAnimationUsingKeyFrames>
											<ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Shape.Fill).(GradientBrush.GradientStops)[1].(GradientStop.Color)" Storyboard.TargetName="rectangle">
												<EasingColorKeyFrame KeyTime="0" Value="#FF0CCA9A"/>
											</ColorAnimationUsingKeyFrames>
										</Storyboard>
									</VisualState>
									<VisualState x:Name="Unchecked"/>
									<VisualState x:Name="Indeterminate"/>
								</VisualStateGroup>
							</VisualStateManager.VisualStateGroups>
							<Rectangle x:Name="rectangle" HorizontalAlignment="Stretch" Width="Auto" RadiusX="4" RadiusY="4" Grid.ColumnSpan="2">
								<Rectangle.Fill>
									<LinearGradientBrush EndPoint="1.007,0.964" StartPoint="0.002,-0.001">
										<GradientStop Color="{DynamicResource GreenLeft}" Offset="0"/>
										<GradientStop Color="{DynamicResource GreenRight}" Offset="1"/>
									</LinearGradientBrush>
								</Rectangle.Fill>
							</Rectangle>
							<Grid HorizontalAlignment="Stretch" Width="{DynamicResource {x:Static SystemParameters.VerticalScrollBarWidthKey}}" Grid.Column="1">
								<Path Data="M0,0 L5.112,0 5.112,0.0066304584 5.1186304,0.0066304584 5.1186304,5.1186304 4.1186304,5.1186304 4.1186304,1 0,1 z" RenderTransformOrigin="0.467,0.601" Stretch="Fill" HorizontalAlignment="Center" Height="5.118" VerticalAlignment="Center" Width="5.119" Margin="5.94,6,5.94,0">
									<Path.Fill>
										<SolidColorBrush Color="{DynamicResource #235235235}"/>
									</Path.Fill>
									<Path.RenderTransform>
										<TransformGroup>
											<ScaleTransform/>
											<SkewTransform/>
											<RotateTransform Angle="135"/>
											<TranslateTransform X="-1.539" Y="-4.515"/>
										</TransformGroup>
									</Path.RenderTransform>
								</Path>
							</Grid>
						</Grid>
						<ControlTemplate.Triggers>
							<Trigger Property="IsChecked" Value="true"/>
							<Trigger Property="IsEnabled" Value="false"/>
						</ControlTemplate.Triggers>
					</ControlTemplate>
				</Setter.Value>
			</Setter>
		</Style>
		<Style x:Key="ComboBoxEditableTextBox" TargetType="{x:Type TextBox}">
			<Setter Property="OverridesDefaultStyle" Value="true"/>
			<Setter Property="AllowDrop" Value="true"/>
			<Setter Property="MinWidth" Value="0"/>
			<Setter Property="MinHeight" Value="0"/>
			<Setter Property="FocusVisualStyle" Value="{x:Null}"/>
			<Setter Property="ScrollViewer.PanningMode" Value="VerticalFirst"/>
			<Setter Property="Stylus.IsFlicksEnabled" Value="False"/>
			<Setter Property="Template">
				<Setter.Value>
					<ControlTemplate TargetType="{x:Type TextBox}">
						<ScrollViewer x:Name="PART_ContentHost" Background="Transparent" Focusable="false" HorizontalScrollBarVisibility="Hidden" VerticalScrollBarVisibility="Hidden"/>
					</ControlTemplate>
				</Setter.Value>
			</Setter>
		</Style>
		<Style x:Key="ComboBoxToggleButton" TargetType="{x:Type ToggleButton}">
			<Setter Property="OverridesDefaultStyle" Value="true"/>
			<Setter Property="IsTabStop" Value="false"/>
			<Setter Property="Focusable" Value="false"/>
			<Setter Property="ClickMode" Value="Press"/>
			<Setter Property="Template">
				<Setter.Value>
					<ControlTemplate TargetType="{x:Type ToggleButton}">
						<Microsoft_Windows_Themes:ButtonChrome x:Name="Chrome" BorderBrush="{TemplateBinding BorderBrush}" Background="{TemplateBinding Background}" RenderMouseOver="{TemplateBinding IsMouseOver}" RenderPressed="{TemplateBinding IsPressed}" RoundCorners="false" SnapsToDevicePixels="true" Width="{DynamicResource {x:Static SystemParameters.VerticalScrollBarWidthKey}}">
							<Path x:Name="Arrow" Data="{StaticResource DownArrowGeometry}" Fill="Black" HorizontalAlignment="Center" Margin="0,1,0,0" VerticalAlignment="Center"/>
						</Microsoft_Windows_Themes:ButtonChrome>
						<ControlTemplate.Triggers>
							<Trigger Property="IsChecked" Value="true">
								<Setter Property="RenderPressed" TargetName="Chrome" Value="true"/>
							</Trigger>
							<Trigger Property="IsEnabled" Value="false">
								<Setter Property="Fill" TargetName="Arrow" Value="#AFAFAF"/>
							</Trigger>
						</ControlTemplate.Triggers>
					</ControlTemplate>
				</Setter.Value>
			</Setter>
		</Style>
		<ControlTemplate x:Key="ComboBoxEditableTemplate" TargetType="{x:Type ComboBox}">
			<Grid x:Name="Placement" SnapsToDevicePixels="true">
				<Grid.ColumnDefinitions>
					<ColumnDefinition Width="*"/>
					<ColumnDefinition Width="Auto"/>
				</Grid.ColumnDefinitions>
				<Popup x:Name="PART_Popup" AllowsTransparency="true" Grid.ColumnSpan="2" IsOpen="{Binding IsDropDownOpen, RelativeSource={RelativeSource TemplatedParent}}" PopupAnimation="{DynamicResource {x:Static SystemParameters.ComboBoxPopupAnimationKey}}" Placement="Bottom">
					<Microsoft_Windows_Themes:SystemDropShadowChrome x:Name="Shdw" Color="Transparent" MaxHeight="{TemplateBinding MaxDropDownHeight}" MinWidth="{Binding ActualWidth, ElementName=Placement}">
						<Border x:Name="DropDownBorder" BorderBrush="{DynamicResource {x:Static SystemColors.WindowFrameBrushKey}}" BorderThickness="1" Background="{DynamicResource {x:Static SystemColors.WindowBrushKey}}">
							<ScrollViewer x:Name="DropDownScrollViewer">
								<Grid RenderOptions.ClearTypeHint="Enabled">
									<Canvas HorizontalAlignment="Left" Height="0" VerticalAlignment="Top" Width="0">
										<Rectangle x:Name="OpaqueRect" Fill="{Binding Background, ElementName=DropDownBorder}" Height="{Binding ActualHeight, ElementName=DropDownBorder}" Width="{Binding ActualWidth, ElementName=DropDownBorder}"/>
									</Canvas>
									<ItemsPresenter x:Name="ItemsPresenter" KeyboardNavigation.DirectionalNavigation="Contained" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
								</Grid>
							</ScrollViewer>
						</Border>
					</Microsoft_Windows_Themes:SystemDropShadowChrome>
				</Popup>
				<Microsoft_Windows_Themes:ListBoxChrome x:Name="Border" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" Grid.ColumnSpan="2" RenderMouseOver="{TemplateBinding IsMouseOver}" RenderFocused="{TemplateBinding IsKeyboardFocusWithin}"/>
				<TextBox x:Name="PART_EditableTextBox" HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}" IsReadOnly="{Binding IsReadOnly, RelativeSource={RelativeSource TemplatedParent}}" Margin="{TemplateBinding Padding}" Style="{StaticResource ComboBoxEditableTextBox}" VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"/>
				<ToggleButton Grid.Column="1" IsChecked="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}" Style="{StaticResource ComboBoxToggleButton}"/>
			</Grid>
			<ControlTemplate.Triggers>
				<Trigger Property="IsKeyboardFocusWithin" Value="true">
					<Setter Property="Foreground" Value="Black"/>
				</Trigger>
				<Trigger Property="IsDropDownOpen" Value="true">
					<Setter Property="RenderFocused" TargetName="Border" Value="true"/>
				</Trigger>
				<Trigger Property="HasItems" Value="false">
					<Setter Property="Height" TargetName="DropDownBorder" Value="95"/>
				</Trigger>
				<Trigger Property="IsEnabled" Value="false">
					<Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
					<Setter Property="Background" Value="#FFF4F4F4"/>
				</Trigger>
				<Trigger Property="IsGrouping" Value="true">
					<Setter Property="ScrollViewer.CanContentScroll" Value="false"/>
				</Trigger>
				<Trigger Property="HasDropShadow" SourceName="PART_Popup" Value="true">
					<Setter Property="Margin" TargetName="Shdw" Value="0,0,5,5"/>
					<Setter Property="Color" TargetName="Shdw" Value="#71000000"/>
				</Trigger>
				<Trigger Property="ScrollViewer.CanContentScroll" SourceName="DropDownScrollViewer" Value="false">
					<Setter Property="Canvas.Top" TargetName="OpaqueRect" Value="{Binding VerticalOffset, ElementName=DropDownScrollViewer}"/>
					<Setter Property="Canvas.Left" TargetName="OpaqueRect" Value="{Binding HorizontalOffset, ElementName=DropDownScrollViewer}"/>
				</Trigger>
			</ControlTemplate.Triggers>
		</ControlTemplate>
		<Style x:Key="ComboBoxFeedback" TargetType="{x:Type ComboBox}">
			<Setter Property="FocusVisualStyle" Value="{StaticResource ComboBoxFocusVisual}"/>
			<Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.WindowTextBrushKey}}"/>
			<Setter Property="Background" Value="{StaticResource ButtonNormalBackground}"/>
			<Setter Property="BorderBrush" Value="{StaticResource ButtonNormalBorder}"/>
			<Setter Property="BorderThickness" Value="1"/>
			<Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Auto"/>
			<Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto"/>
			<Setter Property="Padding" Value="4,3"/>
			<Setter Property="ScrollViewer.CanContentScroll" Value="true"/>
			<Setter Property="ScrollViewer.PanningMode" Value="Both"/>
			<Setter Property="Stylus.IsFlicksEnabled" Value="False"/>
			<Setter Property="Template">
				<Setter.Value>
					<ControlTemplate TargetType="{x:Type ComboBox}">
						<Grid x:Name="MainGrid" SnapsToDevicePixels="true">
							<Grid.ColumnDefinitions>
								<ColumnDefinition Width="*"/>
								<ColumnDefinition MinWidth="{DynamicResource {x:Static SystemParameters.VerticalScrollBarWidthKey}}" Width="0"/>
							</Grid.ColumnDefinitions>
							<VisualStateManager.VisualStateGroups>
								<VisualStateGroup x:Name="CommonStates">
									<VisualState x:Name="Normal"/>
									<VisualState x:Name="MouseOver"/>
									<VisualState x:Name="Disabled"/>
								</VisualStateGroup>
								<VisualStateGroup x:Name="FocusStates">
									<VisualState x:Name="Unfocused"/>
									<VisualState x:Name="Focused"/>
									<VisualState x:Name="FocusedDropDown"/>
								</VisualStateGroup>
								<VisualStateGroup x:Name="EditStates">
									<VisualState x:Name="Editable"/>
									<VisualState x:Name="Uneditable"/>
								</VisualStateGroup>
							</VisualStateManager.VisualStateGroups>
							<Popup x:Name="PART_Popup" AllowsTransparency="true" Grid.ColumnSpan="2" IsOpen="{Binding IsDropDownOpen, RelativeSource={RelativeSource TemplatedParent}}" Margin="1" PopupAnimation="{DynamicResource {x:Static SystemParameters.ComboBoxPopupAnimationKey}}" Placement="Bottom" Cursor="Hand">
								<Microsoft_Windows_Themes:SystemDropShadowChrome x:Name="Shdw" Color="Transparent" MaxHeight="{TemplateBinding MaxDropDownHeight}" MinWidth="{Binding ActualWidth, ElementName=MainGrid}">
									<Border x:Name="DropDownBorder" BorderBrush="{DynamicResource {x:Static SystemColors.WindowFrameBrushKey}}" BorderThickness="1">
										<ScrollViewer x:Name="DropDownScrollViewer" VerticalScrollBarVisibility="Disabled">
											<ScrollViewer.Background>
												<SolidColorBrush Color="{DynamicResource #235235235}"/>
											</ScrollViewer.Background>
											<Grid RenderOptions.ClearTypeHint="Enabled">
												<Canvas HorizontalAlignment="Left" Height="0" VerticalAlignment="Top" Width="0">
													<Rectangle x:Name="OpaqueRect" Fill="{Binding Background, ElementName=DropDownBorder}" Height="{Binding ActualHeight, ElementName=DropDownBorder}" Width="{Binding ActualWidth, ElementName=DropDownBorder}"/>
												</Canvas>
												<ItemsPresenter x:Name="ItemsPresenter" KeyboardNavigation.DirectionalNavigation="Contained" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
											</Grid>
										</ScrollViewer>
									</Border>
								</Microsoft_Windows_Themes:SystemDropShadowChrome>
							</Popup>
							<ToggleButton Grid.ColumnSpan="2" IsChecked="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}" Style="{StaticResource ComboBoxReadonlyToggleButton}" Cursor="Hand"/>
							<ContentPresenter ContentTemplate="{TemplateBinding SelectionBoxItemTemplate}" ContentTemplateSelector="{TemplateBinding ItemTemplateSelector}" Content="{TemplateBinding SelectionBoxItem}" ContentStringFormat="{TemplateBinding SelectionBoxItemStringFormat}" IsHitTestVisible="false" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" HorizontalAlignment="Center" VerticalAlignment="Center" Margin="15,0,12,0" Cursor="Hand"/>
						</Grid>
						<ControlTemplate.Triggers>
							<Trigger Property="HasDropShadow" SourceName="PART_Popup" Value="true">
								<Setter Property="Margin" TargetName="Shdw" Value="0,0,5,5"/>
								<Setter Property="Color" TargetName="Shdw" Value="#71000000"/>
							</Trigger>
							<Trigger Property="HasItems" Value="false">
								<Setter Property="Height" TargetName="DropDownBorder" Value="95"/>
							</Trigger>
							<Trigger Property="IsEnabled" Value="false">
								<Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
								<Setter Property="Background" Value="#FFF4F4F4"/>
							</Trigger>
							<Trigger Property="IsGrouping" Value="true">
								<Setter Property="ScrollViewer.CanContentScroll" Value="false"/>
							</Trigger>
							<Trigger Property="ScrollViewer.CanContentScroll" SourceName="DropDownScrollViewer" Value="false">
								<Setter Property="Canvas.Top" TargetName="OpaqueRect" Value="{Binding VerticalOffset, ElementName=DropDownScrollViewer}"/>
								<Setter Property="Canvas.Left" TargetName="OpaqueRect" Value="{Binding HorizontalOffset, ElementName=DropDownScrollViewer}"/>
							</Trigger>
						</ControlTemplate.Triggers>
					</ControlTemplate>
				</Setter.Value>
			</Setter>
			<Style.Triggers>
				<Trigger Property="IsEditable" Value="true">
					<Setter Property="BorderBrush" Value="{StaticResource TextBoxBorder}"/>
					<Setter Property="Background" Value="{DynamicResource {x:Static SystemColors.WindowBrushKey}}"/>
					<Setter Property="IsTabStop" Value="false"/>
					<Setter Property="Padding" Value="3"/>
					<Setter Property="Template" Value="{StaticResource ComboBoxEditableTemplate}"/>
				</Trigger>
			</Style.Triggers>
		</Style>
		<Style x:Key="ComboBoxItemfeedback" TargetType="{x:Type ComboBoxItem}">
			<Setter Property="HorizontalContentAlignment" Value="{Binding HorizontalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}"/>
			<Setter Property="VerticalContentAlignment" Value="{Binding VerticalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}"/>
			<Setter Property="Padding" Value="3,0,3,0"/>
			<Setter Property="Background" Value="Transparent"/>
			<Setter Property="Template">
				<Setter.Value>
					<ControlTemplate TargetType="{x:Type ComboBoxItem}">
						<Border x:Name="Bd" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" Padding="{TemplateBinding Padding}" SnapsToDevicePixels="true">
							<ContentPresenter SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="Stretch" HorizontalAlignment="Stretch"/>
						</Border>
						<ControlTemplate.Triggers>
							<Trigger Property="IsHighlighted" Value="true">
								<Setter Property="Background" TargetName="Bd" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"/>
								<Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.HighlightTextBrushKey}}"/>
							</Trigger>
							<Trigger Property="IsEnabled" Value="false">
								<Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
							</Trigger>
						</ControlTemplate.Triggers>
					</ControlTemplate>
				</Setter.Value>
			</Setter>
		</Style>

		<ItemsPanelTemplate x:Key="ItemsPanelTemplatetest">
			<VirtualizingStackPanel IsItemsHost="True"/>
		</ItemsPanelTemplate>
		<Style x:Key="Buttonfeedbacktitle" TargetType="{x:Type Button}">
			<Setter Property="FocusVisualStyle" Value="{StaticResource ButtonFocusVisual}"/>
			<Setter Property="Background" Value="{StaticResource ButtonNormalBackground}"/>
			<Setter Property="BorderBrush" Value="{StaticResource ButtonNormalBorder}"/>
			<Setter Property="BorderThickness" Value="1"/>
			<Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
			<Setter Property="HorizontalContentAlignment" Value="Center"/>
			<Setter Property="VerticalContentAlignment" Value="Center"/>
			<Setter Property="Padding" Value="1"/>
			<Setter Property="Template">
				<Setter.Value>
					<ControlTemplate TargetType="{x:Type Button}">
						<Grid>
							<VisualStateManager.VisualStateGroups>
								<VisualStateGroup x:Name="CommonStates">
									<VisualState x:Name="Normal"/>
									<VisualState x:Name="MouseOver"/>
									<VisualState x:Name="Pressed">
										<Storyboard>
											<DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Effect).(DropShadowEffect.BlurRadius)" Storyboard.TargetName="rectangle">
												<EasingDoubleKeyFrame KeyTime="0" Value="2"/>
											</DoubleAnimationUsingKeyFrames>
										</Storyboard>
									</VisualState>
									<VisualState x:Name="Disabled"/>
								</VisualStateGroup>
							</VisualStateManager.VisualStateGroups>
							<Rectangle x:Name="rectangle" HorizontalAlignment="Stretch" Height="Auto" RadiusY="8" RadiusX="8" VerticalAlignment="Stretch" Width="Auto">
								<Rectangle.Effect>
									<DropShadowEffect ShadowDepth="0"/>
								</Rectangle.Effect>
								<Rectangle.Fill>
									<LinearGradientBrush EndPoint="1.017,1.037" StartPoint="0.021,0.095">
										<GradientStop Color="White" Offset="0"/>
										<GradientStop Color="{DynamicResource #235235235}" Offset="1"/>
									</LinearGradientBrush>
								</Rectangle.Fill>
							</Rectangle>
							<ContentPresenter RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" Margin="12,0"/>
						</Grid>
						<ControlTemplate.Triggers>
							<Trigger Property="IsKeyboardFocused" Value="true"/>
							<Trigger Property="ToggleButton.IsChecked" Value="true"/>
							<Trigger Property="IsEnabled" Value="false">
								<Setter Property="Foreground" Value="#ADADAD"/>
							</Trigger>
						</ControlTemplate.Triggers>
					</ControlTemplate>
				</Setter.Value>
			</Setter>
		</Style>
		<Style x:Key="ListBoxItemfeedbackbg" TargetType="{x:Type ListBoxItem}">
			<Setter Property="Background" Value="Transparent"/>
			<Setter Property="HorizontalContentAlignment" Value="{Binding HorizontalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}"/>
			<Setter Property="VerticalContentAlignment" Value="{Binding VerticalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}"/>
			<Setter Property="Padding" Value="2,0,0,0"/>
			<Setter Property="Template">
				<Setter.Value>
					<ControlTemplate TargetType="{x:Type ListBoxItem}">
						<Border x:Name="Bd" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" Padding="{TemplateBinding Padding}" SnapsToDevicePixels="true">
							<ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
						</Border>
						<ControlTemplate.Triggers>
							<Trigger Property="IsSelected" Value="true">
								<Setter Property="Background" TargetName="Bd" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"/>
								<Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.HighlightTextBrushKey}}"/>
							</Trigger>
							<MultiTrigger>
								<MultiTrigger.Conditions>
									<Condition Property="IsSelected" Value="true"/>
									<Condition Property="Selector.IsSelectionActive" Value="false"/>
								</MultiTrigger.Conditions>
								<Setter Property="Background" TargetName="Bd" Value="{DynamicResource {x:Static SystemColors.ControlBrushKey}}"/>
								<Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
							</MultiTrigger>
							<Trigger Property="IsEnabled" Value="false">
								<Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
							</Trigger>
						</ControlTemplate.Triggers>
					</ControlTemplate>
				</Setter.Value>
			</Setter>
		</Style>
		<Style x:Key="ListBoxItemfeedbackBg" TargetType="{x:Type ListBoxItem}">
			<Setter Property="Template">
				<Setter.Value>
					<ControlTemplate TargetType="{x:Type ListBoxItem}">
						<Grid/>
					</ControlTemplate>
				</Setter.Value>
			</Setter>
		</Style>
		<Style x:Key="TabItemLargeProjects" TargetType="{x:Type TabItem}">
			<Setter Property="FocusVisualStyle" Value="{StaticResource TabItemFocusVisual}"/>
			<Setter Property="Foreground" Value="Black"/>
			<Setter Property="Padding" Value="6,1,6,1"/>
			<Setter Property="BorderBrush" Value="{StaticResource TabControlNormalBorderBrush}"/>
			<Setter Property="Background" Value="{StaticResource ButtonNormalBackground}"/>
			<Setter Property="HorizontalContentAlignment" Value="Stretch"/>
			<Setter Property="VerticalContentAlignment" Value="Stretch"/>
			<Setter Property="Template">
				<Setter.Value>
					<ControlTemplate TargetType="{x:Type TabItem}">
						<Grid SnapsToDevicePixels="true" Width="85">
							<VisualStateManager.VisualStateGroups>
								<VisualStateGroup x:Name="SelectionStates">
									<VisualState x:Name="Unselected"/>
									<VisualState x:Name="Selected">
										<Storyboard>
											<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="rectangle">
												<DiscreteObjectKeyFrame KeyTime="0" Value="{x:Static Visibility.Hidden}"/>
											</ObjectAnimationUsingKeyFrames>
											<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="path">
												<DiscreteObjectKeyFrame KeyTime="0" Value="{x:Static Visibility.Visible}"/>
											</ObjectAnimationUsingKeyFrames>
										</Storyboard>
									</VisualState>
								</VisualStateGroup>
							</VisualStateManager.VisualStateGroups>
							<Grid x:Name="Bd" Width="85" Height="25">
								<Rectangle x:Name="rectangle" RadiusY="8" RadiusX="8" StrokeThickness="1" Cursor="Hand">
									<Rectangle.Fill>
										<LinearGradientBrush EndPoint="1.01,0.499" StartPoint="-0.027,0.487">
											<GradientStop Color="{DynamicResource LineColor#184184184}" Offset="0"/>
											<GradientStop Color="{DynamicResource #122122122}" Offset="1"/>
										</LinearGradientBrush>
									</Rectangle.Fill>
								</Rectangle>
								<Path x:Name="path" Data="M7.9999995,0 L77,0 C81.418282,2.9802322E-07 85,3.5817223 85,8.0000013 L85,17 C85,21.418278 81.418282,25 77,25 L49.650135,25 42.5,32.150135 35.349865,25 7.9999995,25 C3.581722,25 0,21.418278 0,17 L0,8.0000013 C0,3.5817223 3.581722,2.9802322E-07 7.9999995,0 z" Margin="0,0,0,-7.15" Stretch="Fill" StrokeThickness="1" Visibility="Hidden">
									<Path.Fill>
										<LinearGradientBrush EndPoint="1.01,0.499" StartPoint="-0.027,0.487">
											<GradientStop Color="{DynamicResource GreenLeft}" Offset="0"/>
											<GradientStop Color="{DynamicResource GreenRight}" Offset="1"/>
										</LinearGradientBrush>
									</Path.Fill>
								</Path>
								<ContentPresenter x:Name="Content" ContentSource="Header" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" Margin="7,2,7,1" HorizontalAlignment="Center" VerticalAlignment="Center" Cursor="Hand"/>
							</Grid>
						</Grid>
						<ControlTemplate.Triggers>
							<Trigger Property="IsMouseOver" Value="true"/>
							<Trigger Property="IsSelected" Value="true">
								<Setter Property="Panel.ZIndex" Value="1"/>						
							</Trigger>
							<Trigger Property="Selector.IsSelected" Value="true">
								<Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlLightBrushKey}}"/>
							</Trigger>
							<MultiTrigger>
								<MultiTrigger.Conditions>
									<Condition Property="IsSelected" Value="false"/>
									<Condition Property="IsMouseOver" Value="true"/>
								</MultiTrigger.Conditions>
							</MultiTrigger>
							<Trigger Property="TabStripPlacement" Value="Bottom"/>
							<Trigger Property="TabStripPlacement" Value="Left"/>
							<Trigger Property="TabStripPlacement" Value="Right"/>
							<MultiTrigger>
								<MultiTrigger.Conditions>
									<Condition Property="IsSelected" Value="true"/>
									<Condition Property="TabStripPlacement" Value="Top"/>
								</MultiTrigger.Conditions>
								<Setter Property="Margin" Value="-2,-2,-2,-1"/>
								<Setter Property="Margin" TargetName="Content" Value="0,0,0,1"/>
							</MultiTrigger>
							<MultiTrigger>
								<MultiTrigger.Conditions>
									<Condition Property="IsSelected" Value="true"/>
									<Condition Property="TabStripPlacement" Value="Bottom"/>
								</MultiTrigger.Conditions>
								<Setter Property="Margin" Value="-2,-1,-2,-2"/>
								<Setter Property="Margin" TargetName="Content" Value="0,1,0,0"/>
							</MultiTrigger>
							<MultiTrigger>
								<MultiTrigger.Conditions>
									<Condition Property="IsSelected" Value="true"/>
									<Condition Property="TabStripPlacement" Value="Left"/>
								</MultiTrigger.Conditions>
								<Setter Property="Margin" Value="-2,-2,-1,-2"/>
								<Setter Property="Margin" TargetName="Content" Value="0,0,1,0"/>
							</MultiTrigger>
							<MultiTrigger>
								<MultiTrigger.Conditions>
									<Condition Property="IsSelected" Value="true"/>
									<Condition Property="TabStripPlacement" Value="Right"/>
								</MultiTrigger.Conditions>
								<Setter Property="Margin" Value="-1,-2,-2,-2"/>
								<Setter Property="Margin" TargetName="Content" Value="1,0,0,0"/>
							</MultiTrigger>
							<Trigger Property="IsEnabled" Value="false">
								<Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
							</Trigger>
						</ControlTemplate.Triggers>
					</ControlTemplate>
				</Setter.Value>
			</Setter>
		</Style>
		<Style x:Key="LabelNormal" TargetType="{x:Type Label}">
			<Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
			<Setter Property="Background" Value="Transparent"/>
			<Setter Property="Padding" Value="5"/>
			<Setter Property="HorizontalContentAlignment" Value="Left"/>
			<Setter Property="VerticalContentAlignment" Value="Top"/>
			<Setter Property="Template">
				<Setter.Value>
					<ControlTemplate TargetType="{x:Type Label}">
						<Grid Background="{TemplateBinding Background}" SnapsToDevicePixels="true" Height="23" HorizontalAlignment="Center" VerticalAlignment="Center">
							<Rectangle RadiusY="5" RadiusX="5" StrokeThickness="2">
								<Rectangle.Fill>
									<LinearGradientBrush EndPoint="1.034,1.024" StartPoint="0.015,-0.096">
										<GradientStop Color="{DynamicResource GreenLeft}" Offset="0"/>
										<GradientStop Color="{DynamicResource GreenRight}" Offset="1"/>
									</LinearGradientBrush>
								</Rectangle.Fill>
							</Rectangle>
							<ContentPresenter RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" HorizontalAlignment="Center" VerticalAlignment="Center" Margin="10,0" Height="Auto"/>
						</Grid>
						<ControlTemplate.Triggers>
							<Trigger Property="IsEnabled" Value="false">
								<Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
							</Trigger>
						</ControlTemplate.Triggers>
					</ControlTemplate>
				</Setter.Value>
			</Setter>
		</Style>
		<Style x:Key="CheckBoxNormal" TargetType="{x:Type CheckBox}">
			<Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
			<Setter Property="Background" Value="{StaticResource CheckBoxFillNormal}"/>
			<Setter Property="BorderBrush" Value="{StaticResource CheckBoxStroke}"/>
			<Setter Property="BorderThickness" Value="1"/>
			<Setter Property="FocusVisualStyle" Value="{StaticResource EmptyCheckBoxFocusVisual}"/>
			<Setter Property="Template">
				<Setter.Value>
					<ControlTemplate TargetType="{x:Type CheckBox}">
						<BulletDecorator Background="Transparent" SnapsToDevicePixels="true">
							<BulletDecorator.Bullet>
								<Microsoft_Windows_Themes:BulletChrome BorderBrush="{TemplateBinding BorderBrush}" Background="{TemplateBinding Background}" IsChecked="{TemplateBinding IsChecked}" RenderMouseOver="{TemplateBinding IsMouseOver}" RenderPressed="{TemplateBinding IsPressed}"/>
							</BulletDecorator.Bullet>
							<VisualStateManager.VisualStateGroups>
								<VisualStateGroup x:Name="CommonStates">
									<VisualState x:Name="Normal"/>
									<VisualState x:Name="MouseOver"/>
									<VisualState x:Name="Pressed"/>
									<VisualState x:Name="Disabled"/>
								</VisualStateGroup>
								<VisualStateGroup x:Name="FocusStates">
									<VisualState x:Name="Unfocused"/>
									<VisualState x:Name="Focused"/>
								</VisualStateGroup>
								<VisualStateGroup x:Name="CheckStates">
									<VisualState x:Name="Checked"/>
									<VisualState x:Name="Unchecked"/>
									<VisualState x:Name="Indeterminate"/>
								</VisualStateGroup>
								<VisualStateGroup x:Name="ValidationStates">
									<VisualState x:Name="Valid"/>
									<VisualState x:Name="InvalidFocused"/>
									<VisualState x:Name="InvalidUnfocused"/>
								</VisualStateGroup>
							</VisualStateManager.VisualStateGroups>
							<ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
						</BulletDecorator>
						<ControlTemplate.Triggers>
							<Trigger Property="HasContent" Value="true">
								<Setter Property="FocusVisualStyle" Value="{StaticResource CheckRadioFocusVisual}"/>
								<Setter Property="Padding" Value="4,0,0,0"/>
							</Trigger>
							<Trigger Property="IsEnabled" Value="false">
								<Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
							</Trigger>
						</ControlTemplate.Triggers>
					</ControlTemplate>
				</Setter.Value>
			</Setter>
		</Style>
		<SolidColorBrush x:Key="GreenHighlight" Color="#FF28978A"/>
		<Style x:Key="ComboBoxItemCase" TargetType="{x:Type ComboBoxItem}">
			<Setter Property="HorizontalContentAlignment" Value="{Binding HorizontalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}"/>
			<Setter Property="VerticalContentAlignment" Value="{Binding VerticalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}"/>
			<Setter Property="Padding" Value="3,0,3,0"/>
			<Setter Property="Background" Value="Transparent"/>
			<Setter Property="Template">
				<Setter.Value>
					<ControlTemplate TargetType="{x:Type ComboBoxItem}">
						<Grid x:Name="Bd" Background="{TemplateBinding Background}" SnapsToDevicePixels="true">
							<VisualStateManager.VisualStateGroups>
								<VisualStateGroup x:Name="CommonStates">
									<VisualState x:Name="Normal"/>
									<VisualState x:Name="MouseOver">
										<Storyboard>
											<ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Shape.Fill).(SolidColorBrush.Color)" Storyboard.TargetName="rectangle">
												<EasingColorKeyFrame KeyTime="0" Value="#FFC6C6C6"/>
											</ColorAnimationUsingKeyFrames>
										</Storyboard>
									</VisualState>
									<VisualState x:Name="Disabled"/>
								</VisualStateGroup>
								<VisualStateGroup x:Name="SelectionStates">
									<VisualState x:Name="Unselected"/>
									<VisualState x:Name="Selected">
										<Storyboard>
											<ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Shape.Fill).(SolidColorBrush.Color)" Storyboard.TargetName="rectangle">
												<EasingColorKeyFrame KeyTime="0" Value="#FFC6C6C6"/>
											</ColorAnimationUsingKeyFrames>
										</Storyboard>
									</VisualState>
									<VisualState x:Name="SelectedUnfocused"/>
								</VisualStateGroup>
							</VisualStateManager.VisualStateGroups>
							<Rectangle x:Name="rectangle" StrokeThickness="0.5" Stroke="Black" Fill="#FFF4F4F4"/>
							<ContentPresenter SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" HorizontalAlignment="Center" VerticalAlignment="Stretch" Margin="0,5"/>
						</Grid>
						<ControlTemplate.Triggers>
							<Trigger Property="IsHighlighted" Value="true">
								<Setter Property="Foreground" Value="{DynamicResource GreenHighlight}"/>
							</Trigger>
							<Trigger Property="IsEnabled" Value="false">
								<Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
							</Trigger>
						</ControlTemplate.Triggers>
					</ControlTemplate>
				</Setter.Value>
			</Setter>
		</Style>
		<SolidColorBrush x:Key="white2" Color="WhiteSmoke"/>
		<Style x:Key="ListBoxItemleftSubmenu" TargetType="{x:Type ListBoxItem}">
			<Setter Property="Template">
				<Setter.Value>
					<ControlTemplate TargetType="{x:Type ListBoxItem}">
						<Grid>
							<VisualStateManager.VisualStateGroups>
								<VisualStateGroup x:Name="SelectionStates">
									<VisualState x:Name="Unselected"/>
									<VisualState x:Name="Selected">
										<Storyboard>
											<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="path">
												<DiscreteObjectKeyFrame KeyTime="0" Value="{x:Static Visibility.Visible}"/>
											</ObjectAnimationUsingKeyFrames>
										</Storyboard>
									</VisualState>
									<VisualState x:Name="SelectedUnfocused">
										<Storyboard>
											<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="path">
												<DiscreteObjectKeyFrame KeyTime="0" Value="{x:Static Visibility.Visible}"/>
											</ObjectAnimationUsingKeyFrames>
										</Storyboard>
									</VisualState>
								</VisualStateGroup>
								<VisualStateGroup x:Name="CommonStates">
									<VisualState x:Name="Normal"/>
									<VisualState x:Name="MouseOver"/>
									<VisualState x:Name="Disabled"/>
								</VisualStateGroup>
							</VisualStateManager.VisualStateGroups>
							<Rectangle x:Name="MenuBg2" Style="{DynamicResource RectangleStyle1}" Stroke="#FF414141" Cursor="Hand" />
							<ContentPresenter x:Name="contentPresenter" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" OpacityMask="{x:Null}" Height="21.117" Width="Auto" HorizontalAlignment="Center" VerticalAlignment="Center" Cursor="Hand"/>
							<Path x:Name="path" Data="M24.657486,0.5 L24.657486,33.806126 0.5,33.806126 z" HorizontalAlignment="Right" Height="27" Margin="0,0,1,1" Stretch="Fill" VerticalAlignment="Bottom" Width="20" Visibility="Collapsed">
								<Path.Fill>
									<LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
										<GradientStop Color="{DynamicResource GreenLeft}" Offset="0"/>
										<GradientStop Color="{DynamicResource GreenRight}" Offset="1"/>
									</LinearGradientBrush>
								</Path.Fill>
								<Path.Stroke>
									<LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
										<GradientStop Color="{DynamicResource GreenLeft}" Offset="0"/>
										<GradientStop Color="{DynamicResource GreenRight}" Offset="1"/>
									</LinearGradientBrush>
								</Path.Stroke>
							</Path>
						</Grid>
					</ControlTemplate>
				</Setter.Value>
			</Setter>
		</Style>
		<Color x:Key="#229229229">#FFE5E5E5</Color>
		<Style x:Key="TextBoxlogin" BasedOn="{x:Null}" TargetType="{x:Type TextBox}">
			<Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
			<Setter Property="Background" Value="{DynamicResource {x:Static SystemColors.WindowBrushKey}}"/>
			<Setter Property="BorderBrush" Value="{StaticResource TextBoxBorder}"/>
			<Setter Property="BorderThickness" Value="1"/>
			<Setter Property="Padding" Value="1"/>
			<Setter Property="AllowDrop" Value="true"/>
			<Setter Property="FocusVisualStyle" Value="{x:Null}"/>
			<Setter Property="ScrollViewer.PanningMode" Value="VerticalFirst"/>
			<Setter Property="Stylus.IsFlicksEnabled" Value="False"/>
			<Setter Property="Template">
				<Setter.Value>
					<ControlTemplate TargetType="{x:Type TextBox}">
						<Grid Height="Auto" Width="Auto">
							<ScrollViewer x:Name="PART_ContentHost" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" d:LayoutOverrides="Width, Height" VerticalAlignment="Stretch" Template="{DynamicResource ScrollViewerlogin}">
								<ScrollViewer.Background>
									<SolidColorBrush Color="{DynamicResource white}"/>
								</ScrollViewer.Background>
							</ScrollViewer>
						</Grid>
						<ControlTemplate.Triggers>
							<Trigger Property="IsEnabled" Value="false">
								<Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
							</Trigger>
						</ControlTemplate.Triggers>
					</ControlTemplate>
				</Setter.Value>
			</Setter>
		</Style>
		<Style x:Key="ButtonLogin" TargetType="{x:Type Button}">
			<Setter Property="FocusVisualStyle" Value="{StaticResource ButtonFocusVisual}"/>
			<Setter Property="Background" Value="{StaticResource ButtonNormalBackground}"/>
			<Setter Property="BorderBrush" Value="{StaticResource ButtonNormalBorder}"/>
			<Setter Property="BorderThickness" Value="1"/>
			<Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
			<Setter Property="HorizontalContentAlignment" Value="Center"/>
			<Setter Property="VerticalContentAlignment" Value="Center"/>
			<Setter Property="Padding" Value="1"/>
			<Setter Property="Template">
				<Setter.Value>
					<ControlTemplate TargetType="{x:Type Button}">
						<Grid>
							<VisualStateManager.VisualStateGroups>
								<VisualStateGroup x:Name="CommonStates">
									<VisualState x:Name="Normal"/>
									<VisualState x:Name="MouseOver"/>
									<VisualState x:Name="Pressed">
										<Storyboard>
											<DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Effect).(DropShadowEffect.BlurRadius)" Storyboard.TargetName="rectangle">
												<EasingDoubleKeyFrame KeyTime="0" Value="5"/>
											</DoubleAnimationUsingKeyFrames>
										</Storyboard>
									</VisualState>
									<VisualState x:Name="Disabled"/>
								</VisualStateGroup>
							</VisualStateManager.VisualStateGroups>
							<Rectangle x:Name="rectangle" Stroke="{x:Null}" Cursor="Hand">
								<Rectangle.Effect>
									<DropShadowEffect ShadowDepth="0" BlurRadius="20" Color="{DynamicResource #122122122}"/>
								</Rectangle.Effect>
								<Rectangle.Fill>
									<SolidColorBrush Color="{DynamicResource GreenRight}"/>
								</Rectangle.Fill>
							</Rectangle>
							<ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" Cursor="Hand">
								<ContentPresenter.Effect>
									<DropShadowEffect ShadowDepth="1" BlurRadius="1" Color="{DynamicResource LineColor#184184184}"/>
								</ContentPresenter.Effect>
							</ContentPresenter>
						</Grid>
						<ControlTemplate.Triggers>
							<Trigger Property="IsKeyboardFocused" Value="true">

							</Trigger>
							<Trigger Property="ToggleButton.IsChecked" Value="true"/>
							<Trigger Property="IsEnabled" Value="false">
								<Setter Property="Foreground" Value="#ADADAD"/>
							</Trigger>
						</ControlTemplate.Triggers>
					</ControlTemplate>
				</Setter.Value>
			</Setter>
		</Style>
		<ControlTemplate x:Key="ScrollViewerlogin" TargetType="{x:Type ScrollViewer}">
			<Grid x:Name="Grid" Background="{TemplateBinding Background}">
				<Grid.ColumnDefinitions>
					<ColumnDefinition Width="*"/>
					<ColumnDefinition Width="Auto"/>
				</Grid.ColumnDefinitions>
				<Grid.RowDefinitions>
					<RowDefinition Height="*"/>
					<RowDefinition Height="Auto"/>
				</Grid.RowDefinitions>
				<Rectangle x:Name="Corner" Grid.Column="1" Fill="{DynamicResource {x:Static SystemColors.ControlBrushKey}}" Grid.Row="1"/>
				<ScrollContentPresenter x:Name="PART_ScrollContentPresenter" CanContentScroll="{TemplateBinding CanContentScroll}" CanHorizontallyScroll="False" CanVerticallyScroll="False" ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" Grid.Column="0" Grid.Row="0" HorizontalAlignment="Left" VerticalAlignment="Center" Margin="20,0,0,0"/>
				<ScrollBar x:Name="PART_VerticalScrollBar" AutomationProperties.AutomationId="VerticalScrollBar" Cursor="Arrow" Grid.Column="1" Maximum="{TemplateBinding ScrollableHeight}" Minimum="0" Grid.Row="0" Visibility="{TemplateBinding ComputedVerticalScrollBarVisibility}" Value="{Binding VerticalOffset, Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}" ViewportSize="{TemplateBinding ViewportHeight}"/>
				<ScrollBar x:Name="PART_HorizontalScrollBar" AutomationProperties.AutomationId="HorizontalScrollBar" Cursor="Arrow" Grid.Column="0" Maximum="{TemplateBinding ScrollableWidth}" Minimum="0" Orientation="Horizontal" Grid.Row="1" Visibility="{TemplateBinding ComputedHorizontalScrollBarVisibility}" Value="{Binding HorizontalOffset, Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}" ViewportSize="{TemplateBinding ViewportWidth}"/>
			</Grid>
		</ControlTemplate>
		<Style x:Key="LabelLoginbg" TargetType="{x:Type Label}">
			<Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
			<Setter Property="Background" Value="Transparent"/>
			<Setter Property="Padding" Value="5"/>
			<Setter Property="HorizontalContentAlignment" Value="Left"/>
			<Setter Property="VerticalContentAlignment" Value="Top"/>
			<Setter Property="Template">
				<Setter.Value>
					<ControlTemplate TargetType="{x:Type Label}">
						<Grid SnapsToDevicePixels="true">
							<Grid.Background>
								<SolidColorBrush Color="{DynamicResource white}"/>
							</Grid.Background>
							<ContentPresenter RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" HorizontalAlignment="Left" VerticalAlignment="Center" Margin="20,0,0,0"/>
						</Grid>
						<ControlTemplate.Triggers>
							<Trigger Property="IsEnabled" Value="false">
								<Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
							</Trigger>
						</ControlTemplate.Triggers>
					</ControlTemplate>
				</Setter.Value>
			</Setter>
		</Style>
		<SolidColorBrush x:Key="BrushLoginWord" Color="{DynamicResource LineColor#184184184}"/>
		<Style x:Key="PasswordBoxlogin" TargetType="{x:Type PasswordBox}">
			<Setter Property="Background" Value="{DynamicResource {x:Static SystemColors.WindowBrushKey}}"/>
			<Setter Property="BorderBrush" Value="{StaticResource TextBoxBorder}"/>
			<Setter Property="FontFamily" Value="Times New Roman"/>
			<Setter Property="PasswordChar" Value="●"/>
			<Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
			<Setter Property="KeyboardNavigation.TabNavigation" Value="None"/>
			<Setter Property="BorderThickness" Value="1"/>
			<Setter Property="HorizontalContentAlignment" Value="Left"/>
			<Setter Property="Padding" Value="1"/>
			<Setter Property="FocusVisualStyle" Value="{x:Null}"/>
			<Setter Property="AllowDrop" Value="true"/>
			<Setter Property="ScrollViewer.PanningMode" Value="VerticalFirst"/>
			<Setter Property="Stylus.IsFlicksEnabled" Value="False"/>
			<Setter Property="Template">
				<Setter.Value>
					<ControlTemplate TargetType="{x:Type PasswordBox}">
						<Grid>
							<ScrollViewer x:Name="PART_ContentHost" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" Margin="20,0,0,0"/>
						</Grid>
						<ControlTemplate.Triggers>
							<Trigger Property="IsEnabled" Value="false">
								<Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
							</Trigger>
						</ControlTemplate.Triggers>
					</ControlTemplate>
				</Setter.Value>
			</Setter>
		</Style>
		<Style x:Key="ButtonRefresh" TargetType="{x:Type Button}">
			<Setter Property="FocusVisualStyle" Value="{StaticResource ButtonFocusVisual}"/>
			<Setter Property="Background" Value="{StaticResource ButtonNormalBackground}"/>
			<Setter Property="BorderBrush" Value="{StaticResource ButtonNormalBorder}"/>
			<Setter Property="BorderThickness" Value="1"/>
			<Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
			<Setter Property="HorizontalContentAlignment" Value="Center"/>
			<Setter Property="VerticalContentAlignment" Value="Center"/>
			<Setter Property="Padding" Value="1"/>
			<Setter Property="Template">
				<Setter.Value>
					<ControlTemplate TargetType="{x:Type Button}">
						<Grid>
							<VisualStateManager.VisualStateGroups>
								<VisualStateGroup x:Name="CommonStates">
									<VisualState x:Name="Normal"/>
									<VisualState x:Name="MouseOver"/>
									<VisualState x:Name="Pressed">
										<Storyboard>
											<DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Effect).(DropShadowEffect.BlurRadius)" Storyboard.TargetName="rectangle">
												<EasingDoubleKeyFrame KeyTime="0" Value="2"/>
											</DoubleAnimationUsingKeyFrames>
										</Storyboard>
									</VisualState>
									<VisualState x:Name="Disabled"/>
								</VisualStateGroup>
							</VisualStateManager.VisualStateGroups>
							<Rectangle x:Name="rectangle" HorizontalAlignment="Stretch" Height="Auto" RadiusY="6" RadiusX="6" VerticalAlignment="Stretch" Width="Auto" Cursor="Hand">
								<Rectangle.Effect>
									<DropShadowEffect ShadowDepth="0"/>
								</Rectangle.Effect>
								<Rectangle.Fill>
									<LinearGradientBrush EndPoint="1.017,1.037" StartPoint="0.021,0.095">
										<GradientStop Color="White" Offset="0"/>
										<GradientStop Color="{DynamicResource #235235235}" Offset="1"/>
									</LinearGradientBrush>
								</Rectangle.Fill>
							</Rectangle>
							<ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" Cursor="Hand"/>
							<Grid Width="9" Height="9">
								<ed:LineArrow Fill="{x:Null}" Stroke="Black" ArrowSize="1.5" Margin="0,0.163,1.686,0" BendAmount="1" StartCorner="TopLeft" HorizontalAlignment="Right" Width="1.197" Height="3.707" VerticalAlignment="Top" StrokeThickness="1.5" RenderTransformOrigin="0.5,0.5">
									<ed:LineArrow.RenderTransform>
										<TransformGroup>
											<ScaleTransform/>
											<SkewTransform/>
											<RotateTransform Angle="-50"/>
											<TranslateTransform/>
										</TransformGroup>
									</ed:LineArrow.RenderTransform>
								</ed:LineArrow>
								<ed:Arc ArcThickness="0" ArcThicknessUnit="Pixel" EndAngle="39" Fill="{x:Null}" Height="Auto" Stretch="None" Stroke="Black" StartAngle="-244" Width="Auto" StrokeThickness="1.5"/>
							</Grid>
						</Grid>
						<ControlTemplate.Triggers>
							<Trigger Property="IsKeyboardFocused" Value="true"/>
							<Trigger Property="ToggleButton.IsChecked" Value="true"/>
							<Trigger Property="IsEnabled" Value="false">
								<Setter Property="Foreground" Value="#ADADAD"/>
							</Trigger>
						</ControlTemplate.Triggers>
					</ControlTemplate>
				</Setter.Value>
			</Setter>
		</Style>
		<Style x:Key="TabItemHomePage" TargetType="{x:Type TabItem}">
			<Setter Property="FocusVisualStyle" Value="{StaticResource TabItemFocusVisual}"/>
			<Setter Property="Foreground" Value="Black"/>
			<Setter Property="Padding" Value="6,1,6,1"/>
			<Setter Property="BorderBrush" Value="{StaticResource TabControlNormalBorderBrush}"/>
			<Setter Property="Background" Value="{StaticResource ButtonNormalBackground}"/>
			<Setter Property="HorizontalContentAlignment" Value="Stretch"/>
			<Setter Property="VerticalContentAlignment" Value="Stretch"/>
			<Setter Property="Template">
				<Setter.Value>
					<ControlTemplate TargetType="{x:Type TabItem}">
						<Grid SnapsToDevicePixels="true">
							<Grid.ColumnDefinitions>
								<ColumnDefinition Width="13.728"/>
								<ColumnDefinition/>
							</Grid.ColumnDefinitions>
							<VisualStateManager.VisualStateGroups>
								<VisualStateGroup x:Name="SelectionStates">
									<VisualState x:Name="Unselected"/>
									<VisualState x:Name="Selected">
										<Storyboard>
											<ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Shape.Fill).(GradientBrush.GradientStops)[0].(GradientStop.Color)" Storyboard.TargetName="rectangle">
												<EasingColorKeyFrame KeyTime="0" Value="{StaticResource GreenLeft}"/>
											</ColorAnimationUsingKeyFrames>
											<ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Shape.Fill).(GradientBrush.GradientStops)[1].(GradientStop.Color)" Storyboard.TargetName="rectangle">
												<EasingColorKeyFrame KeyTime="0" Value="{StaticResource GreenRight}"/>
											</ColorAnimationUsingKeyFrames>
											<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="Bd">
												<DiscreteObjectKeyFrame KeyTime="0" Value="{x:Static Visibility.Visible}"/>
											</ObjectAnimationUsingKeyFrames>
											<ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Shape.Fill).(SolidColorBrush.Color)" Storyboard.TargetName="rectangle1">
												<EasingColorKeyFrame KeyTime="0" Value="{StaticResource white}"/>
											</ColorAnimationUsingKeyFrames>
										</Storyboard>
									</VisualState>
								</VisualStateGroup>
							</VisualStateManager.VisualStateGroups>
							<Rectangle x:Name="rectangle1" Stroke="{x:Null}" Grid.ColumnSpan="2">
								<Rectangle.Fill>
									<SolidColorBrush Color="{DynamicResource #235235235}"/>
								</Rectangle.Fill>
							</Rectangle>
							<Border x:Name="Bd" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="1,1,1,0" Padding="{TemplateBinding Padding}" Grid.ColumnSpan="2" Visibility="Collapsed"/>
							<ContentPresenter x:Name="Content" ContentSource="Header" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" Grid.Column="1" VerticalAlignment="Center" HorizontalAlignment="Left"/>
							<Rectangle x:Name="rectangle" Grid.ColumnSpan="1" Stroke="{x:Null}" Width="7" Height="13" d:LayoutOverrides="GridBox" HorizontalAlignment="Center" VerticalAlignment="Center" Margin="2,0,0,0">
								<Rectangle.Fill>
									<LinearGradientBrush EndPoint="1.056,0.43" StartPoint="-0.014,0.436">
										<GradientStop Color="{DynamicResource Menu2ndSelected}" Offset="0"/>
										<GradientStop Color="{DynamicResource Menu2ndSelected}" Offset="1"/>
									</LinearGradientBrush>
								</Rectangle.Fill>
							</Rectangle>
						</Grid>
						<ControlTemplate.Triggers>
							<Trigger Property="IsMouseOver" Value="true">
								<Setter Property="Background" TargetName="Bd" Value="{StaticResource TabItemHotBackground}"/>
							</Trigger>
							<Trigger Property="IsSelected" Value="true">
								<Setter Property="Panel.ZIndex" Value="1"/>
								<Setter Property="Background" TargetName="Bd" Value="{StaticResource TabItemSelectedBackground}"/>
							</Trigger>
							<MultiTrigger>
								<MultiTrigger.Conditions>
									<Condition Property="IsSelected" Value="false"/>
									<Condition Property="IsMouseOver" Value="true"/>
								</MultiTrigger.Conditions>
								<Setter Property="BorderBrush" TargetName="Bd" Value="{StaticResource TabItemHotBorderBrush}"/>
							</MultiTrigger>
							<Trigger Property="TabStripPlacement" Value="Bottom">
								<Setter Property="BorderThickness" TargetName="Bd" Value="1,0,1,1"/>
							</Trigger>
							<Trigger Property="TabStripPlacement" Value="Left">
								<Setter Property="BorderThickness" TargetName="Bd" Value="1,1,0,1"/>
							</Trigger>
							<Trigger Property="TabStripPlacement" Value="Right">
								<Setter Property="BorderThickness" TargetName="Bd" Value="0,1,1,1"/>
							</Trigger>
							<MultiTrigger>
								<MultiTrigger.Conditions>
									<Condition Property="IsSelected" Value="true"/>
									<Condition Property="TabStripPlacement" Value="Top"/>
								</MultiTrigger.Conditions>
								<Setter Property="Margin" Value="-2,-2,-2,-1"/>
								<Setter Property="Margin" TargetName="Content" Value="0,0,0,1"/>
							</MultiTrigger>
							<MultiTrigger>
								<MultiTrigger.Conditions>
									<Condition Property="IsSelected" Value="true"/>
									<Condition Property="TabStripPlacement" Value="Bottom"/>
								</MultiTrigger.Conditions>
								<Setter Property="Margin" Value="-2,-1,-2,-2"/>
								<Setter Property="Margin" TargetName="Content" Value="0,1,0,0"/>
							</MultiTrigger>
							<MultiTrigger>
								<MultiTrigger.Conditions>
									<Condition Property="IsSelected" Value="true"/>
									<Condition Property="TabStripPlacement" Value="Left"/>
								</MultiTrigger.Conditions>
								<Setter Property="Margin" Value="-2,-2,-1,-2"/>
								<Setter Property="Margin" TargetName="Content" Value="0,0,1,0"/>
							</MultiTrigger>
							<MultiTrigger>
								<MultiTrigger.Conditions>
									<Condition Property="IsSelected" Value="true"/>
									<Condition Property="TabStripPlacement" Value="Right"/>
								</MultiTrigger.Conditions>
								<Setter Property="Margin" Value="-1,-2,-2,-2"/>
								<Setter Property="Margin" TargetName="Content" Value="1,0,0,0"/>
							</MultiTrigger>
							<Trigger Property="IsEnabled" Value="false">
								<Setter Property="Background" TargetName="Bd" Value="{StaticResource TabItemDisabledBackground}"/>
								<Setter Property="BorderBrush" TargetName="Bd" Value="{StaticResource TabItemDisabledBorderBrush}"/>
								<Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
							</Trigger>
						</ControlTemplate.Triggers>
					</ControlTemplate>
				</Setter.Value>
			</Setter>
		</Style>
		<Style x:Key="TabControlHomePage" TargetType="{x:Type TabControl}">
			<Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
			<Setter Property="Padding" Value="4,4,4,4"/>
			<Setter Property="BorderThickness" Value="1"/>
			<Setter Property="BorderBrush" Value="{StaticResource TabControlNormalBorderBrush}"/>
			<Setter Property="Background" Value="#F9F9F9"/>
			<Setter Property="HorizontalContentAlignment" Value="Center"/>
			<Setter Property="VerticalContentAlignment" Value="Center"/>
			<Setter Property="Template">
				<Setter.Value>
					<ControlTemplate TargetType="{x:Type TabControl}">
						<Grid ClipToBounds="true" SnapsToDevicePixels="true" KeyboardNavigation.TabNavigation="Local">
							<Grid.ColumnDefinitions>
								<ColumnDefinition x:Name="ColumnDefinition0"/>
								<ColumnDefinition x:Name="ColumnDefinition1" Width="0"/>
							</Grid.ColumnDefinitions>
							<Grid.RowDefinitions>
								<RowDefinition x:Name="RowDefinition0" Height="Auto"/>
								<RowDefinition x:Name="RowDefinition1" Height="*"/>
							</Grid.RowDefinitions>
							<TabPanel x:Name="HeaderPanel" Grid.Column="0" IsItemsHost="true" Margin="2,2,2,0" Grid.Row="0" KeyboardNavigation.TabIndex="1" Panel.ZIndex="1"/>
							<Grid x:Name="ContentPanel" Background="{TemplateBinding Background}" Grid.Column="0" KeyboardNavigation.DirectionalNavigation="Contained" Grid.Row="1" KeyboardNavigation.TabIndex="2" KeyboardNavigation.TabNavigation="Local" Margin="0" >
								<ContentPresenter x:Name="PART_SelectedContentHost" ContentSource="SelectedContent" Margin="10,13,10,10" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
							</Grid>
						</Grid>
						<ControlTemplate.Triggers>
							<Trigger Property="TabStripPlacement" Value="Bottom">
								<Setter Property="Grid.Row" TargetName="HeaderPanel" Value="1"/>
								<Setter Property="Height" TargetName="RowDefinition0" Value="*"/>
								<Setter Property="Height" TargetName="RowDefinition1" Value="Auto"/>
								<Setter Property="Margin" TargetName="HeaderPanel" Value="2,0,2,2"/>
							</Trigger>
							<Trigger Property="TabStripPlacement" Value="Left">
								<Setter Property="Grid.Row" TargetName="HeaderPanel" Value="0"/>
								<Setter Property="Grid.Column" TargetName="HeaderPanel" Value="0"/>
								<Setter Property="Width" TargetName="ColumnDefinition0" Value="Auto"/>
								<Setter Property="Width" TargetName="ColumnDefinition1" Value="*"/>
								<Setter Property="Height" TargetName="RowDefinition0" Value="*"/>
								<Setter Property="Height" TargetName="RowDefinition1" Value="0"/>
								<Setter Property="Margin" TargetName="HeaderPanel" Value="2,2,0,2"/>
							</Trigger>
							<Trigger Property="TabStripPlacement" Value="Right">
								<Setter Property="Grid.Row" TargetName="HeaderPanel" Value="0"/>
								<Setter Property="Grid.Column" TargetName="HeaderPanel" Value="1"/>
								<Setter Property="Width" TargetName="ColumnDefinition0" Value="*"/>
								<Setter Property="Width" TargetName="ColumnDefinition1" Value="Auto"/>
								<Setter Property="Height" TargetName="RowDefinition0" Value="*"/>
								<Setter Property="Height" TargetName="RowDefinition1" Value="0"/>
								<Setter Property="Margin" TargetName="HeaderPanel" Value="0,2,2,2"/>
							</Trigger>
							<Trigger Property="IsEnabled" Value="false">
								<Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
							</Trigger>
						</ControlTemplate.Triggers>
					</ControlTemplate>
				</Setter.Value>
			</Setter>
		</Style>
	</Application.Resources>
</Application>